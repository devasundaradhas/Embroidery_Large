Imports System.IO
Imports Microsoft.Reporting.WinForms.ReportViewer

Public Class Report_Details_1

    Implements Interface_MDIActions

    Private con As New SqlClient.SqlConnection(Common_Procedures.Connection_String)
    Private RptHeading1 As String = ""
    Private RptHeading2 As String = ""
    Private RptHeading3 As String = ""
    Private CompName As String = ""
    Private CompAdd1 As String = ""
    Private CompAdd2 As String = ""
    Private RptIpDet_ReportGroupName As String = ""
    Private RptIpDet_ReportName As String = ""
    Private RptIpDet_ReportHeading As String = ""
    Private RptIpDet_IsGridReport As Boolean = False
    Private RptIpDet_ReportInputs As String = ""
    Private Prec_ActCtrl As New Control
    Private vcbo_KeyDwnVal As Double = 0
    Private RV As New Microsoft.Reporting.WinForms.ReportViewer
    Public Structure Report_ComboDetails

        Dim PKey As String
        Dim TableName As String
        Dim Selection_FieldName As String
        Dim Return_FieldName As String
        Dim Condition As String
        Dim Display_Name As String
        Dim BlankFieldCondition As String
        Dim CtrlType_Cbo_OR_Txt As String
        Dim MultiSelection_Status As Boolean
        Dim MultiSelectedIdNos_AsString As String
        Dim MultiSelectedNames_AsString As String
        Dim MultiSelectedIdNos_ForInQuery As String
        Dim MultiSelectedNames_ForInQuery As String

        Dim Filter_Based_On_Prev_Col As Boolean
        Dim Prev_Id_Column As String

    End Structure

    Private RptCboDet(10) As Report_ComboDetails

    Public RptSubReport_Index As Integer = 0

    Public Structure SubReport_Details

        Dim ReportName As String
        Dim ReportGroupName As String
        Dim ReportHeading As String
        Dim ReportInputs As String
        Dim IsGridReport As Boolean

        Dim CurrentRowVal As Integer
        Dim TopRowVal As Integer

        Dim DateInp_Value1 As Date
        Dim DateInp_Value2 As Date
        Dim CboInp_Text1 As String
        Dim CboInp_Text2 As String
        Dim CboInp_Text3 As String
        Dim CboInp_Text4 As String
        Dim CboInp_Text5 As String


    End Structure

    Public RptSubReportDet(10) As SubReport_Details

    Public Structure SubReport_InputDetails

        Dim PKey As String
        Dim TableName As String
        Dim Selection_FieldName As String
        Dim Return_FieldName As String
        Dim Condition As String
        Dim Display_Name As String
        Dim BlankFieldCondition As String
        Dim CtrlType_Cbo_OR_Txt As String

    End Structure

    Public RptSubReportInpDet(10, 10) As SubReport_InputDetails

    Dim state_str As String = ""
    Dim vEntCode As String = ""

    Private Sub clear()

        pnl_Back.Enabled = True

        'lbl_ReportHeading.Text = ""
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1119" Then 'Alphonsa
            dtp_FromDate.Text = Date.Today
            If dtp_FromDate.Visible = False Then
                dtp_FromDate.Text = Date.Today
            End If
        Else
            dtp_FromDate.Text = Common_Procedures.Company_FromDate
        End If


        If Val(Common_Procedures.settings.Report_Show_CurrentDate_IN_ToDate) = 1 Then
            dtp_ToDate.Text = Date.Today
            If dtp_ToDate.Visible = False Then
                dtp_FromDate.Text = Date.Today
            End If

        Else
            dtp_ToDate.Text = Common_Procedures.Company_ToDate
            If dtp_ToDate.Visible = False Then
                dtp_FromDate.Text = Common_Procedures.Company_ToDate
            End If

        End If

        If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending aging analysis" Or Trim(LCase(RptIpDet_ReportName)) = "agent billpending aging analysis - single" Or Trim(LCase(RptIpDet_ReportName)) = "agent billpending aging analysis - all" Or Trim(LCase(RptIpDet_ReportName)) = "day transaction details" Then
            dtp_FromDate.Text = Date.Today
        End If

        If Trim(LCase(RptIpDet_ReportName)) = "party amount receipt register" Then
            dtp_ToDate.Text = Common_Procedures.Company_ToDate
        End If

        If Trim(LCase(RptIpDet_ReportName)) = "jobwork day transaction details" Then
            dtp_FromDate.Text = Date.Today
            dtp_ToDate.Text = Date.Today
        End If

        cbo_Inputs1.Text = ""
        cbo_Inputs3.Text = ""
        cbo_Inputs2.Text = ""
        cbo_Inputs4.Text = ""
        cbo_Inputs5.Text = ""
        cbo_Inputs6.Text = ""
        cbo_Inputs7.Text = ""
        cbo_Inputs8.Text = ""
        cbo_Inputs9.Text = ""

        If cbo_Inputs2.Visible = True Then
            If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending aging analysis" Then
                cbo_Inputs2.Text = "30,60,90,120"
            ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill balance - daywise" Then
                cbo_Inputs2.Text = "45"
            End If
        End If

    End Sub

    Private Sub ControlGotFocus(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim txtbx As TextBox
        Dim combobx As ComboBox
        On Error Resume Next

        If TypeOf Me.ActiveControl Is TextBox Or TypeOf Me.ActiveControl Is ComboBox Or TypeOf Me.ActiveControl Is Button Or TypeOf Me.ActiveControl Is CheckBox Then
            Me.ActiveControl.BackColor = Color.Lime
            Me.ActiveControl.ForeColor = Color.Blue
        End If

        If TypeOf Me.ActiveControl Is TextBox Then
            txtbx = Me.ActiveControl
            txtbx.SelectAll()
        ElseIf TypeOf Me.ActiveControl Is ComboBox Then
            combobx = Me.ActiveControl
            combobx.SelectAll()
        End If

        If Me.ActiveControl.Name <> dgv_Report.Name Then
            Grid_Cell_DeSelect()
        End If

        Prec_ActCtrl = Me.ActiveControl

    End Sub

    Private Sub ControlLostFocus(ByVal sender As Object, ByVal e As System.EventArgs)

        On Error Resume Next

        If IsNothing(Prec_ActCtrl) = False Then
            If TypeOf Prec_ActCtrl Is TextBox Or TypeOf Prec_ActCtrl Is ComboBox Or TypeOf Prec_ActCtrl Is CheckBox Then
                Prec_ActCtrl.BackColor = Color.White
                Prec_ActCtrl.ForeColor = Color.Black

            ElseIf TypeOf Prec_ActCtrl Is Button Then
                Prec_ActCtrl.BackColor = Color.FromArgb(2, 57, 111)
                Prec_ActCtrl.ForeColor = Color.White

            End If
        End If

    End Sub

    Private Sub Grid_Cell_DeSelect()
        On Error Resume Next
        If Not IsNothing(dgv_Report.CurrentCell) Then
            dgv_Report.CurrentCell.Selected = False
        End If
    End Sub

    Private Function Design_ReportInputs() As Integer
        Dim vRptInpts As String = "", vRptInptsWithAstrik As String = ""
        Dim strRepInput As String = ""
        Dim CbInc As Integer = 0, Cb_PoAr_Indx As Integer = 0
        Dim LftAr_Cbo_LblBx(15) As Integer, LftAr_CboBx(15) As Integer, TpAr_CboBx(15) As Integer
        Dim LftAr_Dte_LblBx(2) As Integer, LftAr_DteCtrl(2) As Integer, TpAr_DteCtrl(2) As Integer
        Dim a() As String, b() As String
        Dim i As Integer = 0, K As Integer = 0
        Dim TableName As String, Selection_FieldName As String, Return_FieldName As String
        Dim Condition As String, Display_Name As String, CtrlType_CboTxt As String, BlankFieldCondition As String
        Dim ShowCompCol_STS As Boolean = False
        Dim vScrnWdth As Single = 0
        Dim vCboObj As New ComboBox
        Dim vLblObj As New Label
        Dim vNoof_Inps As Integer = 0



        ShowCompCol_STS = Common_Procedures.Show_CompanyCondition_for_Report(con)

        For i = 1 To 10
            RptCboDet(i).PKey = ""
            RptCboDet(i).TableName = ""
            RptCboDet(i).Selection_FieldName = ""
            RptCboDet(i).Return_FieldName = ""
            RptCboDet(i).Condition = ""
            RptCboDet(i).BlankFieldCondition = ""
            RptCboDet(i).Display_Name = ""
            RptCboDet(i).CtrlType_Cbo_OR_Txt = ""
        Next

        CbInc = 0
        Cb_PoAr_Indx = 0
        Erase LftAr_CboBx
        Erase TpAr_CboBx
        Erase LftAr_DteCtrl
        Erase TpAr_DteCtrl

        LftAr_Cbo_LblBx = New Integer(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        LftAr_CboBx = New Integer(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        TpAr_CboBx = New Integer(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        LftAr_Dte_LblBx = New Integer(2) {0, 0, 0}
        LftAr_DteCtrl = New Integer(2) {0, 0, 0}
        TpAr_DteCtrl = New Integer(2) {0, 0, 0}

        LftAr_Dte_LblBx(1) = 12
        LftAr_Dte_LblBx(2) = 244

        LftAr_DteCtrl(1) = 107
        LftAr_DteCtrl(2) = 305

        TpAr_DteCtrl(1) = 41
        TpAr_DteCtrl(2) = 41

        vScrnWdth = My.Computer.Screen.Bounds.Width

        If vScrnWdth > 1300 Then

            LftAr_Cbo_LblBx(1) = 426
            LftAr_Cbo_LblBx(2) = 840
            LftAr_Cbo_LblBx(3) = 12
            LftAr_Cbo_LblBx(4) = 426
            LftAr_Cbo_LblBx(5) = 840
            LftAr_Cbo_LblBx(6) = 12
            LftAr_Cbo_LblBx(7) = 426
            LftAr_Cbo_LblBx(8) = 840
            LftAr_Cbo_LblBx(9) = 12
            LftAr_Cbo_LblBx(10) = 426
            LftAr_Cbo_LblBx(11) = 840
            LftAr_Cbo_LblBx(12) = 12
            LftAr_Cbo_LblBx(13) = 426
            LftAr_Cbo_LblBx(14) = 840
            LftAr_Cbo_LblBx(15) = 12


            LftAr_CboBx(1) = 521
            LftAr_CboBx(2) = 935
            LftAr_CboBx(3) = 107
            LftAr_CboBx(4) = 521
            LftAr_CboBx(5) = 935
            LftAr_CboBx(6) = 107
            LftAr_CboBx(7) = 521
            LftAr_CboBx(8) = 935
            LftAr_CboBx(9) = 107
            LftAr_CboBx(10) = 521
            LftAr_CboBx(11) = 935
            LftAr_CboBx(12) = 107
            LftAr_CboBx(13) = 521
            LftAr_CboBx(14) = 935
            LftAr_CboBx(15) = 107


            TpAr_CboBx(1) = 41
            TpAr_CboBx(2) = 41
            TpAr_CboBx(3) = 67
            TpAr_CboBx(4) = 67
            TpAr_CboBx(5) = 67
            TpAr_CboBx(6) = 93
            TpAr_CboBx(7) = 93
            TpAr_CboBx(8) = 93
            TpAr_CboBx(9) = 119
            TpAr_CboBx(10) = 119
            TpAr_CboBx(11) = 119
            TpAr_CboBx(12) = 145
            TpAr_CboBx(13) = 145
            TpAr_CboBx(14) = 145
            TpAr_CboBx(15) = 171

            btn_Show.Left = Val(LftAr_CboBx(2)) + cbo_Inputs1.Width + 10
            btn_Close.Left = btn_Show.Left + btn_Show.Width + 3

            btn_Show.Top = Val(TpAr_CboBx(2))
            btn_Close.Top = btn_Show.Top

        Else

            LftAr_Cbo_LblBx(1) = 426
            LftAr_Cbo_LblBx(2) = 12
            LftAr_Cbo_LblBx(3) = 426
            LftAr_Cbo_LblBx(4) = 12
            LftAr_Cbo_LblBx(5) = 426
            LftAr_Cbo_LblBx(6) = 12
            LftAr_Cbo_LblBx(7) = 426
            LftAr_Cbo_LblBx(8) = 12
            LftAr_Cbo_LblBx(9) = 426
            LftAr_Cbo_LblBx(10) = 12
            LftAr_Cbo_LblBx(11) = 426
            LftAr_Cbo_LblBx(12) = 12
            LftAr_Cbo_LblBx(13) = 426
            LftAr_Cbo_LblBx(14) = 12
            LftAr_Cbo_LblBx(15) = 426


            LftAr_CboBx(1) = 521
            LftAr_CboBx(2) = 107
            LftAr_CboBx(3) = 521
            LftAr_CboBx(4) = 107
            LftAr_CboBx(5) = 521
            LftAr_CboBx(6) = 107
            LftAr_CboBx(7) = 521
            LftAr_CboBx(8) = 107
            LftAr_CboBx(9) = 521
            LftAr_CboBx(10) = 107
            LftAr_CboBx(11) = 521
            LftAr_CboBx(12) = 107
            LftAr_CboBx(13) = 521
            LftAr_CboBx(14) = 107
            LftAr_CboBx(15) = 521


            TpAr_CboBx(1) = 41
            TpAr_CboBx(2) = 67
            TpAr_CboBx(3) = 67
            TpAr_CboBx(4) = 93
            TpAr_CboBx(5) = 93
            TpAr_CboBx(6) = 119
            TpAr_CboBx(7) = 119
            TpAr_CboBx(8) = 145
            TpAr_CboBx(9) = 145
            TpAr_CboBx(10) = 171
            TpAr_CboBx(11) = 171
            TpAr_CboBx(12) = 197
            TpAr_CboBx(13) = 197
            TpAr_CboBx(14) = 223
            TpAr_CboBx(15) = 223


            btn_Show.Left = Val(LftAr_CboBx(1)) + cbo_Inputs1.Width + 50
            btn_Close.Left = btn_Show.Left + btn_Show.Width + 10

            btn_Show.Top = Val(TpAr_CboBx(1))
            btn_Close.Top = btn_Show.Top

        End If


        If InStr(1, Trim(UCase(RptIpDet_ReportInputs)), "2DT") = 0 And InStr(1, Trim(UCase(RptIpDet_ReportInputs)), "1DT") = 0 Then

            For K = UBound(TpAr_CboBx) To 2 Step -1
                LftAr_Cbo_LblBx(K) = LftAr_Cbo_LblBx(K - 1)
                LftAr_CboBx(K) = LftAr_CboBx(K - 1)
                TpAr_CboBx(K) = TpAr_CboBx(K - 1)
            Next

            LftAr_Cbo_LblBx(1) = LftAr_Dte_LblBx(1)
            LftAr_CboBx(1) = LftAr_DteCtrl(1)
            TpAr_CboBx(1) = TpAr_DteCtrl(1)

        End If

        lbl_FromDate.Visible = False
        dtp_FromDate.Visible = False

        lbl_ToDate.Visible = False
        dtp_ToDate.Visible = False

        lbl_Inputs1.Visible = False
        cbo_Inputs1.Visible = False

        lbl_Inputs2.Visible = False
        cbo_Inputs2.Visible = False

        lbl_Inputs3.Visible = False
        cbo_Inputs3.Visible = False

        lbl_Inputs4.Visible = False
        cbo_Inputs4.Visible = False

        lbl_Inputs5.Visible = False
        cbo_Inputs5.Visible = False

        lbl_Inputs6.Visible = False
        cbo_Inputs6.Visible = False

        lbl_Inputs7.Visible = False
        cbo_Inputs7.Visible = False

        lbl_Inputs8.Visible = False
        cbo_Inputs8.Visible = False

        lbl_Inputs9.Visible = False
        cbo_Inputs9.Visible = False

        cbo_Inputs1.Tag = ""
        cbo_Inputs2.Tag = ""
        cbo_Inputs3.Tag = ""
        cbo_Inputs4.Tag = ""
        cbo_Inputs5.Tag = ""
        cbo_Inputs6.Tag = ""
        cbo_Inputs7.Tag = ""
        cbo_Inputs8.Tag = ""
        cbo_Inputs9.Tag = ""

        cbo_Inputs1.Text = ""
        cbo_Inputs3.Text = ""
        cbo_Inputs2.Text = ""
        cbo_Inputs4.Text = ""
        cbo_Inputs5.Text = ""
        cbo_Inputs6.Text = ""
        cbo_Inputs7.Text = ""
        cbo_Inputs8.Text = ""
        cbo_Inputs9.Text = ""

        strRepInput = Replace(Trim(RptIpDet_ReportInputs), "*", "")
        a = Split(Trim(strRepInput), ",")

        b = Split(Trim(RptIpDet_ReportInputs), ",")

        For i = 0 To UBound(a)

            If Trim(a(i)) <> "" Then

                vNoof_Inps = vNoof_Inps + 1

                vRptInpts = Trim(a(i))

                vRptInptsWithAstrik = Trim(b(i))

                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = ""
                BlankFieldCondition = ""
                CtrlType_CboTxt = ""

                If Trim(UCase(vRptInpts)) = "2DT" Or Trim(UCase(vRptInpts)) = "1DT" Then

                    lbl_FromDate.Visible = True
                    dtp_FromDate.Visible = True

                    lbl_FromDate.Text = "Date From *"
                    If Trim(UCase(vRptInpts)) = "1DT" Then
                        lbl_FromDate.Text = "Up To *"
                    End If

                    lbl_FromDate.Left = LftAr_Dte_LblBx(1)
                    lbl_FromDate.Top = TpAr_DteCtrl(1) + 4

                    dtp_FromDate.Left = LftAr_DteCtrl(1)
                    dtp_FromDate.Top = TpAr_DteCtrl(1)

                    If Trim(UCase(vRptInpts)) = "2DT" Then
                        lbl_ToDate.Visible = True
                        dtp_ToDate.Visible = True

                        lbl_ToDate.Text = "To *"

                        lbl_ToDate.Left = LftAr_Dte_LblBx(2)
                        lbl_ToDate.Top = TpAr_DteCtrl(2) + 4

                        dtp_ToDate.Left = LftAr_DteCtrl(2)
                        dtp_ToDate.Top = TpAr_DteCtrl(2)

                    End If


                Else

                    CbInc = CbInc + 1
                    Cb_PoAr_Indx = Cb_PoAr_Indx + 1

                    vCboObj = Nothing
                    vCboObj = Choose(CbInc, cbo_Inputs1, cbo_Inputs2, cbo_Inputs3, cbo_Inputs4, cbo_Inputs5, cbo_Inputs6, cbo_Inputs7, cbo_Inputs8, cbo_Inputs9)

                    vLblObj = Nothing
                    vLblObj = Choose(CbInc, lbl_Inputs1, lbl_Inputs2, lbl_Inputs3, lbl_Inputs4, lbl_Inputs5, lbl_Inputs6, lbl_Inputs7, lbl_Inputs8, lbl_Inputs9)

                    If IsNothing(vCboObj) = False Then

                        If Trim(vCboObj.Tag) = "" Then

                            vCboObj.Tag = vRptInpts

                            vLblObj.Visible = True
                            vCboObj.Visible = True

                            vLblObj.Top = Val(TpAr_CboBx(Cb_PoAr_Indx)) + 4
                            vCboObj.Top = Val(TpAr_CboBx(Cb_PoAr_Indx))

                            vLblObj.Left = Val(LftAr_Cbo_LblBx(Cb_PoAr_Indx))
                            vCboObj.Left = Val(LftAr_CboBx(Cb_PoAr_Indx))

                            get_Combo_Table_Field_Name(vRptInpts, TableName, Selection_FieldName, Return_FieldName, Condition, Display_Name, BlankFieldCondition, CtrlType_CboTxt)

                            RptCboDet(CbInc).PKey = Trim(vRptInpts)
                            RptCboDet(CbInc).TableName = Trim(TableName)
                            RptCboDet(CbInc).Selection_FieldName = Trim(Selection_FieldName)
                            RptCboDet(CbInc).Return_FieldName = Trim(Return_FieldName)
                            RptCboDet(CbInc).Condition = Trim(Condition)
                            RptCboDet(CbInc).Display_Name = Trim(Display_Name)
                            RptCboDet(CbInc).BlankFieldCondition = Trim(BlankFieldCondition)
                            RptCboDet(CbInc).CtrlType_Cbo_OR_Txt = Trim(CtrlType_CboTxt)

                            If Trim(UCase(CtrlType_CboTxt)) = "T" Then
                                vCboObj.DropDownStyle = ComboBoxStyle.Simple
                            Else
                                vCboObj.DropDownStyle = ComboBoxStyle.DropDown
                            End If

                            Common_Procedures.ComboBox_ItemSelection_SetDataSource(vCboObj, con, RptCboDet(CbInc).TableName, RptCboDet(CbInc).Selection_FieldName, RptCboDet(CbInc).Condition, RptCboDet(CbInc).BlankFieldCondition)

                            If InStr(1, Trim(UCase(vRptInptsWithAstrik)), "*" & Trim(UCase(RptCboDet(CbInc).PKey))) Or InStr(1, Trim(UCase(vRptInpts)), Trim(UCase(RptCboDet(CbInc).PKey)) & "*") Then
                                vLblObj.Text = RptCboDet(CbInc).Display_Name & " *"
                            Else
                                vLblObj.Text = RptCboDet(CbInc).Display_Name
                            End If

                            If Trim(UCase(vCboObj.Tag)) = "Z" Then
                                If ShowCompCol_STS = False Then
                                    Cb_PoAr_Indx = Cb_PoAr_Indx - 1
                                    vNoof_Inps = vNoof_Inps - 1
                                    vLblObj.Visible = False
                                    vCboObj.Visible = False
                                End If
                            End If

                        End If

                    End If

                End If

            End If

        Next i

        Return vNoof_Inps

    End Function

    Private Sub get_Combo_Table_Field_Name(ByVal PKey As String, ByRef TableName As String, ByRef Selection_FieldName As String, ByRef Return_FieldName As String, ByRef Condition As String, ByRef Display_Name As String, ByRef BlankFieldCondition As String, ByRef CtrlType_CboTxt As String)

        Dim Cmd As New SqlClient.SqlCommand

        TableName = ""
        Selection_FieldName = ""
        Return_FieldName = ""
        Condition = ""
        Display_Name = ""
        BlankFieldCondition = ""
        CtrlType_CboTxt = "C"

        Select Case Trim(UCase(PKey))

            Case "Z"

                TableName = "Company_Head"
                Selection_FieldName = "Company_ShortName"
                Return_FieldName = "Company_IdNo"
                Condition = ""
                If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
                    Condition = "(Company_Type <> 'UNACCOUNT')"
                End If
                BlankFieldCondition = "(Company_IdNo = 0)"
                Display_Name = "Company"
                CtrlType_CboTxt = "C"

            Case "G"

                TableName = "AccountsGroup_Head"
                Selection_FieldName = "AccountsGroup_Name"
                Return_FieldName = "AccountsGroup_IdNo"
                Condition = ""
                BlankFieldCondition = "(AccountsGroup_IdNo = 0)"
                Display_Name = "A/c Group Name"
                CtrlType_CboTxt = "C"

            Case "P", "L", "J", "W", "S", "A", "RW", "GOD", "DB", "OL_GOD", "SALAC", "PURAC", "GJ", "JW", "JWG", "PGW", "PW", "DELVTO", "RECFROM", "CR", "SWA", "TRANS", "PG", "BNKNAME", "CRL", "DRL"

                TableName = "Ledger_AlaisHead"
                Selection_FieldName = "Ledger_DisplayName"
                Return_FieldName = "Ledger_IdNo"
                Condition = ""
                Display_Name = "Ledger Name"
                BlankFieldCondition = "(Ledger_IdNo = 0)"
                If Trim(UCase(PKey)) = "P" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14)"
                    'Condition = "(Ledger_IdNo IN (select tZ1.Ledger_IdNo from Ledger_Head tZ1 where tZ1.AccountsGroup_IdNo = 10 or tZ1.AccountsGroup_IdNo = 14) )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "J" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'JOBWORKER' )"
                    Display_Name = "Jobworker"

                ElseIf Trim(UCase(PKey)) = "W" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'WEAVER')  and Close_status = 0 "
                    Display_Name = "Weaver Name"

                ElseIf Trim(UCase(PKey)) = "JW" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'WEAVER'  or Ledger_Type = 'JOBWORKER' )"
                    Display_Name = "Jobworker"

                ElseIf Trim(UCase(PKey)) = "JWG" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'WEAVER'  or Ledger_Type = 'JOBWORKER'  or Ledger_Type = 'GODOWN' )"
                    Display_Name = "Jobworker"

                ElseIf Trim(UCase(PKey)) = "S" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'SIZING' )"
                    Display_Name = "Sizing Name"

                ElseIf Trim(UCase(PKey)) = "A" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'AGENT' )"
                    Display_Name = "Agent Name"

                ElseIf Trim(UCase(PKey)) = "RW" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'REWINDING' )"
                    Display_Name = "Rewinding Name"

                ElseIf Trim(UCase(PKey)) = "GOD" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'GODOWN' )"
                    Display_Name = "Godown Name"

                ElseIf Trim(UCase(PKey)) = "DB" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 5 or AccountsGroup_IdNo = 6)"
                    Display_Name = "Debitor Name"

                ElseIf Trim(UCase(PKey)) = "CR" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 5 or AccountsGroup_IdNo = 6)"
                    Display_Name = "Creditor Name"

                ElseIf Trim(UCase(PKey)) = "DRL" Then
                    'Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 5 or AccountsGroup_IdNo = 6)"
                    Display_Name = "Debit Ledger"

                ElseIf Trim(UCase(PKey)) = "CRL" Then
                    'Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 5 or AccountsGroup_IdNo = 6)"
                    Display_Name = "Credit Ledger"

                ElseIf Trim(UCase(PKey)) = "OL_GOD" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'GODOWN' or (Ledger_Type = 'WEAVER' and Own_Loom_Status = 1) )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "SALAC" Then
                    Condition = "(Ledger_IdNo = 0 or (Ledger_Type = '' and AccountsGroup_IdNo = 28 ) )"
                    Display_Name = "Sales A/c"

                ElseIf Trim(UCase(PKey)) = "PURAC" Then
                    'Condition = "(Ledger_IdNo = 0 or (Ledger_Type = '' and AccountsGroup_IdNo = 27 ) or Ledger_IdNo = " & Str(Val(Common_Procedures.CommonLedger.Processing_Charges_Ac)) & " )"
                    Display_Name = "Purchase A/c"

                ElseIf Trim(UCase(PKey)) = "GJ" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'GODOWN' or Ledger_Type = 'JOBWORKER' )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "PGW" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 or Ledger_Type = 'GODOWN' or Ledger_Type = 'WEAVER' )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "PW" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 or Ledger_Type = 'WEAVER' )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "DELVTO" Then
                    Condition = "(Ledger_IdNo = 0 or (Ledger_Type = '' and (AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Ledger_Type = 'GODOWN' or Ledger_Type = 'WEAVER' or Ledger_Type = 'SIZING'  or Ledger_Type = 'REWINDING' or Ledger_Type = 'JOBWORKER' )"
                    Display_Name = "Delivery To"

                ElseIf Trim(UCase(PKey)) = "RECFROM" Then
                    Condition = "(Ledger_IdNo = 0 or (Ledger_Type = '' and (AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Ledger_Type = 'GODOWN' or Ledger_Type = 'WEAVER' or Ledger_Type = 'SIZING'  or Ledger_Type = 'REWINDING' or Ledger_Type = 'JOBWORKER' )"
                    Display_Name = "Received From"

                ElseIf Trim(UCase(PKey)) = "SWA" Then
                    Condition = "(Ledger_IdNo = 0 or Ledger_Type = 'WEAVER' or Ledger_Type = 'SIZING' or Ledger_Type = 'AGENT' )"
                    Display_Name = "Delivery To"

                ElseIf Trim(UCase(PKey)) = "TRANS" Then
                    Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'TRANSPORT' )"
                    Display_Name = "Transport"

                ElseIf Trim(UCase(PKey)) = "PG" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 6  or AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 )"
                    Display_Name = "Party Name"

                ElseIf Trim(UCase(PKey)) = "BNKNAME" Then
                    Condition = "(Ledger_IdNo = 0 or AccountsGroup_IdNo = 5)"
                    Display_Name = "Bank Name"

                End If

                CtrlType_CboTxt = "C"

            Case "PJRG"
                TableName = "Ledger_AlaisHead"
                Selection_FieldName = "Ledger_DisplayName"
                Return_FieldName = "Ledger_IdNo"
                Condition = "(Ledger_IdNo = 0  or Ledger_Type = 'JOBWORKER'  or Ledger_Type = 'REWINDING' or Ledger_Type = 'GODOWN')"
                Display_Name = "Ledger Name"
                BlankFieldCondition = "(Ledger_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "I"
                TableName = "Item_Head"
                Selection_FieldName = "Item_Name"
                Return_FieldName = "Item_IdNo"
                Condition = ""
                Display_Name = "Item Name"
                BlankFieldCondition = "(Item_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "M"
                TableName = "Mill_Head"
                Selection_FieldName = "Mill_Name"
                Return_FieldName = "Mill_IdNo"
                Condition = ""
                Display_Name = "Mill Name"
                BlankFieldCondition = "(Mill_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "C"
                TableName = "Count_Head"
                Selection_FieldName = "Count_Name"
                Return_FieldName = "Count_IdNo"
                Condition = ""
                Display_Name = "Count Name"
                BlankFieldCondition = "(Count_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "Y"
                TableName = "YarnType_Head"
                Selection_FieldName = "Yarn_Type"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Yarn Type"
                BlankFieldCondition = "(Yarn_Type = '')"
                CtrlType_CboTxt = "C"

            Case "E"
                TableName = "EndsCount_Head"
                Selection_FieldName = "EndsCount_Name"
                Return_FieldName = "EndsCount_IdNo"
                Condition = ""
                Display_Name = "Ends Count"
                BlankFieldCondition = "(EndsCount_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "BW--"
                TableName = "Beam_Width_Head"
                Selection_FieldName = "Beam_Width_Name"
                Return_FieldName = "Beam_Width_IdNo"
                Condition = ""
                Display_Name = "Beam Width"
                BlankFieldCondition = "(Beam_Width_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "Q", "PROFAB", "FAB"
                TableName = "Cloth_Head"
                Selection_FieldName = "Cloth_Name"
                Return_FieldName = "Cloth_IdNo"

                If Trim(UCase(PKey)) = "PROFAB" Then
                    Display_Name = "Fabric Name"
                    Condition = "(Cloth_Type = 'PROCESSED FABRIC')"
                ElseIf Trim(UCase(PKey)) = "Q" Then
                    Display_Name = "Fabric Name"
                    Condition = "(Cloth_Type <> 'PROCESSED FABRIC')"
                ElseIf Trim(UCase(PKey)) = "FAB" Then
                    Display_Name = "Fabric Name"
                    Condition = ""
                Else
                    Display_Name = "Cloth Name"
                    Condition = ""
                End If
                BlankFieldCondition = "(Cloth_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "CT"
                TableName = "ClothtYPE_Head"
                Selection_FieldName = "ClothType_Name"
                Return_FieldName = "ClothType_IdNo"
                Condition = ""
                Display_Name = "ClothType Name"
                BlankFieldCondition = "(ClothType_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "PI", "PIFRM", "PITO"
                TableName = "Processed_Item_Head"
                Selection_FieldName = "Processed_Item_Name"
                Return_FieldName = "Processed_Item_IdNo"
                Condition = ""
                If Trim(UCase(PKey)) = "PIFRM" Then
                    Display_Name = "Item From"
                ElseIf Trim(UCase(PKey)) = "PITO" Then
                    Display_Name = "Item To"
                Else
                    Display_Name = "Item Name"
                End If
                BlankFieldCondition = "(Processed_Item_IdNo = 0)"
                CtrlType_CboTxt = "C"


            Case "FP"
                TableName = "Processed_Item_Head"
                Selection_FieldName = "Processed_Item_Name"
                Return_FieldName = "Processed_Item_IdNo"
                Condition = "(Processed_Item_idno = 0 or Processed_Item_Type = 'FP')"
                Display_Name = "Item Name"
                BlankFieldCondition = "(Processed_Item_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "GI"
                TableName = "Processed_Item_Head"
                Selection_FieldName = "Processed_Item_Name"
                Return_FieldName = "Processed_Item_IdNo"
                Condition = "(Processed_Item_idno = 0 or Processed_Item_Type = 'GREY')"
                Display_Name = "Item Name"
                BlankFieldCondition = "(Processed_Item_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "R", "RFRM", "RTO"
                TableName = "Rack_Head"
                Selection_FieldName = "Rack_No"
                Return_FieldName = "Rack_IdNo"
                Condition = ""
                If Trim(UCase(PKey)) = "RFRM" Then
                    Display_Name = "Rack From"
                ElseIf Trim(UCase(PKey)) = "RTO" Then
                    Display_Name = "Rack To"
                Else
                    Display_Name = "Rack No"
                End If
                BlankFieldCondition = "(Rack_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "CL"
                TableName = "Colour_Head"
                Selection_FieldName = "Colour_Name"
                Return_FieldName = "Colour_IdNo"
                Condition = ""
                Display_Name = "Colour Name"
                BlankFieldCondition = "(Colour_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "SZ"
                TableName = "Size_Head"
                Selection_FieldName = "Size_Name"
                Return_FieldName = "Size_IdNo"
                Condition = ""
                Display_Name = "Size Name"
                BlankFieldCondition = "(Size_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "LT"
                TableName = "Lot_Head"
                Selection_FieldName = "Lot_No"
                Return_FieldName = "Lot_IdNo"
                Condition = ""
                Display_Name = "Lot No"
                BlankFieldCondition = "(Lot_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "AR"
                TableName = "Area_Head"
                Selection_FieldName = "Area_Name"
                Return_FieldName = "Area_IdNo"
                Condition = ""
                Display_Name = "Area Name"
                BlankFieldCondition = "(Area_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "IG"
                TableName = "ItemGroup_Head"
                Selection_FieldName = "ItemGroup_Name"
                Return_FieldName = "ItemGroup_IdNo"
                Condition = ""
                Display_Name = "Item Group"
                BlankFieldCondition = "(ItemGroup_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "CHQN"
                TableName = "Party_Amount_Receipt_Head"
                Selection_FieldName = "Cheque_No"
                Return_FieldName = "Cheque_No"
                Condition = ""
                Display_Name = "Cheque No"
                BlankFieldCondition = "(Cheque_No = '')"
                CtrlType_CboTxt = "C"

            Case "SN"
                TableName = "Stock_SizedPavu_Processing_Details"
                Selection_FieldName = "setcode_forSelection"
                Return_FieldName = "setcode_forSelection"
                Condition = ""
                Display_Name = "Set No"
                BlankFieldCondition = "(setcode_forSelection = '')"
                CtrlType_CboTxt = "C"

            Case "LM"
                TableName = "Loom_Head"
                Selection_FieldName = "Loom_Name"
                Return_FieldName = "Loom_IdNo"
                Condition = ""
                Display_Name = "Loom Name"
                BlankFieldCondition = "(Loom_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "LMT"
                TableName = "LoomType_Head"
                Selection_FieldName = "LoomType_Name"
                Return_FieldName = "LoomType_IdNo"
                Condition = ""
                Display_Name = "LoomType Name"
                BlankFieldCondition = "(LoomType_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "SH"
                TableName = "Shift_Head"
                Selection_FieldName = "Shift_Name"
                Return_FieldName = "Shift_Name"
                Condition = ""
                Display_Name = "Shift"
                BlankFieldCondition = "(Shift_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "BN"
                TableName = "Stock_SizedPavu_Processing_Details"
                Selection_FieldName = "Beam_No"
                Return_FieldName = "Beam_No"
                Condition = ""
                Display_Name = "Beam No"
                BlankFieldCondition = "(Beam_No = '')"
                CtrlType_CboTxt = "C"

            Case "DYSRNG"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Days Range"
                BlankFieldCondition = ""
                CtrlType_CboTxt = "T"

            Case "DYSFRM"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Days From"
                BlankFieldCondition = ""
                CtrlType_CboTxt = "T"

            Case "DYSTO"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Days To"
                BlankFieldCondition = ""
                CtrlType_CboTxt = "T"

            Case "ORDNO"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "ORDER NO"
                BlankFieldCondition = ""
                CtrlType_CboTxt = "T"

            Case "EM"
                TableName = "Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_Name"
                Condition = ""

                If Trim(Common_Procedures.settings.CustomerCode) = "1201" Or Trim(Common_Procedures.settings.CustomerCode) = "1117" Then
                    Display_Name = "Operator"
                Else
                    Display_Name = "Employee"
                End If

                BlankFieldCondition = "(Employee_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "OPEM"
                TableName = "Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_Name"
                Condition = ""
                Display_Name = "FRAMER"
                BlankFieldCondition = "(Employee_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "BMSETCD"
                TableName = "Stock_SizedPavu_Processing_Details"
                Selection_FieldName = "BeamNo_SetCode_forSelection"
                Return_FieldName = "BeamNo_SetCode_forSelection"
                Condition = ""
                Display_Name = "Beam No"
                BlankFieldCondition = "(BeamNo_SetCode_forSelection = '')"
                CtrlType_CboTxt = "C"

                Cmd.Connection = con

                Cmd.CommandText = "Update Stock_SizedPavu_Processing_Details set BeamNo_SetCode_forSelection = Beam_No + ' | ' + setcode_forSelection Where Beam_No <> ''"
                Cmd.ExecuteNonQuery()

            Case "MON"
                TableName = "Month_Head"
                Selection_FieldName = "Month_Name"
                Return_FieldName = "Month_IdNo"
                Condition = ""
                Display_Name = "Month Name"
                BlankFieldCondition = "(Month_IdNo = 0)"
                CtrlType_CboTxt = "C"

            Case "PCSCHKLOTPCSNO"
                TableName = "Weaver_ClothReceipt_Piece_Details"
                Selection_FieldName = "LotNo_PcsNo_forSelection"
                Return_FieldName = "LotNo_PcsNo_forSelection"
                Condition = ""
                Display_Name = "Lot No"
                BlankFieldCondition = "(LotNo_PcsNo_forSelection = '')"
                CtrlType_CboTxt = "C"

                Cmd.Connection = con

                Cmd.CommandText = "Update Weaver_ClothReceipt_Piece_Details set LotNo_PcsNo_forSelection = Lot_No + '-' + Piece_No + '/' + right(Lot_Code,5)  Where Lot_No <> '' and Piece_No <> ''"
                Cmd.ExecuteNonQuery()

            Case "PSLOTPCSNO"
                TableName = "Packing_Slip_Details"
                Selection_FieldName = "LotNo_PcsNo_forSelection"
                Return_FieldName = "LotNo_PcsNo_forSelection"
                Condition = ""
                Display_Name = "Lot No"
                BlankFieldCondition = "(LotNo_PcsNo_forSelection = '')"
                CtrlType_CboTxt = "C"

                Cmd.Connection = con

                Cmd.CommandText = "Update Packing_Slip_Details set LotNo_PcsNo_forSelection = Lot_No + '-' + Pcs_No + '/' + right(Lot_Code,5)  Where Lot_No <> '' and Pcs_No <> ''"
                Cmd.ExecuteNonQuery()

            Case "PROC"
                TableName = "Process_Head"
                Selection_FieldName = "Process_Name"
                Return_FieldName = "Process_Idno"
                Condition = ""
                Display_Name = "Process"
                BlankFieldCondition = "(Process_Idno = 0)"
                CtrlType_CboTxt = "C"

            Case "ART"
                TableName = "Article_Head"
                Selection_FieldName = "Article_Name"
                Return_FieldName = "Article_Idno"
                Condition = ""
                Display_Name = "Article"
                BlankFieldCondition = "(Article_Idno = 0)"
                CtrlType_CboTxt = "C"


            Case "CLWT"
                TableName = "Cloth_Head"
                Selection_FieldName = "Cloth_Width"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Width"
                BlankFieldCondition = "(Cloth_Idno = 0)"
                CtrlType_CboTxt = "C"

            Case "SI"
                TableName = "Stores_Item_AlaisHead"
                Selection_FieldName = "Item_DisplayName"
                Return_FieldName = "Item_IdNo"
                Condition = ""
                Display_Name = "Item Name"

            Case "B"
                TableName = "Brand_Head"
                Selection_FieldName = "Brand_Name"
                Return_FieldName = "Brand_idno"
                Condition = ""
                Display_Name = "Brand Name"

            Case "D"
                TableName = "Department_Head"
                Selection_FieldName = "Department_Name"
                Return_FieldName = "Department_Idno"
                Condition = ""
                Display_Name = "Department"

            Case "DN"
                TableName = "Stores_Item_Head"
                Selection_FieldName = "Drawing_No"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Drawing No"

            Case "MC"
                TableName = "Machine_Head"
                Selection_FieldName = "Machine_Name"
                Return_FieldName = "Machine_Idno"
                Condition = ""
                Display_Name = "Machine Name"

            Case "EMP"
                TableName = "PayRoll_Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_IdNo"
                Condition = ""
                Display_Name = "Employee Name"

            Case "EMP-OP"
                TableName = "PayRoll_Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_IdNo"
                Condition = "Employee_IdNo in (Select Operator_idNo from Production_Head)"
                Display_Name = "Operator Name"

            Case "EMP-IN"

                TableName = "PayRoll_Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_IdNo"
                Condition = "Employee_IdNo in (Select Incharge_idNo from Production_Head)"
                Display_Name = "In-Charge Name"

            Case "EMP-FR"

                TableName = "PayRoll_Employee_Head"
                Selection_FieldName = "Employee_Name"
                Return_FieldName = "Employee_IdNo"
                Condition = "Employee_IdNo in (Select Framer_idNo from Production_Head)"
                Display_Name = "Framer Name"

            Case "RW"
                TableName = "ReedWidth_Head"
                Selection_FieldName = "ReedWidth_Name"
                Return_FieldName = "ReedWidth_Idno"
                Condition = ""
                Display_Name = "Reed Width"


            Case "MON"
                TableName = "Month_Head"
                Selection_FieldName = "Month_Name"
                Return_FieldName = "Month_IdNo"
                Condition = ""
                Display_Name = "Month Name"
            ' Blank_FieldCondition = "(Month_IdNo = 0)"

            Case "CAT"
                TableName = "PayRoll_Category_Head"
                Selection_FieldName = "Category_Name"
                Return_FieldName = "Category_IdNo"
                Condition = ""
                Display_Name = "Category Name"
            ' Blank_FieldCondition = "(Working_Type_IdNo = 0)"

            Case "CATI"
                TableName = "Cetegory_Head"
                Selection_FieldName = "Cetegory_Name"
                Return_FieldName = "Cetegory_IdNo"
                Condition = ""
                Display_Name = "Cetegory Name"
            ' Blank_FieldCondition = "(Cetegory_IdNo = 0)"

            Case "ORD"
                TableName = "Sales_Order_Head"
                Selection_FieldName = "Sales_Order_Selection_Code"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Order No"
            ' Blank_FieldCondition = "(Cetegory_IdNo = 0)"

            Case "ORD-PRO"
                TableName = "Order_Selection_Code_Head"
                Selection_FieldName = "Order_Selection_Code"
                Return_FieldName = ""
                Condition = "Order_Selection_Code Like '%-ORD'"
                Display_Name = "Order No"

            Case "EMB-ORD"
                TableName = "Order_Program_Head"
                Selection_FieldName = "OrderCode_ForSelection"
                Return_FieldName = ""
                'Condition = "Order_Selection_Code Like '%-ORD'"
                Display_Name = "Order No"

            Case "EMB-JOB"
                TableName = "OrderJobNo_Head"
                Selection_FieldName = "OrderJobNo_Name"
                Return_FieldName = ""
                'Condition = "Order_Selection_Code Like '%-ORD'"
                Display_Name = "Job No"

            Case "PUP"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "PAID/UNPAID"
            Case "SHIFT-EMB"
                TableName = "Production_Head"
                Selection_FieldName = "Shift"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "SHIFT"
            Case "UR"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "GSTIN Status"

            Case "VN"
                TableName = "Tocken_Head"
                Selection_FieldName = "Vehicle_No"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Vehicle No"

            Case "MVN"
                TableName = "Token_Monthly_Head"
                Selection_FieldName = "Vehicle_No"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Vehicle No"

            Case "TKN"
                TableName = "Tocken_Head"
                Selection_FieldName = "Tocken_No"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Tocken No"

            Case "MTKN"
                TableName = "Token_Monthly_Head"
                Selection_FieldName = "Token_Monthly_No"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Plan No"

            Case "TKTP"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "TYPE"

            Case "CSTS"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "STATUS"
            Case "PYSTS"
                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "AMOUNT"

            Case "HSN"

                TableName = "ItemGroup_Head"
                Selection_FieldName = "Item_HSN_Code"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "HSN CODE"

            Case "EXH"

                TableName = "Expense_Head"
                Selection_FieldName = "Expense_Name"
                Return_FieldName = "Expense_IdNo"
                Condition = ""
                Display_Name = "EXPENSE HEAD"

            Case "EBT" 'EMBROIDERY BILL TYPE

                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "ORDER/DIRECT"

            Case "CNFS" 'EMBROIDERY BILL TYPE

                TableName = ""
                Selection_FieldName = ""
                Return_FieldName = ""
                Condition = ""
                Display_Name = "STATUS"

            Case "UNT"

                TableName = "Unit_Head"
                Selection_FieldName = "Unit_Name"
                Return_FieldName = "Unit_Idno"
                Condition = ""
                Display_Name = "Unit"
                BlankFieldCondition = "(Unit_Idno = 0)"
                CtrlType_CboTxt = "C"


            Case "PT"

                TableName = "PayRoll_Salary_Payment_Type_Head"
                Selection_FieldName = "Salary_Payment_Type_Name"
                Return_FieldName = "Salary_Payment_Type_IdNo"
                Condition = ""
                Display_Name = "Payment Type"

            Case "NTPYREG"
                TableName = "EntryTemp"
                Selection_FieldName = "Name6"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Signature Status"

            Case "CTNAME"
                TableName = "PayRoll_Category_Head"
                Selection_FieldName = "Category_Name"
                Return_FieldName = "Category_IdNo"
                Condition = ""
                Display_Name = "Category Name"

            Case "ADVTYPE"
                TableName = "EntryTemp"
                Selection_FieldName = "Name6"
                Return_FieldName = ""
                Condition = ""
                Display_Name = "Slry/Adv Type"

            Case "EPGNME"
                TableName = "ESI_PF_Head"
                Selection_FieldName = "ESI_PF_Group_Name"
                Return_FieldName = "ESI_PF_Group_IdNo"
                Condition = ""
                Display_Name = "ESI PF Group"

        End Select

    End Sub

    Private Sub Report_Details_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        Dim strRpInpts As String
        Dim ShowCompCol_STS As Boolean = True
        Dim Noof_Inps As Integer = 0
        Dim ScrnHgt As Double = 0
        Dim vScrnWdth As Double = 0
        Dim vIPs1 As Integer = 0, vIPs2 As Integer = 0, vIPs3 As Integer = 0, vIPs4 As Integer = 0, vIPs5 As Integer = 0

        RptIpDet_ReportGroupName = Common_Procedures.RptInputDet.ReportGroupName
        RptIpDet_ReportName = Common_Procedures.RptInputDet.ReportName
        RptIpDet_ReportHeading = Common_Procedures.RptInputDet.ReportHeading
        RptIpDet_IsGridReport = Common_Procedures.RptInputDet.IsGridReport
        RptIpDet_ReportInputs = Common_Procedures.RptInputDet.ReportInputs

        Common_Procedures.RptInputDet.ReportGroupName = ""
        Common_Procedures.RptInputDet.ReportName = ""
        Common_Procedures.RptInputDet.ReportHeading = ""
        Common_Procedures.RptInputDet.IsGridReport = False
        Common_Procedures.RptInputDet.ReportInputs = ""

        Me.Text = ""
        Me.BackColor = Color.LightSkyBlue
        pnl_Back.BackColor = Color.White ' Me.BackColor
        pnl_ReportInputs.BackColor = Me.BackColor
        pnl_ReportDetails.BackColor = Color.White 'Me.BackColor

        btn_Show.BackColor = Color.FromArgb(2, 57, 111)
        btn_Show.ForeColor = Color.White
        btn_Close.BackColor = Color.FromArgb(2, 57, 111)
        btn_Close.ForeColor = Color.White

        Me.Left = 0
        Me.Top = 0
        Me.Dock = DockStyle.Fill
        'Me.Width = Screen.PrimaryScreen.WorkingArea.Width - 13  ' 12
        'Me.Height = Screen.PrimaryScreen.WorkingArea.Height - 50  ' 92

        pnl_Back.Location = New Point(0, 0)
        pnl_ReportInputs.Location = New Point(0, 0)
        pnl_ReportDetails.Location = New Point(0, 0)

        'pnl_ReportDetails.Height = Screen.PrimaryScreen.WorkingArea.Height - 220
        'pnl_ReportDetails.Height = Screen.PrimaryScreen.WorkingArea.Height - 96 - pnl_ReportInputs.Height

        pnl_Back.Dock = DockStyle.Fill
        pnl_ReportInputs.Dock = DockStyle.Top
        pnl_ReportDetails.Dock = DockStyle.Bottom
        pnl_ReportDetails.BringToFront()
        RptViewer.Dock = DockStyle.Fill

        dgv_Report.Dock = DockStyle.Fill

        RptViewer.Visible = False

        dgv_Report.DataSource = Nothing
        dgv_Report.Visible = False
        dgv_Report.Rows.Clear()
        dgv_Report.Columns.Clear()
        If RptIpDet_IsGridReport = True Then
            dgv_Report.Visible = True
        Else
            RptViewer.Visible = True
        End If

        If con.State = ConnectionState.Open Then con.Close()
        con.Open()


        AddHandler cbo_Inputs1.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs2.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs3.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs4.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs5.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs6.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs7.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs8.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Inputs9.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Show.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Close.GotFocus, AddressOf ControlGotFocus
        AddHandler RptViewer.GotFocus, AddressOf ControlGotFocus

        AddHandler cbo_Inputs1.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs2.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs3.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs4.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs5.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs6.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs7.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs8.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Inputs9.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Show.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Close.LostFocus, AddressOf ControlLostFocus


        lbl_ReportHeading.Text = Trim(UCase(RptIpDet_ReportHeading))

        strRpInpts = "," & Trim(RptIpDet_ReportInputs) & ","

        Noof_Inps = Design_ReportInputs()

        vScrnWdth = My.Computer.Screen.Bounds.Width

        ScrnHgt = 0
        If MDIParent1.MaximizeBox = True Then
            ScrnHgt = Screen.PrimaryScreen.WorkingArea.Height - 50
        Else
            ScrnHgt = My.Computer.Screen.Bounds.Height - 50
        End If

        If vScrnWdth > 1300 Then

            vIPs1 = 3
            vIPs2 = 6
            vIPs3 = 9
            vIPs4 = 12
            vIPs5 = 15

        Else

            vIPs1 = 2
            vIPs2 = 4
            vIPs3 = 6
            vIPs4 = 8
            vIPs5 = 10

        End If


        If Noof_Inps <= vIPs1 Then
            pnl_ReportInputs.Height = 80
            pnl_ReportDetails.Height = ScrnHgt - (237 - 80)

        ElseIf Noof_Inps <= vIPs2 Then
            pnl_ReportInputs.Height = 104
            pnl_ReportDetails.Height = ScrnHgt - (287 - 104)

        ElseIf Noof_Inps <= vIPs3 Then
            pnl_ReportInputs.Height = 128
            pnl_ReportDetails.Height = ScrnHgt - (337 - 128)

        ElseIf Noof_Inps <= vIPs4 Then
            pnl_ReportInputs.Height = 152
            pnl_ReportDetails.Height = ScrnHgt - (387 - 152)

        ElseIf Noof_Inps <= vIPs5 Then
            pnl_ReportInputs.Height = 176
            pnl_ReportDetails.Height = ScrnHgt - (437 - 176)

        Else
            pnl_ReportInputs.Height = 200
            pnl_ReportDetails.Height = ScrnHgt - (487 - 200)

        End If

        'pnl_ReportDetails.Top = pnl_ReportInputs.Top + pnl_ReportInputs.Height + 3
        'RptViewer.Top = 10

        'pnl_ReportDetails.Height = Screen.PrimaryScreen.WorkingArea.Height - (337 - pnl_ReportInputs.Height)   '-- OK FOR 2LINE INPUTS
        'pnl_ReportDetails.Height = Screen.PrimaryScreen.WorkingArea.Height - 96 - pnl_ReportInputs.Height

        clear()

        If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - invoiced - notification" Then
            Show_Report()
            btn_Show_Click(sender, e)
        End If

        If Trim(UCase(cbo_Inputs4.Tag)) = "PUP" Then
            cbo_Inputs4.Items.Clear()
            cbo_Inputs4.Items.Add("")
            cbo_Inputs4.Items.Add("PAID")
            cbo_Inputs4.Items.Add("UNPAID")
        End If

        If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered" Or Trim(LCase(RptIpDet_ReportName)) = "inward supply - registered" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered with partyname" Or Trim(LCase(RptIpDet_ReportName)) = "inward supply - registered with partyname" Then
            cbo_Inputs2.Items.Clear()
            cbo_Inputs2.Items.Add("ALL")
            cbo_Inputs2.Items.Add("REGISTERED")
            cbo_Inputs2.Items.Add("UNREGISTERED")
            cbo_Inputs2.Text = "ALL"
        End If
        If Trim(LCase(RptIpDet_ReportName)) = "token register" Then
            cbo_Inputs4.Items.Clear()
            cbo_Inputs4.Items.Add("")
            cbo_Inputs4.Items.Add("DAY")
            cbo_Inputs4.Items.Add("MONTH")
            cbo_Inputs4.Text = ""
        End If
        If Trim(LCase(RptIpDet_ReportName)) = "monthly token register" Then
            cbo_Inputs4.Items.Clear()
            cbo_Inputs4.Items.Add("")
            cbo_Inputs4.Items.Add("CLOSED")
            cbo_Inputs4.Items.Add("UNCLOSED")
            cbo_Inputs4.Text = ""
        End If

        If Trim(LCase(RptIpDet_ReportName)) = "monthly token register" Then
            cbo_Inputs5.Items.Clear()
            cbo_Inputs5.Items.Add("")
            cbo_Inputs5.Items.Add("PAID")
            cbo_Inputs5.Items.Add("UNPAID")
            cbo_Inputs5.Text = ""
        End If

        'MsgBox(pnl_ReportDetails.Top)

        'pnl_ReportDetails.Top = pnl_ReportInputs.Top + pnl_ReportInputs.Height + 10
    End Sub

    Private Sub Purchase_Entry_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        On Error Resume Next
        con.Close()
        con.Dispose()
        'Common_Procedures.Last_Closed_FormName = Me.Name
    End Sub

    Private Sub Report_Details_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles Me.KeyPress

        Dim vCurRow As Integer = -1
        Dim vTopRow As Integer = -1
        Dim vDateInp1 As Date
        Dim vDateInp2 As Date
        Dim vCboInpText1 As String = ""
        Dim vCboInpText2 As String = ""
        Dim vCboInpText3 As String = ""
        Dim vCboInpText4 As String = ""
        Dim vCboInpText5 As String = ""
        Dim vCboInpText6 As String = ""
        Dim vCboInpText7 As String = ""
        Dim vCboInpText8 As String = ""
        Dim vCboInpText9 As String = ""

        If Asc(e.KeyChar) = 27 Then

            If RptSubReport_Index > 0 Then

                If Trim(LCase(RptIpDet_ReportName)) = "single ledger - grid - datewise" Or Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Then

                    RptIpDet_ReportName = RptSubReportDet(RptSubReport_Index).ReportName
                    RptIpDet_ReportGroupName = RptSubReportDet(RptSubReport_Index).ReportGroupName
                    RptIpDet_ReportHeading = RptSubReportDet(RptSubReport_Index).ReportHeading
                    RptIpDet_ReportInputs = RptSubReportDet(RptSubReport_Index).ReportInputs
                    RptIpDet_IsGridReport = RptSubReportDet(RptSubReport_Index).IsGridReport
                    vCurRow = Val(RptSubReportDet(RptSubReport_Index).CurrentRowVal)
                    vTopRow = Val(RptSubReportDet(RptSubReport_Index).TopRowVal)
                    vDateInp1 = RptSubReportDet(RptSubReport_Index).DateInp_Value1
                    vDateInp2 = RptSubReportDet(RptSubReport_Index).DateInp_Value2
                    vCboInpText1 = RptSubReportDet(RptSubReport_Index).CboInp_Text1
                    vCboInpText2 = RptSubReportDet(RptSubReport_Index).CboInp_Text2
                    vCboInpText3 = RptSubReportDet(RptSubReport_Index).CboInp_Text3
                    vCboInpText4 = RptSubReportDet(RptSubReport_Index).CboInp_Text4
                    vCboInpText5 = RptSubReportDet(RptSubReport_Index).CboInp_Text5


                    'For I = 1 To 10

                    '    RptCboDet(I).PKey = RptSubReportInpDet(RptSubReport_Index, I).PKey
                    '    RptCboDet(I).TableName = RptSubReportInpDet(RptSubReport_Index, I).TableName
                    '    RptCboDet(I).Selection_FieldName = RptSubReportInpDet(RptSubReport_Index, I).Selection_FieldName
                    '    RptCboDet(I).Return_FieldName = RptSubReportInpDet(RptSubReport_Index, I).Return_FieldName
                    '    RptCboDet(I).Condition = RptSubReportInpDet(RptSubReport_Index, I).Condition
                    '    RptCboDet(I).Display_Name = RptSubReportInpDet(RptSubReport_Index, I).Display_Name
                    '    RptCboDet(I).BlankFieldCondition = RptSubReportInpDet(RptSubReport_Index, I).BlankFieldCondition
                    '    RptCboDet(I).CtrlType_Cbo_OR_Txt = RptSubReportInpDet(RptSubReport_Index, I).CtrlType_Cbo_OR_Txt

                    'Next I

                    RptSubReportDet(RptSubReport_Index).ReportName = ""
                    RptSubReportDet(RptSubReport_Index).ReportGroupName = ""
                    RptSubReportDet(RptSubReport_Index).ReportHeading = ""
                    RptSubReportDet(RptSubReport_Index).ReportInputs = ""
                    RptSubReportDet(RptSubReport_Index).IsGridReport = False
                    RptSubReportDet(RptSubReport_Index).CurrentRowVal = -1
                    RptSubReportDet(RptSubReport_Index).TopRowVal = -1
                    RptSubReportDet(RptSubReport_Index).DateInp_Value1 = #1/1/1900#
                    RptSubReportDet(RptSubReport_Index).DateInp_Value2 = #1/1/1900#
                    RptSubReportDet(RptSubReport_Index).CboInp_Text1 = ""
                    RptSubReportDet(RptSubReport_Index).CboInp_Text2 = ""
                    RptSubReportDet(RptSubReport_Index).CboInp_Text3 = ""
                    RptSubReportDet(RptSubReport_Index).CboInp_Text4 = ""
                    RptSubReportDet(RptSubReport_Index).CboInp_Text5 = ""

                    For I = 1 To 10

                        RptSubReportInpDet(RptSubReport_Index, I).PKey = ""
                        RptSubReportInpDet(RptSubReport_Index, I).TableName = ""
                        RptSubReportInpDet(RptSubReport_Index, I).Selection_FieldName = ""
                        RptSubReportInpDet(RptSubReport_Index, I).Return_FieldName = ""
                        RptSubReportInpDet(RptSubReport_Index, I).Condition = ""
                        RptSubReportInpDet(RptSubReport_Index, I).Display_Name = ""
                        RptSubReportInpDet(RptSubReport_Index, I).BlankFieldCondition = ""
                        RptSubReportInpDet(RptSubReport_Index, I).CtrlType_Cbo_OR_Txt = ""

                    Next I

                    RptSubReport_Index = RptSubReport_Index - 1

                    Select Case Trim(LCase(RptIpDet_ReportName))
                        Case "profit & loss"
                            Common_Procedures.CompIdNo = 0
                            Dim f1 As New Profit_And_Loss
                            f1.MdiParent = MDIParent1
                            f1.Show()

                            f1.dtp_FromDate.Text = vDateInp1.ToString
                            f1.dtp_ToDate.Text = vDateInp2.ToString

                            f1.cbo_Inputs1.Text = Trim(vCboInpText1)

                            f1.Show_Report()

                            f1.txt_Selection.Text = Val(vCurRow)

                            Me.Close()

                        Case "balance sheet"
                            'Common_Procedures.CompIdNo = 0
                            'Dim f2 As New Balance_Sheet
                            'f2.MdiParent = MDIParent1
                            'f2.Show()

                            'f2.dtp_FromDate.Text = vDateInp1.ToString
                            'f2.dtp_ToDate.Text = vDateInp2.ToString

                            'f2.cbo_Inputs1.Text = Trim(vCboInpText1)
                            'f2.cbo_Inputs2.Text = Trim(vCboInpText2)
                            'f2.cbo_Inputs3.Text = Trim(vCboInpText3)
                            'f2.cbo_Inputs4.Text = Trim(vCboInpText4)
                            'f2.cbo_Inputs5.Text = Trim(vCboInpText5)

                            'f2.Show_Report()

                        Case Else

                            Common_Procedures.RptInputDet.ReportGroupName = RptIpDet_ReportGroupName
                            Common_Procedures.RptInputDet.ReportName = RptIpDet_ReportName
                            Common_Procedures.RptInputDet.ReportHeading = RptIpDet_ReportHeading
                            Common_Procedures.RptInputDet.IsGridReport = RptIpDet_IsGridReport
                            Common_Procedures.RptInputDet.ReportInputs = RptIpDet_ReportInputs

                            Me.Report_Details_Load(sender, e)

                            dtp_FromDate.Text = vDateInp1.ToString
                            dtp_ToDate.Text = vDateInp2.ToString

                            cbo_Inputs1.Text = Trim(vCboInpText1)
                            cbo_Inputs2.Text = Trim(vCboInpText2)
                            cbo_Inputs3.Text = Trim(vCboInpText3)
                            cbo_Inputs4.Text = Trim(vCboInpText4)
                            cbo_Inputs5.Text = Trim(vCboInpText5)
                            cbo_Inputs6.Text = Trim(vCboInpText6)
                            cbo_Inputs7.Text = Trim(vCboInpText7)
                            cbo_Inputs8.Text = Trim(vCboInpText8)
                            cbo_Inputs9.Text = Trim(vCboInpText9)

                            Show_Report()

                            If vCurRow > 0 Then
                                If dgv_Report.Rows.Count > 0 And dgv_Report.Rows.Count >= vCurRow Then
                                    dgv_Report.CurrentCell = dgv_Report.Rows(vCurRow).Cells(0)
                                    dgv_Report.CurrentCell.Selected = True
                                End If
                            End If
                            If vTopRow > 0 Then
                                If dgv_Report.Rows.Count > 0 And dgv_Report.Rows.Count >= vTopRow Then
                                    dgv_Report.FirstDisplayedScrollingRowIndex = vTopRow
                                End If
                            End If

                    End Select

                Else
                    Me.Close()

                End If

            Else
                Me.Close()

            End If

        End If
    End Sub

    Private Sub btn_Show_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Show.Click
        Show_Report()
    End Sub

    Private Sub btn_Close_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Close.Click
        Me.Close()
    End Sub



    Private Sub dtp_ToDate_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Asc(e.KeyChar) = 13 Then
            If cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                cbo_Inputs1.Focus()
            ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                cbo_Inputs2.Focus()
            ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                cbo_Inputs3.Focus()
            ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs4.Focus()
            ElseIf cbo_Inputs5.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs5.Focus()
            Else
                btn_Show.Focus()
                Show_Report()
            End If
        End If
        If Trim(UCase(e.KeyChar)) = "D" Then
            dtp_ToDate.Text = Date.Today
        End If
    End Sub


    Private Sub dtp_FromDate_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Asc(e.KeyChar) = 13 Then
            If dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                dtp_ToDate.Focus()
            ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                cbo_Inputs1.Focus()
            ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                cbo_Inputs2.Focus()
            ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                cbo_Inputs3.Focus()
            ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs4.Focus()
            ElseIf cbo_Inputs5.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs5.Focus()
            Else
                btn_Show.Focus()
                Show_Report()
            End If
        End If
        If Trim(UCase(e.KeyChar)) = "D" Then
            dtp_FromDate.Text = Date.Today
        End If
    End Sub

    Private Sub cbo_Inputs1_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Inputs1.GotFocus

    End Sub

    Private Sub cbo_Inputs1_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs1.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs1, Nothing, Nothing, RptCboDet(1).TableName, RptCboDet(1).Selection_FieldName, RptCboDet(1).Condition, RptCboDet(1).BlankFieldCondition)

            With cbo_Inputs1
                If (e.KeyValue = 38 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs5.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                    'ElseIf e.KeyValue <> 13 And e.KeyValue <> 17 And e.KeyValue <> 27 And .DroppedDown = False Then
                    '    .DroppedDown = True
                End If

            End With

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub cbo_Inputs1_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs1.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs1, Nothing, RptCboDet(1).TableName, RptCboDet(1).Selection_FieldName, RptCboDet(1).Condition, RptCboDet(1).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                If cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                    cbo_Inputs2.Focus()
                ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                    cbo_Inputs3.Focus()
                ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                    cbo_Inputs4.Focus()
                ElseIf cbo_Inputs5.Visible And cbo_Inputs4.Enabled Then
                    cbo_Inputs5.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub


    Private Sub cbo_Inputs2_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs)


    End Sub

    Private Sub cbo_Inputs2_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs2.KeyDown
        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs2, Nothing, Nothing, RptCboDet(2).TableName, RptCboDet(2).Selection_FieldName, RptCboDet(2).Condition, RptCboDet(2).BlankFieldCondition)

            With cbo_Inputs2
                If (e.KeyValue = 38 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                    'ElseIf e.KeyValue <> 13 And e.KeyValue <> 17 And e.KeyValue <> 27 And .DroppedDown = False Then
                    '    .DroppedDown = True

                End If
            End With

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs2_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs2.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs2, Nothing, RptCboDet(2).TableName, RptCboDet(2).Selection_FieldName, RptCboDet(2).Condition, RptCboDet(2).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                If cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                    cbo_Inputs3.Focus()
                ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                    cbo_Inputs4.Focus()
                ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                    cbo_Inputs5.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub


    Private Sub cbo_Inputs3_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs)



    End Sub

    Private Sub cbo_Inputs3_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs3.KeyDown

        Try

            'Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs3, Nothing, Nothing, RptCboDet(3).TableName, RptCboDet(3).Selection_FieldName, RptCboDet(3).Condition, RptCboDet(3).BlankFieldCondition)

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs3, Nothing, Nothing, "", "", "", "")

            With cbo_Inputs3
                If (e.KeyValue = 38 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                    'SendKeys.Send(" + {TAB()}")

                ElseIf (e.KeyValue = 40 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                    'SendKeys.Send("{TAB}")

                    'ElseIf e.KeyValue <> 13 And e.KeyValue <> 17 And e.KeyValue <> 27 And .DroppedDown = False Then
                    '.DroppedDown = True

                End If
            End With

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select ITEM...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs3_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs3.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs3, Nothing, "", "", "", "")

            If Asc(e.KeyChar) = 13 Then
                If cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                    cbo_Inputs4.Focus()
                ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                    cbo_Inputs5.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs4_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs4.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs4, Nothing, Nothing, "", "", "", "")

            With cbo_Inputs4

                If (e.KeyValue = 38 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then

                    e.Handled = True

                    If cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                End If

            End With

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs4_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs4.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs4, Nothing, "", "", "", "")

            If Asc(e.KeyChar) = 13 Then
                If cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                    cbo_Inputs5.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs5_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs)



    End Sub

    Private Sub cbo_Inputs5_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs5.KeyDown
        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs5, Nothing, Nothing, RptCboDet(5).TableName, RptCboDet(5).Selection_FieldName, RptCboDet(5).Condition, RptCboDet(5).BlankFieldCondition)

            With cbo_Inputs5
                If (e.KeyValue = 38 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DropDownStyle = ComboBoxStyle.Simple) Or (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    btn_Show.Focus()
                    Show_Report()

                    'ElseIf e.KeyValue <> 13 And e.KeyValue <> 17 And e.KeyValue <> 27 And .DroppedDown = False Then
                    '.DroppedDown = True

                End If
            End With

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs5_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs4.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs5, Nothing, RptCboDet(5).TableName, RptCboDet(5).Selection_FieldName, RptCboDet(5).Condition, RptCboDet(5).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                btn_Show.Focus()
                Show_Report()
            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES Not Select...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Public Sub delete_record() Implements Interface_MDIActions.delete_record
        '-----
    End Sub

    Public Sub filter_record() Implements Interface_MDIActions.filter_record
        '-----
    End Sub

    Public Sub insert_record() Implements Interface_MDIActions.insert_record
        '-----
    End Sub

    Public Sub movefirst_record() Implements Interface_MDIActions.movefirst_record
        '-----
    End Sub

    Public Sub movelast_record() Implements Interface_MDIActions.movelast_record
        '-----
    End Sub

    Public Sub movenext_record() Implements Interface_MDIActions.movenext_record
        '-----
    End Sub

    Public Sub moveprevious_record() Implements Interface_MDIActions.moveprevious_record
        '-----
    End Sub

    Public Sub new_record() Implements Interface_MDIActions.new_record
        '-----
    End Sub

    Public Sub open_record() Implements Interface_MDIActions.open_record
        '-----
    End Sub

    Public Sub print_record() Implements Interface_MDIActions.print_record
        If RptViewer.Visible Then
            RptViewer.PrintDialog()
        End If
    End Sub

    Public Sub save_record() Implements Interface_MDIActions.save_record
        '-----
    End Sub

    Public Sub Show_Report()

        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim CompCondt As String = ""
        Dim RepSTS As Boolean = False

        'Try

        RptHeading1 = "" : RptHeading2 = "" : RptHeading3 = ""

            RptHeading1 = Trim(UCase(RptIpDet_ReportHeading))

            If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" And Trim(UCase(RptCboDet(1).PKey)) <> "Z" And Trim(UCase(RptCboDet(1).PKey)) <> "DYSRNG" Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(1).Display_Name) & "  :    " & Trim(cbo_Inputs1.Text)
                Else
                    RptHeading2 = Trim(RptHeading2) & "    -    " & Trim(RptCboDet(1).Display_Name) & "  :  " & Trim(cbo_Inputs1.Text)
                End If
            End If

            If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" And Trim(UCase(RptCboDet(2).PKey)) <> "Z" And Trim(UCase(RptCboDet(2).PKey)) <> "DYSRNG" Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(2).Display_Name) & "  :  " & Trim(cbo_Inputs2.Text)
                Else
                    RptHeading2 = Trim(RptHeading2) & "    -    " & Trim(RptCboDet(2).Display_Name) & "  :  " & Trim(cbo_Inputs2.Text)
                End If
            End If

            If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" And Trim(UCase(RptCboDet(3).PKey)) <> "Z" And Trim(UCase(RptCboDet(3).PKey)) <> "DYSRNG" Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(3).Display_Name) & "  :  " & Trim(cbo_Inputs3.Text)
                Else
                    RptHeading2 = Trim(RptHeading2) & "    -    " & Trim(RptCboDet(3).Display_Name) & "  :  " & Trim(cbo_Inputs3.Text)
                End If
            End If

            If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" And Trim(UCase(RptCboDet(4).PKey)) <> "DYSRNG" Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(4).Display_Name) & "  :  " & Trim(cbo_Inputs4.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(4).Display_Name) & "  :  " & Trim(cbo_Inputs4.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(4).Display_Name) & "  :  " & Trim(cbo_Inputs4.Text)
                End If
            End If

            If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" And Trim(UCase(RptCboDet(5).PKey)) <> "DYSRNG" Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(5).Display_Name) & "  :  " & Trim(cbo_Inputs5.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(5).Display_Name) & "  :  " & Trim(cbo_Inputs5.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(5).Display_Name) & "  :  " & Trim(cbo_Inputs5.Text)
                End If
            End If

            If cbo_Inputs6.Visible = True And Trim(cbo_Inputs6.Text) <> "" Then
                'If Not (RptCboDet(6).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs6.Text)), "ITEMS SELECTED") > 0 And (Trim(RptCboDet(6).MultiSelectedIdNos_ForInQuery) <> "" Or Trim(RptCboDet(6).MultiSelectedNames_ForInQuery) <> "")) Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(6).Display_Name) & "  :  " & Trim(cbo_Inputs6.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(6).Display_Name) & "  :  " & Trim(cbo_Inputs6.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(6).Display_Name) & "  :  " & Trim(cbo_Inputs6.Text)
                End If
                'End If
            End If

            If cbo_Inputs7.Visible = True And Trim(cbo_Inputs7.Text) <> "" Then
                'If Not (RptCboDet(7).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs7.Text)), "ITEMS SELECTED") > 0 And (Trim(RptCboDet(7).MultiSelectedIdNos_ForInQuery) <> "" Or Trim(RptCboDet(7).MultiSelectedNames_ForInQuery) <> "")) Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(7).Display_Name) & "  :  " & Trim(cbo_Inputs7.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(7).Display_Name) & "  :  " & Trim(cbo_Inputs7.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(7).Display_Name) & "  :  " & Trim(cbo_Inputs7.Text)
                End If
                'End If
            End If

            If cbo_Inputs8.Visible = True And Trim(cbo_Inputs8.Text) <> "" Then
                'If Not (RptCboDet(8).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs8.Text)), "ITEMS SELECTED") > 0 And (Trim(RptCboDet(8).MultiSelectedIdNos_ForInQuery) <> "" Or Trim(RptCboDet(8).MultiSelectedNames_ForInQuery) <> "")) Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(8).Display_Name) & "  :  " & Trim(cbo_Inputs8.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(8).Display_Name) & "  :  " & Trim(cbo_Inputs8.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(8).Display_Name) & "  :  " & Trim(cbo_Inputs8.Text)
                End If
                'End If
            End If

            If cbo_Inputs9.Visible = True And Trim(cbo_Inputs9.Text) <> "" Then
                'If Not (RptCboDet(9).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs9.Text)), "ITEMS SELECTED") > 0 And (Trim(RptCboDet(9).MultiSelectedIdNos_ForInQuery) <> "" Or Trim(RptCboDet(9).MultiSelectedNames_ForInQuery) <> "")) Then
                If Trim(RptHeading2) = "" Then
                    RptHeading2 = Trim(RptCboDet(9).Display_Name) & "  :  " & Trim(cbo_Inputs9.Text)
                ElseIf Trim(RptHeading3) = "" Then
                    RptHeading3 = Trim(RptCboDet(9).Display_Name) & "  :  " & Trim(cbo_Inputs9.Text)
                Else
                    RptHeading3 = Trim(RptHeading3) & "    -    " & Trim(RptCboDet(9).Display_Name) & "  :  " & Trim(cbo_Inputs9.Text)
                End If
                'End If
            End If
            If Trim(RptHeading2) = "" Then
                If dtp_FromDate.Visible = True And dtp_ToDate.Visible = True Then
                    RptHeading2 = "DATE RANGE : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy") & " TO " & Format(Convert.ToDateTime(Trim(dtp_ToDate.Text)), "dd-MM-yyyy")
                Else
                    If dtp_FromDate.Visible = True Then RptHeading2 = "UP TO : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy")
                End If

            Else
                If dtp_FromDate.Visible = True And dtp_ToDate.Visible = True Then
                    If Trim(RptHeading3) = "" Then
                        RptHeading3 = "DATE RANGE : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy") & " TO " & Format(Convert.ToDateTime(Trim(dtp_ToDate.Text)), "dd-MM-yyyy")
                    Else
                        RptHeading3 = Trim(RptHeading3) & "    -    " & "DATE RANGE : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy") & " TO " & Format(Convert.ToDateTime(Trim(dtp_ToDate.Text)), "dd-MM-yyyy")
                    End If

                Else
                    If dtp_FromDate.Visible = True Then
                        If Trim(RptHeading3) = "" Then
                            RptHeading3 = "UP TO : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy")
                        Else
                            RptHeading3 = Trim(RptHeading3) & "    -    " & "UP TO : " & Format(Convert.ToDateTime(Trim(dtp_FromDate.Text)), "dd-MM-yyyy")
                        End If
                    End If

                End If

            End If


            CompName = ""
            CompAdd1 = ""
            CompAdd2 = ""

            If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" And Trim(UCase(RptCboDet(1).PKey)) = "Z" Then

                Da = New SqlClient.SqlDataAdapter("select Company_IdNo, Company_Name, Company_Address1, Company_Address2, Company_Address3, Company_Address4 from Company_Head Where Company_ShortName = '" & Trim(cbo_Inputs1.Text) & "' Order by Company_IdNo ", con)
                Dt = New DataTable
                Da.Fill(Dt)

                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        CompName = Dt.Rows(0).Item("Company_Name").ToString
                        CompAdd1 = Dt.Rows(0).Item("Company_Address1").ToString & " " & Dt.Rows(0).Item("Company_Address2").ToString
                        CompAdd2 = Dt.Rows(0).Item("Company_Address3").ToString & " " & Dt.Rows(0).Item("Company_Address4").ToString
                    End If
                End If
                Dt.Clear()

            Else

                CompCondt = ""
                If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                    CompCondt = "(Company_Type <> 'UNACCOUNT')"
                End If

                Da = New SqlClient.SqlDataAdapter("select Company_IdNo, Company_Name, Company_Address1, Company_Address2, Company_Address3, Company_Address4 from Company_Head where " & CompCondt & IIf(Trim(CompCondt) <> "", " and ", "") & " Company_IdNo <> 0 Order by Company_IdNo ", con)
                Dt = New DataTable
                Da.Fill(Dt)

                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        CompName = Dt.Rows(0).Item("Company_Name").ToString
                        CompAdd1 = Dt.Rows(0).Item("Company_Address1").ToString & " " & Dt.Rows(0).Item("Company_Address2").ToString
                        CompAdd2 = Dt.Rows(0).Item("Company_Address3").ToString & " " & Dt.Rows(0).Item("Company_Address4").ToString
                    End If
                End If
                Dt.Clear()

            End If

            RepSTS = False

            Select Case Trim(LCase(RptIpDet_ReportGroupName))
                Case "accounts"
                    Accounts_Report()
                Case "register"
                    Register_Report()
                Case "stock"
                    Stock_Report()
            End Select

            If RepSTS = True Then
                If RptViewer.Visible Then
                    RptViewer.Focus()
                    SendKeys.Send("{TAB}")
                ElseIf dgv_Report.Visible Then
                    dgv_Report.Focus()
                End If

            End If

        'Catch ex As Exception

        '    MessageBox.Show(ex.Message, "DOES NOT SHOW REPORT....", MessageBoxButtons.OK, MessageBoxIcon.Error)

        'End Try

    End Sub

    Private Sub Customer_Bill_Pending_Letter_Report()
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Da3 As New SqlClient.SqlDataAdapter
        Dim Dt3 As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim Nr As Long = 0
        Dim RptCondt As String
        Dim Led_Name As String
        Dim Led_Add1 As String
        Dim Led_Add2 As String
        Dim Led_Add3 As String
        Dim Led_Add4 As String
        Dim Led_phno As String
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim Amt As Single = 0
        Dim Comp_IdNo As Integer, Led_IdNo As Integer
        Dim CompCondt As String = ""
        Dim YrnCloCondt As String = ""
        Dim IpColNm1 As String = "", IpColVal1 As String = ""
        Dim IpColNm2 As String = ""
        Dim IpColNm3 As String = ""
        Dim IpColNm4 As String = ""
        Dim IpColNm5 As String = ""
        Dim ShowCompCol_STS As Boolean = False
        Dim cInc As Integer
        Dim cmpDetAr() As String
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim BankAc1 As String = ""
        Dim BankAc2 As String = ""
        Dim BankAc3 As String = ""

        If IsDate(dtp_FromDate.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
            Exit Sub
        End If
        Comp_IdNo = 0
        If cbo_Inputs1.Visible Then
            If cbo_Inputs1.Visible Then Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)
            If Comp_IdNo = 0 Then
                MessageBox.Show("Invalid Company Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If cbo_Inputs1.Enabled And cbo_Inputs1.Visible Then cbo_Inputs1.Focus()
                Exit Sub
            End If
        End If

        Led_IdNo = 0
        If cbo_Inputs2.Visible Then
            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)
            If Led_IdNo = 0 Then
                MessageBox.Show("Invalid Party Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                Exit Sub
            End If
        End If

        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", "   -   ", "") & RptHeading3
        RptHeading3 = ""

        cmd.Connection = con

        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

        RptCondt = CompCondt
        If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
            RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
        End If
        If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then
            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Led_IdNo))
        End If

        da2 = New SqlClient.SqlDataAdapter("select a.* from Ledger_Head a where a.Ledger_IdNo = " & Str(Val(Led_IdNo)) & "", con)
        da2.Fill(dt2)
        Led_Name = dt2.Rows(0).Item("Ledger_MainName").ToString
        Led_Add1 = dt2.Rows(0).Item("Ledger_Address1").ToString
        Led_Add2 = dt2.Rows(0).Item("Ledger_Address2").ToString
        Led_Add3 = dt2.Rows(0).Item("Ledger_Address3").ToString
        Led_Add4 = dt2.Rows(0).Item("Ledger_Address4").ToString
        Led_phno = dt2.Rows(0).Item("Ledger_PhoneNo").ToString

        dt2.Clear()

        Da3 = New SqlClient.SqlDataAdapter("select a.* from Company_Head a where a.Company_IdNo = " & Str(Val(Comp_IdNo)) & "", con)
        Da3.Fill(Dt3)

        Erase cmpDetAr
        If Trim(Dt3.Rows(0).Item("Company_Bank_Ac_Details").ToString) <> "" Then
            cmpDetAr = Split(Trim(Dt3.Rows(0).Item("Company_Bank_Ac_Details").ToString), "|")

            cInc = -1

            cInc = cInc + 1
            If UBound(cmpDetAr) >= cInc Then
                BankAc1 = Trim(cmpDetAr(cInc))
            End If

            cInc = cInc + 1
            If UBound(cmpDetAr) >= cInc Then
                BankAc2 = Trim(cmpDetAr(cInc))
            End If

            cInc = cInc + 1
            If UBound(cmpDetAr) >= cInc Then
                BankAc3 = Trim(cmpDetAr(cInc))
            End If

        End If
        BankAc1 = Replace(BankAc1, ",", vbCrLf)
        BankAc2 = Replace(BankAc2, ",", vbCrLf)
        BankAc3 = Replace(BankAc3, ",", vbCrLf)

        Dt3.Clear()

        cmd.CommandText = "truncate table reporttempsub"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency1 ) Select tZ.company_idno, tP.ledger_idno, a.voucher_bill_code, 0 from voucher_bill_head a INNER JOIN company_head tz  ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo " & IIf(RptCondt <> "", " where ", "") & RptCondt & " group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency1 ) Select tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code, sum(a.Amount) from voucher_bill_details a INNER JOIN company_head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo " & IIf(RptCondt <> "", " Where ", "") & RptCondt & " group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency2 ) Select tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code, sum(a.Amount) from voucher_bill_details a INNER JOIN company_head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo " & IIf(RptCondt <> "", " Where ", "") & RptCondt & " group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "truncate table EntryTemp"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into EntryTemp ( int1, int2, name1, currency1, currency2 ) Select int1, int2, name1, sum(currency1), sum(currency2) from reporttempsub group by int1, int2, name1"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "truncate table ReportTemp"
        cmd.ExecuteNonQuery()

        IpColNm1 = "tZ.Company_ShortName"
        If Comp_IdNo <> 0 Or ShowCompCol_STS = False Then
            IpColNm1 = "'[HIDDEN]'"
        End If

        cmd.CommandText = "insert into ReportTemp ( name1, name2, name3, Date1, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7  , Date2 ,Name5 ,name6 , name7 , name8 ) Select " & IpColNm1 & ", tP.Ledger_Name, a.party_bill_no, a.voucher_bill_date, (case when lower(a.crdr_type) = 'cr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as cr_amount, (case when lower(a.crdr_type) = 'dr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as db_amount, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end)) as as_on_balance, a.crdr_type, b.currency2, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end) - (case when b.currency2 is null then 0 else b.currency2 end)) as net_balance, (CASE WHEN a.crdr_type = 'DR' THEN b.currency2 ELSE 0 END) as posted_amt_cr, (CASE WHEN a.crdr_type = 'CR' THEN b.currency2 ELSE 0 END) as posted_amt_Dr, datediff(day, a.voucher_bill_date, @uptodate) as noof_days, datediff (day, a.voucher_bill_date, getdate()) as noof_days_s , @UPTODATE , '" & Trim(Led_Add1) & "' , '" & Trim(Led_Add2) & "','" & Trim(Led_Add3) & "','" & Trim(Led_Add4) & "' from voucher_bill_head a, entrytemp b, company_head tz, ledger_head tp Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " (a.bill_amount- (case when b.currency1 is null then 0 else b.currency1 end)) <> 0 and a.voucher_bill_code = b.name1 and a.company_idno = b.int1 and a.ledger_idno = tP.ledger_idno and a.company_idno = tZ.company_idno order by a.voucher_bill_date, a.voucher_bill_code"
        cmd.ExecuteNonQuery()

        'cmd.CommandText = "insert into ReportTemp ( name1, name2, name3, Date1, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7  , Date2 ,Name5 ,name6 , name7 , name8 ) Select " & IpColNm1 & ", tP.Ledger_Name, a.party_bill_no, a.voucher_bill_date, (case when lower(a.crdr_type) = 'cr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as cr_amount, (case when lower(a.crdr_type) = 'dr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as db_amount, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end)) as as_on_balance, a.crdr_type, b.currency2, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end) - (case when b.currency2 is null then 0 else b.currency2 end)) as net_balance, (CASE WHEN a.crdr_type = 'DR' THEN b.currency2 ELSE 0 END) as posted_amt_cr, (CASE WHEN a.crdr_type = 'CR' THEN b.currency2 ELSE 0 END) as posted_amt_Dr, datediff(day, a.voucher_bill_date, @uptodate) as noof_days, datediff (day, a.voucher_bill_date, getdate()) as noof_days_s , @UPTODATE , '" & Trim(Led_Add1) & "' , '" & Trim(Led_Add2) & "','" & Trim(Led_Add3) & "','" & Trim(Led_Add4) & "' from voucher_bill_head a, entrytemp b, company_head tz, ledger_head tp Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " datediff(dd, a.voucher_bill_date , @uptodate) > 30 and (a.bill_amount- (case when b.currency1 is null then 0 else b.currency1 end)) <> 0 and a.voucher_bill_code = b.name1 and a.company_idno = b.int1 and a.ledger_idno = tP.ledger_idno and a.company_idno = tZ.company_idno order by a.voucher_bill_date, a.voucher_bill_code"
        'cmd.ExecuteNonQuery()

        Da = New SqlClient.SqlDataAdapter("select '" & Trim(Led_phno) & "' as name14 , '" & Trim(Led_Name) & "' as name13 ,'" & Trim(BankAc1) & "' as name10 , '" & Trim(BankAc2) & "' as name11 ,'" & Trim(BankAc3) & "' as name12,'" & Trim(Led_Add1) & "' as name5 ,'" & Trim(Led_Add2) & "' as name6 ,'" & Trim(Led_Add3) & "' as name7 , '" & Trim(Led_Add4) & "' as name8 ,'" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name2, name3, Date1, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7  ,Name5 ,name6 , name7 , name8 , Date2 from reporttemp Order by name2, date1, name3, name1", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            IpColNm1 = "'[HIDDEN]'"
            cmd.CommandText = "Insert into reporttemp(name1, Currency12) values (" & IpColNm1 & ", -9999)"
            cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name2, name3, Date1, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7 from reporttemp Order by name2, date1, name3, name1", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1
        If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - letter-english" Then

            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Letter_English.rdlc"

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - letter-tamil" Then

            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Letter_Tamil.rdlc"

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - letter-malayalam" Then

            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Letter_Malayalam.rdlc"

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - letter-hindi" Then

            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Letter_Hindi.rdlc"

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - letter-kannada" Then

            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Letter_Kannada.rdlc"

        End If

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True
        RptViewer.Focus()
        SendKeys.Send("{TAB}")

    End Sub

    Private Sub Accounts_Report()

        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dt1 As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim Nr As Long = 0
        Dim N As Long = 0
        Dim RptCondt As String
        Dim Bal As Decimal
        Dim Amt As Double = 0, BillPend As Double = 0
        Dim Comp_IdNo As Integer, Led_IdNo As Integer, Grp_IdNo As Integer
        ' Dim Ag_IdNo As Integer
        Dim CompCondt As String = ""
        Dim YrnCloCondt As String = ""
        Dim IpColNm1 As String = "", IpColVal1 As String = ""
        Dim IpColNm2 As String = ""
        Dim IpColNm3 As String = ""
        Dim IpColNm4 As String = ""
        Dim IpColNm5 As String = ""
        Dim ShowCompCol_STS As Boolean = False
        Dim Mth_IdNo As Integer = 0, Mid As Integer = 0
        Dim GrpCd As String = ""
        Dim H1 As String = "", H2 As String = ""
        Dim Ttc As Single = 0, Ttd As Single = 0
        Dim Fnt As Single = 0
        Dim Tot_CR As Decimal = 0, Tot_DB As Decimal = 0
        Dim NtTt_CR As Decimal = 0, NtTt_DB As Decimal = 0
        Dim Opds As String = "", Clds As String = "", Opn As String = ""
        Dim m1 As Integer = 0, a1 As Integer = 0
        Dim PrevGrpNm As String = ""
        Dim GrpHdRwNo As Long = 0
        Dim Dt2 As New DataTable
        Dim i As Integer = 0
        Dim j As Integer = 0
        Dim Mnth_ID As Integer = 0
        Dim Yr As Integer = 0
        Dim Mnth_Yr_Nm As String = ""
        Dim BlAmt As Single = 0
        Dim RecAmt As Single = 0

        ShowCompCol_STS = Common_Procedures.Show_CompanyCondition_for_Report(con)

        CompCondt = ""
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT')"
        End If

        Try

            Select Case Trim(LCase(RptIpDet_ReportName))

                Case "single ledger a/c", "single ledger a/c - ledgerwise", "weaver amount balance details", "single ledger - grid - datewise"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
                        Exit Sub
                    End If

                    If IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Visible = True And dtp_ToDate.Enabled = True Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)
                    If Led_IdNo = 0 Then
                        MessageBox.Show("Invalid Party Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    IpColNm1 = ""
                    If cbo_Inputs1.Visible = True Then
                        If Val(Comp_IdNo) <> 0 Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                            IpColNm1 = "[HIDDEN]"
                        End If
                    Else
                        IpColNm1 = "[HIDDEN]"
                    End If
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If
                    If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Led_IdNo))
                    End If

                    Amt = 0

                    cmd.CommandText = "select sum(a.voucher_amount) from voucher_details a, ledger_head b, Company_Head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date < @fromdate and a.ledger_idno = b.ledger_idno and b.parent_code NOT LIKE '%~18~' and a.company_idno = tZ.company_idno"
                    Da = New SqlClient.SqlDataAdapter(cmd)
                    Dt = New DataTable
                    Da.Fill(Dt)

                    If Dt.Rows.Count > 0 Then
                        If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                            Amt = Val(Dt.Rows(0)(0).ToString)
                        End If
                    End If
                    Dt.Clear()

                    BillPend = 0

                    If Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance details" Then
                        cmd.CommandText = "select sum(a.receipt_meters) from Weaver_Cloth_Receipt_Head a, ledger_head b, Company_Head tZ Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Weaver_ClothReceipt_Date < @fromdate  and a.Receipt_Meters <> 0 and a.Weaver_Wages_Code = '' and a.ledger_idno = b.ledger_idno and a.company_idno = tZ.company_idno"
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)

                        If Dt.Rows.Count > 0 Then
                            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                                BillPend = BillPend + Val(Dt.Rows(0)(0).ToString)
                            End If
                        End If
                        Dt.Clear()
                    End If

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Int5, Meters1, Name1, Name2, Name3, Name4, Name5, Currency1, Currency2, Meters6 ) values (0, 0, 'OPENING', '', 'OPENING', '', '', " & IIf(Amt < 0, Math.Abs(Amt), 0) & ", " & IIf(Amt > 0, Amt, 0) & ", " & Str(Val(BillPend)) & " ) "
                    cmd.ExecuteNonQuery()

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If
                    If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then
                        If Trim(LCase(RptIpDet_ReportName)) = "single ledger a/c - ledgerwise" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo <> " & Str(Val(Led_IdNo))
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Led_IdNo))
                        End If
                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "single ledger a/c - ledgerwise" Then

                        cmd.CommandText = "Insert into ReportTemp(Meters5, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name7, Name8, Name9) select 0, 1, a.Voucher_Date, b.For_OrderBy, b.Voucher_Code, b.Voucher_No, 'To ' + c.ledger_name, Abs(a.voucher_amount), 0, a.narration, a.Voucher_Type, a.Entry_Identification, tZ.Company_ShortName, c.Parent_Code from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN voucher_head b ON a.Voucher_Code = b.Voucher_Code and a.Company_Idno = b.Company_Idno LEFT OUTER JOIN ledger_head c ON a.ledger_idno = c.ledger_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Voucher_Code IN ( select z1.Voucher_Code from voucher_details z1 where z1.ledger_idno = " & Str(Val(Led_IdNo)) & " ) and a.voucher_date between @fromdate and @todate and a.voucher_amount > 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into ReportTemp(Meters5, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name7, Name8, Name9) select 0, 2, a.Voucher_Date, b.For_OrderBy, b.Voucher_Code, b.Voucher_No, 'By ' + c.ledger_name, 0, abs(a.Voucher_Amount), a.narration, a.Voucher_Type, a.Entry_Identification, tZ.Company_ShortName, c.Parent_Code from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN voucher_head b ON  a.Voucher_Code = b.Voucher_Code and a.Company_Idno = b.Company_Idno LEFT OUTER JOIN ledger_head c ON a.ledger_idno = c.ledger_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Voucher_Code IN ( select z1.Voucher_Code from voucher_details z1 where z1.ledger_idno = " & Str(Val(Led_IdNo)) & " ) and a.voucher_date between @fromdate and @todate and a.voucher_amount < 0"
                        cmd.ExecuteNonQuery()

                    Else

                        cmd.CommandText = "Insert into ReportTemp(Meters5, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name7, Name8, Name9) select 0, 1, a.Voucher_Date, b.For_OrderBy, b.Voucher_Code, b.Voucher_No, 'To ' + c.ledger_name, Abs(a.voucher_amount), 0, a.narration, a.Voucher_Type, a.Entry_Identification, tZ.Company_ShortName, c.Parent_Code from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN voucher_head b ON a.Voucher_Code = b.Voucher_Code and a.Company_Idno = b.Company_Idno LEFT OUTER JOIN ledger_head c ON b.creditor_idno = c.ledger_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and a.voucher_amount < 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into ReportTemp(Meters5, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name7, Name8, Name9) select 0, 2, a.Voucher_Date, b.For_OrderBy, b.Voucher_Code, b.Voucher_No, 'By ' + c.ledger_name, 0, a.Voucher_Amount, a.narration, a.Voucher_Type, a.Entry_Identification, tZ.Company_ShortName, c.Parent_Code from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN voucher_head b ON a.Voucher_Code = b.Voucher_Code and a.Company_Idno = b.Company_Idno LEFT OUTER JOIN ledger_head c ON b.debtor_idno = c.ledger_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and a.voucher_amount > 0"
                        cmd.ExecuteNonQuery()

                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance details" Then
                        cmd.CommandText = "Insert into ReportTemp(Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Meters6, Name9) select 10, a.Weaver_ClothReceipt_Date, a.For_OrderBy, 'WCLRC-' + a.Weaver_ClothReceipt_Code, a.Weaver_ClothReceipt_No, 'By ' + c.ledger_name, 0, 0, 'Party Dc.No. : ' + a.Party_DcNo, 'Clo.Rcpt', a.Receipt_Meters, C.Parent_Code from Weaver_Cloth_Receipt_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN ledger_head c ON a.Ledger_IdNo = c.Ledger_IdNo where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Weaver_ClothReceipt_Date between @fromdate and @todate and a.Receipt_Meters <> 0 and a.Weaver_Wages_Code = ''"
                        cmd.ExecuteNonQuery()
                    End If

                    cmd.CommandText = "Update ReportTemp SET Meters5 = b.LedgerOrder_Position from ReportTemp a, AccountsGroup_Head b Where a.Name9 = b.Parent_Idno"
                    cmd.ExecuteNonQuery()

                    Tot_CR = 0 : Tot_DB = 0
                    If RptIpDet_IsGridReport = True Then

                        Da = New SqlClient.SqlDataAdapter("select Date1 as VouDate, Name5 as VouType, Name8 as Company_ShortName, Name2 as VouNo, Name3 as Particulars, Currency1 as Debit, Currency2 as Credit, Name6 as Balance, Name4 as Narration, Name7 as VoucherCode from reporttemp Order by Date1, Meters5, Int5, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                        Bal = 0
                        If Dtbl1.Rows.Count > 0 Then
                            Tot_DB = Tot_DB + Val(Dtbl1.Rows(0).Item("Debit").ToString)
                            Tot_CR = Tot_CR + Val(Dtbl1.Rows(0).Item("Credit").ToString)
                            Bal = Val(Dtbl1.Rows(0).Item("Debit").ToString) - Val(Dtbl1.Rows(0).Item("Credit").ToString)
                            Dtbl1.Rows(0).Item("Balance") = Trim(Format(Math.Abs(Val(Bal)), "#########0.00")) & IIf(Val(Bal) >= 0, " Dr", " Cr")
                            For i = 1 To Dtbl1.Rows.Count - 1
                                Tot_DB = Tot_DB + Val(Dtbl1.Rows(i).Item("Debit").ToString)
                                Tot_CR = Tot_CR + Val(Dtbl1.Rows(i).Item("Credit").ToString)
                                Bal = Val(Bal) + Val(Dtbl1.Rows(i).Item("Debit").ToString) - Val(Dtbl1.Rows(i).Item("Credit").ToString)
                                Dtbl1.Rows(i).Item("Balance") = Trim(Format(Math.Abs(Val(Bal)), "#########0.00")) & IIf(Val(Bal) >= 0, " Dr", " Cr")
                            Next i

                        End If

                        If Dtbl1.Rows.Count = 0 Then

                            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                            cmd.ExecuteNonQuery()

                            Da = New SqlClient.SqlDataAdapter("select Date1 as VouDate, Name5 as VouType, Name2 as VouNo, Name3 as Particulars, Currency1 as Debit, Currency2 as Credit, Name6 as Balance, Name4 as Narration from reporttemp Order by Date1, Int5, meters1, name2, name1", con)
                            Dtbl1 = New DataTable
                            Da.Fill(Dtbl1)

                        End If

                        Dim MyNewRow As DataRow
                        MyNewRow = Dtbl1.NewRow

                        With MyNewRow
                            .Item(4) = "TOTAL"
                            .Item(5) = Format(Tot_DB, "0000000.00")
                            .Item(6) = Format(Tot_CR, "0000000.00")
                            .Item(7) = Common_Procedures.Currency_Format(Math.Abs(Bal)) & IIf(Val(Bal) >= 0, " Dr", " Cr")
                            .Item(8) = ""
                            .Item(9) = ""
                        End With
                        Dtbl1.Rows.Add(MyNewRow)
                        Dtbl1.AcceptChanges()

                    Else

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name6, Name4, Name5, Meters6, Name7 from reporttemp Order by Date1, Meters5, Int5, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                        Bal = 0
                        If Dtbl1.Rows.Count > 0 Then
                            Bal = Val(Dtbl1.Rows(0).Item("Currency1").ToString) - Val(Dtbl1.Rows(0).Item("Currency2").ToString)
                            Dtbl1.Rows(0).Item("Name6") = Trim(Format(Math.Abs(Val(Bal)), "#########0.00")) & IIf(Val(Bal) >= 0, " Dr", " Cr")
                            For i = 1 To Dtbl1.Rows.Count - 1
                                Bal = Val(Bal) + Val(Dtbl1.Rows(i).Item("Currency1").ToString) - Val(Dtbl1.Rows(i).Item("Currency2").ToString)
                                Dtbl1.Rows(i).Item("Name6") = Trim(Format(Math.Abs(Val(Bal)), "#########0.00")) & IIf(Val(Bal) >= 0, " Dr", " Cr")
                            Next i
                        End If

                        If Dtbl1.Rows.Count = 0 Then

                            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                            cmd.ExecuteNonQuery()

                            Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name6, Name4, Name5, Meters6 from reporttemp Order by Int5, Date1, meters1, name2, name1", con)
                            Dtbl1 = New DataTable
                            Da.Fill(Dtbl1)

                        End If

                    End If


                    If RptIpDet_IsGridReport = True Then

                        With dgv_Report
                            .SuspendLayout()
                            Application.DoEvents()

                            .BackgroundColor = Color.White
                            .BorderStyle = BorderStyle.FixedSingle

                            .AllowUserToAddRows = False
                            .AllowUserToDeleteRows = False
                            .AllowUserToOrderColumns = False
                            .ReadOnly = True
                            .SelectionMode = DataGridViewSelectionMode.FullRowSelect
                            .MultiSelect = False
                            .AllowUserToResizeColumns = False
                            .ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
                            .AllowUserToResizeRows = False

                            .DefaultCellStyle.SelectionBackColor = Color.Lime
                            .DefaultCellStyle.SelectionForeColor = Color.Blue

                            .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                            .Columns.Clear()
                            .DataSource = Dtbl1
                            .RowHeadersVisible = False
                            .AllowUserToOrderColumns = False

                            .Columns(0).HeaderText = "DATE"
                            .Columns(1).HeaderText = "VOU.TYPE"
                            .Columns(2).HeaderText = "COMPANY"
                            .Columns(3).HeaderText = "VOU.NO"
                            .Columns(4).HeaderText = "PARTICULARS"
                            .Columns(5).HeaderText = "DEBIT"
                            .Columns(6).HeaderText = "CREDIT"
                            .Columns(7).HeaderText = "BALANCE"
                            .Columns(8).HeaderText = "NARRATION"
                            .Columns(9).HeaderText = "voucher_code [HIDDEN]"

                            .Columns(2).Visible = True
                            If Trim(IpColNm1) <> "" Then
                                .Columns(2).Visible = False
                            End If
                            .Columns(9).Visible = False

                            .AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells
                            .AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill

                            .RowsDefaultCellStyle.BackColor = Color.White
                            .AlternatingRowsDefaultCellStyle.BackColor = Color.Beige

                            '.RowsDefaultCellStyle.BackColor = Color.Bisque
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.Beige

                            '.RowsDefaultCellStyle.BackColor = Color.LightGray
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray

                            .Columns(0).FillWeight = 65
                            .Columns(1).FillWeight = 55
                            .Columns(2).FillWeight = 50
                            .Columns(3).FillWeight = 45
                            .Columns(4).FillWeight = 180
                            .Columns(5).FillWeight = 75
                            .Columns(6).FillWeight = 75
                            .Columns(7).FillWeight = 85
                            .Columns(8).FillWeight = 175
                            .Columns(9).FillWeight = 100

                            .Columns(5).DefaultCellStyle.Alignment = 4
                            .Columns(6).DefaultCellStyle.Alignment = 4
                            .Columns(7).DefaultCellStyle.Alignment = 4

                            .Columns(0).ReadOnly = True
                            .Columns(1).ReadOnly = True
                            .Columns(2).ReadOnly = True
                            .Columns(3).ReadOnly = True
                            .Columns(4).ReadOnly = True
                            .Columns(5).ReadOnly = True
                            .Columns(6).ReadOnly = True
                            .Columns(7).ReadOnly = True
                            .Columns(8).ReadOnly = True
                            .Columns(9).ReadOnly = True

                            .Columns(0).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(1).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(2).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(3).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(4).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(5).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(6).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(7).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(8).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(9).SortMode = DataGridViewColumnSortMode.NotSortable

                            N = .Rows.Count - 1
                            .Rows(N).Height = 40
                            For j = 0 To .ColumnCount - 1
                                .Rows(N).Cells(j).Style.BackColor = Color.LightGray
                                .Rows(N).Cells(j).Style.ForeColor = Color.Red
                            Next

                            .Visible = True
                            .ResumeLayout()

                            .BringToFront()
                            .Focus()

                            If .Rows.Count > 0 Then
                                .CurrentCell = .Rows(0).Cells(0)
                                .CurrentCell.Selected = True
                            End If

                        End With


                    Else

                        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                        RpDs1.Name = "DataSet1"
                        RpDs1.Value = Dtbl1

                        If Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance details" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Weaver_Amount_Balance_Details.rdlc"
                        ElseIf Common_Procedures.settings.CustomerCode = "5007" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SingleLedger_5007.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SingleLedger.rdlc"
                        End If

                        RptViewer.LocalReport.DataSources.Clear()

                        RptViewer.LocalReport.DataSources.Add(RpDs1)

                        RptViewer.LocalReport.Refresh()
                        RptViewer.RefreshReport()

                        RptViewer.Visible = True
                        RptViewer.Focus()
                        SendKeys.Send("{TAB}")

                        'ProcessReport.ProcessReport()

                        '    Dim warnings As Microsoft.Reporting.WinForms.Warning()
                        '    Dim streamIds As String() = {}
                        '    Dim mimeType As String = String.Empty
                        '    Dim encoding As String = String.Empty
                        '    Dim extension As String = String.Empty

                        '    RV.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SingleLedger.rdlc"
                        '    RV.LocalReport.DataSources.Clear()

                        '    RV.LocalReport.DataSources.Add(RpDs1)

                        '    RV.LocalReport.Refresh()
                        '    RV.RefreshReport()


                        '    'Dim bytes As Byte() = RV.LocalReport.Render("PDF", Nothing, mimeType, encoding, extension, streamIds, warnings)

                        '    Dim bytes As Byte() = RV.LocalReport.Render("PDF", Nothing, mimeType, encoding, ".pdf", streamIds, warnings)

                        '    Using fs As FileStream = New FileStream("D:\output.pdf", FileMode.Create)
                        '        fs.Write(bytes, 0, bytes.Length)
                        '    End Using

                    End If


                Case "month ledger a/c"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)
                    If Led_IdNo = 0 Then
                        MessageBox.Show("Invalid Party Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                        Exit Sub
                    End If

                    Mth_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text)
                    If Mth_IdNo = 0 Then
                        Mth_IdNo = 3
                    End If

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt

                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If

                    If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Led_IdNo))
                    End If

                    Amt = 0

                    GrpCd = Common_Procedures.get_FieldValue(con, "ledger_head", "parent_code", "ledger_idno = " & Str(Val(Led_IdNo)))

                    Ttc = 0 : Ttd = 0 : Fnt = 0 : Tot_CR = 0 : Tot_DB = 0
                    Opds = "0.00 Cr"

                    If Not (GrpCd Like "*~18~") Then

                        cmd.CommandText = "Select sum(a.voucher_amount) as OPAmount from voucher_details a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " voucher_date < @companyfromdate"
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                        If Dt.Rows.Count > 0 Then
                            Opds = Common_Procedures.Currency_Format(Math.Abs(Val(Dt.Rows(0).Item("OPAmount").ToString))) & IIf(Val(Dt.Rows(0).Item("OPAmount").ToString) >= 0, " Cr", " Dr")
                            Fnt = Val(Dt.Rows(0).Item("OPAmount").ToString)
                        End If
                        Dt.Clear()

                    End If

                    cmd.CommandText = "truncate table reporttemp"
                    cmd.ExecuteNonQuery()

                    Opn = IIf(Val(Opds) < 0, Common_Procedures.Currency_Format(Math.Abs(Val(Opds))) + " Dr", Common_Procedures.Currency_Format(Val(Opds)) + " Cr")

                    a1 = IIf(Val(Mth_IdNo) < 4, 12, Val(Mth_IdNo))

                    For m1 = 4 To a1

                        Ttc = 0
                        cmd.CommandText = "select sum(a.voucher_amount) as Cr_Amount from voucher_details a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.voucher_date) = " & Str(Val(m1)) & " and year(voucher_date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " and voucher_amount > 0"

                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                        If Dt.Rows.Count > 0 Then
                            Ttc = Val(Dt.Rows(0).Item("Cr_Amount").ToString)
                        End If
                        Dt.Clear()

                        Ttd = 0
                        cmd.CommandText = "select sum(a.voucher_amount) as Dr_Amount from voucher_details a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.voucher_date) = " & Str(Val(m1)) & " and year(voucher_date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " and voucher_amount < 0"
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                        If Dt.Rows.Count > 0 Then
                            Ttd = Math.Abs(Val(Dt.Rows(0).Item("Dr_Amount").ToString))
                        End If
                        Dt.Clear()

                        Fnt = Fnt + Ttc - Ttd
                        Tot_CR = Tot_CR + Ttc
                        Tot_DB = Tot_DB + Ttd
                        Clds = IIf(Fnt < 0, Common_Procedures.Currency_Format(Math.Abs(Fnt)) + " Dr", Common_Procedures.Currency_Format(Fnt) + " Cr")

                        cmd.CommandText = "Insert into reporttemp ( Int1, name1, Currency1, Name2, Currency2, Currency3, Currency4, Name3 ) values ( " & Str(Val(m1)) & ", '" & Trim(UCase(MonthName(m1))) & "', " & Str(Val(Opds)) & ", '" & Trim(Opds) & "', " & Str(Val(Ttc)) & ", " & Str(Val(Ttd)) & ", " & Str(Val(Clds)) & ", '" & Trim(Clds) & "')"
                        cmd.ExecuteNonQuery()

                        Opds = Clds

                    Next m1


                    If Val(Mth_IdNo) <= 3 Then

                        For m1 = 1 To Val(Mth_IdNo)

                            Ttc = 0
                            cmd.CommandText = "select sum(a.voucher_amount) as Cr_Amount from voucher_details a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.voucher_date) = " & Str(Val(m1)) & " and year(voucher_date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " and voucher_amount > 0"
                            Da = New SqlClient.SqlDataAdapter(cmd)
                            Dt = New DataTable
                            Da.Fill(Dt)
                            If Dt.Rows.Count > 0 Then
                                Ttc = Val(Dt.Rows(0).Item("Cr_Amount").ToString)
                            End If
                            Dt.Clear()

                            Ttd = 0
                            cmd.CommandText = "select sum(a.voucher_amount) as Dr_Amount from voucher_details a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.voucher_date) = " & Str(Val(m1)) & " and year(voucher_date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " and voucher_amount < 0"
                            Da = New SqlClient.SqlDataAdapter(cmd)
                            Dt = New DataTable
                            Da.Fill(Dt)
                            If Dt.Rows.Count > 0 Then
                                Ttd = Math.Abs(Val(Dt.Rows(0).Item("Dr_Amount").ToString))
                            End If
                            Dt.Clear()

                            Fnt = Fnt + Ttc - Ttd
                            Tot_CR = Tot_CR + Ttc
                            Tot_DB = Tot_DB + Ttd
                            Clds = IIf(Fnt < 0, Common_Procedures.Currency_Format(Math.Abs(Fnt)) + " Dr", Common_Procedures.Currency_Format(Fnt) + " Cr")

                            Mid = Val(Common_Procedures.get_FieldValue(con, "Month_Head", "Idno", "(Month_IdNo = " & Str(Val(m1)) & ")"))

                            cmd.CommandText = "Insert into reporttemp ( Int1, Int2, name1, Currency1, Name2, Currency2, Currency3, Currency4, Name3 ) Values ( " & Str(Val(m1)) & ", " & Str(Val(Mid)) & ", '" & Trim(UCase(MonthName(m1))) & "', " & Str(Val(Opds)) & ", '" & Trim(Opds) & "', " & Str(Val(Ttc)) & ", " & Str(Val(Ttd)) & ", " & Str(Val(Clds)) & ", '" & Trim(Clds) & "')"
                            cmd.ExecuteNonQuery()

                            Opds = Clds

                        Next m1

                    End If

                    cmd.CommandText = "update reporttemp set Name4 = '" & Trim(Opn) & "',  Name5 = '" & Trim(Clds) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int1, Int2, name1, Currency1, Name2, Currency2, Currency3, Currency4, Name3, Name4, Name5 from reporttemp  Where Name1 Like '%" & cbo_Inputs3.Text & "%' Order by Int2, Int1, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int1, Int2, name1, Currency1, Name2, Currency2, Currency3, Currency4, Name3, Name4, Name5  from reporttemp Where Name1 Like '%" & cbo_Inputs3.Text & "%' Order by Int2, Int1, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_MonthLedger.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                    RptViewer.Focus()
                    SendKeys.Send("{TAB}")

                Case "group ledger"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
                        Exit Sub
                    End If

                    If IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Visible = True And dtp_ToDate.Enabled = True Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    Grp_IdNo = Common_Procedures.AccountsGroup_NameToIdNo(con, cbo_Inputs2.Text)
                    If Grp_IdNo = 0 Then
                        MessageBox.Show("Invalid Group Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If
                    If cbo_Inputs2.Visible = True And Val(Grp_IdNo) <> 0 Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tL.Parent_Code LIKE '%~" & Trim(Val(Grp_IdNo)) & "~%'"
                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempSub ( int1, currency1 ) select a.ledger_idno, sum(a.voucher_amount) from voucher_details a, ledger_head tL, company_head tZ Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tL.parent_Code like '%~18~' and a.voucher_date >= @companyfromdate and voucher_date < @fromdate and a.company_idno = tz.company_idno and a.ledger_idno = tL.ledger_idno group by a.ledger_idno having sum(a.voucher_amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into ReportTempSub ( int1, currency1 ) select a.ledger_idno, sum(a.voucher_amount) from voucher_details a, ledger_head tL, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tL.parent_code not like '%~18~' and voucher_date < @fromdate and a.company_idno = tz.company_idno and a.ledger_idno = tL.ledger_idno group by a.ledger_idno having sum(a.voucher_amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into ReportTempSub ( int1, currency2 ) select a.ledger_idno, sum(a.voucher_amount) from voucher_details a, ledger_head tL, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and a.company_idno = tz.company_idno and a.voucher_amount > 0 and a.ledger_idno = tL.ledger_idno group by a.ledger_idno having sum(a.voucher_amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into ReportTempSub ( int1, currency3 ) select a.ledger_idno, sum(a.voucher_amount) from voucher_details a, ledger_head tL, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and a.company_idno = tz.company_idno and a.voucher_amount < 0 and a.ledger_idno = tL.ledger_idno group by a.ledger_idno having sum(a.voucher_amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into reporttemp ( name4, meters1, name1, currency1, currency2, currency3, currency4 ) select tG.AccountsGroup_Name, tG.Order_Position, b.ledger_name, -1*sum(a.currency1) as opening, -1*sum(currency3) as debit, sum(a.currency2) as credit, -1*sum(a.currency1+a.currency2+a.currency3) as balance from reporttempsub a, ledger_head b, AccountsGroup_Head tG where a.int1 = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_name"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name4, meters1, currency1, currency2, currency3, currency4, name2, name3 from reporttemp Order by meters1, name4, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    Bal = 0
                    If Dtbl1.Rows.Count > 0 Then
                        For i = 0 To Dtbl1.Rows.Count - 1
                            Amt = Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                            Dtbl1.Rows(i).Item("Name2") = Trim(Format(Math.Abs(Val(Amt)), "#########0.00")) & IIf(Val(Amt) >= 0, " Dr", " Cr")

                            Amt = Val(Dtbl1.Rows(i).Item("Currency4").ToString)
                            Dtbl1.Rows(i).Item("Name3") = Trim(Format(Math.Abs(Val(Amt)), "#########0.00")) & IIf(Val(Amt) >= 0, " Dr", " Cr")
                        Next i
                    End If

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name4, meters1, currency1, currency2, currency3, currency4, name2, name3 from reporttemp Order by meters1, name4, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GroupLedger.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                    RptViewer.Focus()
                    SendKeys.Send("{TAB}")

                Case "opening tb", "general tb", "general tb - grid", "opening tb - grid"

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " tZ.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If


                    cmd.CommandText = "truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select tZ.* from Company_Head tZ Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tZ.Company_IdNo <> 0 Order by tZ.Company_IdNo", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            cmd.CommandText = "truncate table reporttempsub"
                            cmd.ExecuteNonQuery()

                            'If Trim(LCase(RptIpDet_ReportName)) = "opening tb" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then
                            cmd.CommandText = "insert into reporttempsub ( Int1, Int2, date1, currency1 ) Select a.Company_IdNo, 12, a.Closing_Stock_Value_Date, sum(a.Closing_Stock_Value) from Closing_Stock_Value_Head a, Company_Head tZ where a.Company_IdNo = " & Str(Val(Dt1.Rows(i).Item("Company_IdNo").ToString)) & " and a.Closing_Stock_Value_Date <= @companyfromdate and a.Company_IdNo = tZ.Company_IdNo group by a.Company_IdNo, a.Closing_Stock_Value_Date Having sum(a.Closing_Stock_Value) <> 0"
                            Nr = cmd.ExecuteNonQuery()

                            cmd.CommandText = "insert into EntryTemp ( Int1, Int2, date1, currency1 ) Select top 1 Int1, Int2, date1, -1*Currency1 from ReportTempSub where date1 <= @companyfromdate Order by date1 desc"
                            Nr = cmd.ExecuteNonQuery()
                            'Else
                            '    cmd.CommandText = "insert into reporttempsub ( Int1, Int2, date1, currency1 ) Select a.Company_IdNo, 12, a.Closing_Stock_Value_Date, sum(a.Closing_Stock_Value) from Closing_Stock_Value_Head a, Company_Head tZ where a.Company_IdNo = " & Str(Val(Dt1.Rows(I).Item("Company_IdNo").ToString)) & " and a.Closing_Stock_Value_Date <= @fromdate and a.Company_IdNo = tZ.Company_IdNo group by a.Company_IdNo, a.Closing_Stock_Value_Date Having sum(a.Closing_Stock_Value) <> 0"
                            '    Nr = cmd.ExecuteNonQuery()

                            '    cmd.CommandText = "insert into EntryTemp ( Int1, Int2, date1, currency1 ) Select top 1 Int1, Int2, date1, -1*Currency1 from ReportTempSub where date1 <= @fromdate Order by date1 desc"
                            '    Nr = cmd.ExecuteNonQuery()
                            'End If

                        Next i
                    End If
                    Dt1.Clear()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "opening tb" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then

                        RptHeading2 = "AS ON : " & Trim(Common_Procedures.Company_FromDate)

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date < @companyfromdate and b.parent_code NOT LIKE '%~18~' and b.parent_code NOT LIKE '%~9~4~' and b.parent_code NOT LIKE '%~30~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.currency1) < 0 then abs(sum(a.currency1)) else 0 end), (case when sum(a.currency1) > 0 then abs(sum(a.currency1)) else 0 end) , b.ledger_Idno from EntryTemp a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @companyfromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and a.int1 = tz.company_idno group by b.ledger_name, b.ledger_Idno having sum(a.Currency1) <> 0"
                        cmd.ExecuteNonQuery()

                    Else

                        cmd.CommandText = "Insert into reporttemp (   Company_Name    ,     Company_Address1    ,      Company_Address2   ,      Report_Heading1       ,      Report_Heading2       ,      Report_Heading3       ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1           ) " &
                                            "         Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and b.parent_code like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (   Company_Name  ,     Company_Address1    ,    Company_Address2     ,      Report_Heading1       ,       Report_Heading2      ,      Report_Heading3       ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1          ) " &
                                            "     Select    '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and b.parent_code NOT LIKE '%~18~' and b.parent_code NOT LIKE '%~9~4~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.currency1) < 0 then abs(sum(a.currency1)) else 0 end), (case when sum(a.currency1) > 0 then abs(sum(a.currency1)) else 0 end) , b.ledger_Idno from EntryTemp a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @fromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and a.int1 = tz.company_idno group by b.ledger_name, b.ledger_Idno having sum(a.Currency1) <> 0"
                        cmd.ExecuteNonQuery()

                        'cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, Name1, currency1, currency2 ,Int1 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) ,b.ledger_Idno from voucher_details a, ledger_head b, company_head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and b.parent_code like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        'cmd.ExecuteNonQuery()
                        'cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, Name1, currency1, currency2 ,Int1) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) ,b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and a.year_for_report < " & Str(Year(Common_Procedures.Company_ToDate)) & " and b.parent_code not like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        'cmd.ExecuteNonQuery()

                    End If




                    Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, currency1, currency2 from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, currency1, currency2 from reporttemp Order by name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If


                    If Trim(LCase(RptIpDet_ReportName)) = "general tb - grid" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then

                        With dgv_Report

                            .DataSource = Nothing

                            .BackgroundColor = Color.White
                            .BorderStyle = BorderStyle.FixedSingle

                            .AllowUserToAddRows = False
                            .AllowUserToDeleteRows = False
                            .AllowUserToOrderColumns = False
                            .ReadOnly = True
                            .SelectionMode = DataGridViewSelectionMode.FullRowSelect
                            .MultiSelect = False
                            .AllowUserToResizeColumns = False
                            .ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
                            .AllowUserToResizeRows = False

                            .DefaultCellStyle.SelectionBackColor = Color.Lime
                            .DefaultCellStyle.SelectionForeColor = Color.Blue

                            .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                            .Columns.Clear()

                            .ColumnCount = 4

                            .RowHeadersVisible = False
                            .AllowUserToOrderColumns = False

                            .Columns(0).HeaderText = "PARTY NAME"
                            .Columns(1).HeaderText = "DEBIT"
                            .Columns(2).HeaderText = "CREDIT"
                            .Columns(3).HeaderText = "ledger_idno"

                            .Columns(3).Visible = False

                            .AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells
                            .AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill

                            .RowsDefaultCellStyle.BackColor = Color.White
                            .AlternatingRowsDefaultCellStyle.BackColor = Color.WhiteSmoke

                            '.RowsDefaultCellStyle.BackColor = Color.White
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.LightGray

                            '.RowsDefaultCellStyle.BackColor = Color.Bisque
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.Beige

                            '.RowsDefaultCellStyle.BackColor = Color.LightGray
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray

                            .Columns(0).FillWeight = 200
                            .Columns(1).FillWeight = 100
                            .Columns(2).FillWeight = 100
                            .Columns(3).FillWeight = 100

                            .Columns(0).DefaultCellStyle.Alignment = 1
                            .Columns(1).DefaultCellStyle.Alignment = 4
                            .Columns(2).DefaultCellStyle.Alignment = 4

                            .Columns(0).ReadOnly = True
                            .Columns(1).ReadOnly = True
                            .Columns(2).ReadOnly = True
                            .Columns(3).ReadOnly = True

                            .Columns(0).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(1).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(2).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(3).SortMode = DataGridViewColumnSortMode.NotSortable

                            .Rows.Clear()
                            Tot_CR = 0
                            Tot_DB = 0

                            Da = New SqlClient.SqlDataAdapter("select  * from reporttemp Order by name1, name2", con)
                            Dtbl1 = New DataTable
                            Da.Fill(Dtbl1)

                            Bal = 0
                            PrevGrpNm = ""
                            GrpHdRwNo = -1
                            If Dtbl1.Rows.Count > 0 Then

                                For i = 0 To Dtbl1.Rows.Count - 1

                                    'If Trim(UCase(PrevGrpNm)) <> Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString)) Then

                                    '    If Trim(UCase(PrevGrpNm)) <> "" Then
                                    '        If GrpHdRwNo > 0 Then
                                    '            .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                    '            .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")

                                    '        End If
                                    '    End If

                                    '    Tot_CR = 0
                                    '    Tot_DB = 0

                                    '    .Rows.Add()

                                    '    N = .Rows.Add
                                    '    GrpHdRwNo = N
                                    '    .Rows(N).Cells(0).Value = Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString))
                                    '    .Rows(N).Cells(1).Value = ""
                                    '    .Rows(N).Cells(2).Value = ""
                                    '    .Rows(N).Cells(3).Value = ""

                                    '    .Rows(N).Height = 30
                                    '    For j = 0 To .ColumnCount - 1
                                    '        .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                    '        .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                    '        .Rows(N).Cells(j).Style.Font = New Font("Tahoma", 9, FontStyle.Bold)
                                    '    Next
                                    '    Application.DoEvents()
                                    'End If

                                    N = .Rows.Add
                                    .Rows(N).Cells(0).Value = Dtbl1.Rows(i).Item("Name1").ToString
                                    If Val(Dtbl1.Rows(i).Item("Currency1").ToString) <> 0 Then
                                        .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency1").ToString))
                                    End If
                                    If Val(Dtbl1.Rows(i).Item("Currency2").ToString) <> 0 Then
                                        .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency2").ToString))
                                    End If
                                    .Rows(N).Cells(3).Value = Dtbl1.Rows(i).Item("int1").ToString

                                    Tot_DB = Tot_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    Tot_CR = Tot_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    NtTt_DB = NtTt_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    NtTt_CR = NtTt_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    PrevGrpNm = Dtbl1.Rows(i).Item("Name1").ToString

                                Next i

                                If Trim(UCase(PrevGrpNm)) <> "" Then
                                    If GrpHdRwNo > 0 Then
                                        .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                        .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")
                                    End If
                                End If

                                .Rows.Add()

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "TOTAL"
                                .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(NtTt_DB))
                                .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(NtTt_CR))
                                .Rows(N).Cells(3).Value = ""

                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.LightSteelBlue
                                    .Rows(N).Cells(j).Style.ForeColor = Color.DarkRed
                                Next

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "CLOSING BALANCE"
                                .Rows(N).Cells(1).Value = IIf(Val(NtTt_DB) > Val(NtTt_CR), Common_Procedures.Currency_Format(Val(NtTt_DB) - Val(NtTt_CR)), "")
                                .Rows(N).Cells(2).Value = IIf(Val(NtTt_CR) > Val(NtTt_DB), Common_Procedures.Currency_Format(Val(NtTt_CR) - Val(NtTt_DB)), "")
                                .Rows(N).Cells(3).Value = ""


                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                    .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                Next

                            End If

                            .Visible = True
                            .BringToFront()
                            .Focus()
                            If .Rows.Count > 0 Then
                                .CurrentCell = .Rows(0).Cells(0)
                                .CurrentCell.Selected = True
                            End If

                        End With

                    Else


                        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                        RpDs1.Name = "DataSet1"
                        RpDs1.Value = Dtbl1

                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GeneralTB.rdlc"

                        RptViewer.LocalReport.DataSources.Clear()

                        RptViewer.LocalReport.DataSources.Add(RpDs1)

                        RptViewer.LocalReport.Refresh()
                        RptViewer.RefreshReport()

                        RptViewer.Visible = True
                        RptViewer.Focus()
                        SendKeys.Send("{TAB}")
                    End If



                Case "opening tb", "general tb", "general tb - grid", "opening tb - grid"

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " tZ.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If


                    cmd.CommandText = "truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select tZ.* from Company_Head tZ Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tZ.Company_IdNo <> 0 Order by tZ.Company_IdNo", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            cmd.CommandText = "truncate table reporttempsub"
                            cmd.ExecuteNonQuery()

                            'If Trim(LCase(RptIpDet_ReportName)) = "opening tb" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then
                            cmd.CommandText = "insert into reporttempsub ( Int1, Int2, date1, currency1 ) Select a.Company_IdNo, 12, a.Closing_Stock_Value_Date, sum(a.Closing_Stock_Value) from Closing_Stock_Value_Head a, Company_Head tZ where a.Company_IdNo = " & Str(Val(Dt1.Rows(i).Item("Company_IdNo").ToString)) & " and a.Closing_Stock_Value_Date <= @companyfromdate and a.Company_IdNo = tZ.Company_IdNo group by a.Company_IdNo, a.Closing_Stock_Value_Date Having sum(a.Closing_Stock_Value) <> 0"
                            Nr = cmd.ExecuteNonQuery()

                            cmd.CommandText = "insert into EntryTemp ( Int1, Int2, date1, currency1 ) Select top 1 Int1, Int2, date1, -1*Currency1 from ReportTempSub where date1 <= @companyfromdate Order by date1 desc"
                            Nr = cmd.ExecuteNonQuery()
                            'Else
                            '    cmd.CommandText = "insert into reporttempsub ( Int1, Int2, date1, currency1 ) Select a.Company_IdNo, 12, a.Closing_Stock_Value_Date, sum(a.Closing_Stock_Value) from Closing_Stock_Value_Head a, Company_Head tZ where a.Company_IdNo = " & Str(Val(Dt1.Rows(I).Item("Company_IdNo").ToString)) & " and a.Closing_Stock_Value_Date <= @fromdate and a.Company_IdNo = tZ.Company_IdNo group by a.Company_IdNo, a.Closing_Stock_Value_Date Having sum(a.Closing_Stock_Value) <> 0"
                            '    Nr = cmd.ExecuteNonQuery()

                            '    cmd.CommandText = "insert into EntryTemp ( Int1, Int2, date1, currency1 ) Select top 1 Int1, Int2, date1, -1*Currency1 from ReportTempSub where date1 <= @fromdate Order by date1 desc"
                            '    Nr = cmd.ExecuteNonQuery()
                            'End If

                        Next i
                    End If
                    Dt1.Clear()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "opening tb" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then

                        RptHeading2 = "AS ON : " & Trim(Common_Procedures.Company_FromDate)

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date < @companyfromdate and b.parent_code NOT LIKE '%~18~' and b.parent_code NOT LIKE '%~9~4~' and b.parent_code NOT LIKE '%~30~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.currency1) < 0 then abs(sum(a.currency1)) else 0 end), (case when sum(a.currency1) > 0 then abs(sum(a.currency1)) else 0 end) , b.ledger_Idno from EntryTemp a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @companyfromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and a.int1 = tz.company_idno group by b.ledger_name, b.ledger_Idno having sum(a.Currency1) <> 0"
                        cmd.ExecuteNonQuery()

                    Else

                        cmd.CommandText = "Insert into reporttemp (   Company_Name    ,     Company_Address1    ,      Company_Address2   ,      Report_Heading1       ,      Report_Heading2       ,      Report_Heading3       ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1           ) " &
                                            "         Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and b.parent_code like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (   Company_Name  ,     Company_Address1    ,    Company_Address2     ,      Report_Heading1       ,       Report_Heading2      ,      Report_Heading3       ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1          ) " &
                                            "     Select    '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) , b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and b.parent_code NOT LIKE '%~18~' and b.parent_code NOT LIKE '%~9~4~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp (    Company_Name,    Company_Address1     ,    Company_Address2     ,     Report_Heading1        ,     Report_Heading2        ,        Report_Heading3     ,    Name1     ,                  currency1                                                      ,                  currency2                                                       ,   Int1         ) " &
                                            "     Select   '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_Name, (case when sum(a.currency1) < 0 then abs(sum(a.currency1)) else 0 end), (case when sum(a.currency1) > 0 then abs(sum(a.currency1)) else 0 end) , b.ledger_Idno from EntryTemp a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @fromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and a.int1 = tz.company_idno group by b.ledger_name, b.ledger_Idno having sum(a.Currency1) <> 0"
                        cmd.ExecuteNonQuery()

                        'cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, Name1, currency1, currency2 ,Int1 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) ,b.ledger_Idno from voucher_details a, ledger_head b, company_head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and b.parent_code like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        'cmd.ExecuteNonQuery()
                        'cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, Name1, currency1, currency2 ,Int1) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) ,b.ledger_Idno from voucher_details a, ledger_head b, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and a.year_for_report < " & Str(Year(Common_Procedures.Company_ToDate)) & " and b.parent_code not like '%~18~' and a.ledger_idno = b.ledger_idno and a.company_idno = tz.company_idno group by b.ledger_name ,b.ledger_Idno having sum(a.voucher_amount) <> 0"
                        'cmd.ExecuteNonQuery()

                    End If




                    Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, currency1, currency2 from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, currency1, currency2 from reporttemp Order by name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If


                    If Trim(LCase(RptIpDet_ReportName)) = "general tb - grid" Or Trim(LCase(RptIpDet_ReportName)) = "opening tb - grid" Then

                        With dgv_Report

                            .DataSource = Nothing

                            .BackgroundColor = Color.White
                            .BorderStyle = BorderStyle.FixedSingle

                            .AllowUserToAddRows = False
                            .AllowUserToDeleteRows = False
                            .AllowUserToOrderColumns = False
                            .ReadOnly = True
                            .SelectionMode = DataGridViewSelectionMode.FullRowSelect
                            .MultiSelect = False
                            .AllowUserToResizeColumns = False
                            .ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
                            .AllowUserToResizeRows = False

                            .DefaultCellStyle.SelectionBackColor = Color.Lime
                            .DefaultCellStyle.SelectionForeColor = Color.Blue

                            .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                            .Columns.Clear()

                            .ColumnCount = 4

                            .RowHeadersVisible = False
                            .AllowUserToOrderColumns = False

                            .Columns(0).HeaderText = "PARTY NAME"
                            .Columns(1).HeaderText = "DEBIT"
                            .Columns(2).HeaderText = "CREDIT"
                            .Columns(3).HeaderText = "ledger_idno"

                            .Columns(3).Visible = False

                            .AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells
                            .AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill

                            .RowsDefaultCellStyle.BackColor = Color.White
                            .AlternatingRowsDefaultCellStyle.BackColor = Color.WhiteSmoke

                            '.RowsDefaultCellStyle.BackColor = Color.White
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.LightGray

                            '.RowsDefaultCellStyle.BackColor = Color.Bisque
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.Beige

                            '.RowsDefaultCellStyle.BackColor = Color.LightGray
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray

                            .Columns(0).FillWeight = 200
                            .Columns(1).FillWeight = 100
                            .Columns(2).FillWeight = 100
                            .Columns(3).FillWeight = 100

                            .Columns(0).DefaultCellStyle.Alignment = 1
                            .Columns(1).DefaultCellStyle.Alignment = 4
                            .Columns(2).DefaultCellStyle.Alignment = 4

                            .Columns(0).ReadOnly = True
                            .Columns(1).ReadOnly = True
                            .Columns(2).ReadOnly = True
                            .Columns(3).ReadOnly = True

                            .Columns(0).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(1).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(2).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(3).SortMode = DataGridViewColumnSortMode.NotSortable

                            .Rows.Clear()
                            Tot_CR = 0
                            Tot_DB = 0

                            Da = New SqlClient.SqlDataAdapter("select  * from reporttemp Order by name1, name2", con)
                            Dtbl1 = New DataTable
                            Da.Fill(Dtbl1)

                            Bal = 0
                            PrevGrpNm = ""
                            GrpHdRwNo = -1
                            If Dtbl1.Rows.Count > 0 Then

                                For i = 0 To Dtbl1.Rows.Count - 1

                                    'If Trim(UCase(PrevGrpNm)) <> Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString)) Then

                                    '    If Trim(UCase(PrevGrpNm)) <> "" Then
                                    '        If GrpHdRwNo > 0 Then
                                    '            .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                    '            .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")

                                    '        End If
                                    '    End If

                                    '    Tot_CR = 0
                                    '    Tot_DB = 0

                                    '    .Rows.Add()

                                    '    N = .Rows.Add
                                    '    GrpHdRwNo = N
                                    '    .Rows(N).Cells(0).Value = Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString))
                                    '    .Rows(N).Cells(1).Value = ""
                                    '    .Rows(N).Cells(2).Value = ""
                                    '    .Rows(N).Cells(3).Value = ""

                                    '    .Rows(N).Height = 30
                                    '    For j = 0 To .ColumnCount - 1
                                    '        .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                    '        .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                    '        .Rows(N).Cells(j).Style.Font = New Font("Tahoma", 9, FontStyle.Bold)
                                    '    Next
                                    '    Application.DoEvents()
                                    'End If

                                    N = .Rows.Add
                                    .Rows(N).Cells(0).Value = Dtbl1.Rows(i).Item("Name1").ToString
                                    If Val(Dtbl1.Rows(i).Item("Currency1").ToString) <> 0 Then
                                        .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency1").ToString))
                                    End If
                                    If Val(Dtbl1.Rows(i).Item("Currency2").ToString) <> 0 Then
                                        .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency2").ToString))
                                    End If
                                    .Rows(N).Cells(3).Value = Dtbl1.Rows(i).Item("int1").ToString

                                    Tot_DB = Tot_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    Tot_CR = Tot_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    NtTt_DB = NtTt_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    NtTt_CR = NtTt_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    PrevGrpNm = Dtbl1.Rows(i).Item("Name1").ToString

                                Next i

                                If Trim(UCase(PrevGrpNm)) <> "" Then
                                    If GrpHdRwNo > 0 Then
                                        .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                        .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")
                                    End If
                                End If

                                .Rows.Add()

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "TOTAL"
                                .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(NtTt_DB))
                                .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(NtTt_CR))
                                .Rows(N).Cells(3).Value = ""

                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.LightSteelBlue
                                    .Rows(N).Cells(j).Style.ForeColor = Color.DarkRed
                                Next

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "CLOSING BALANCE"
                                .Rows(N).Cells(1).Value = IIf(Val(NtTt_DB) > Val(NtTt_CR), Common_Procedures.Currency_Format(Val(NtTt_DB) - Val(NtTt_CR)), "")
                                .Rows(N).Cells(2).Value = IIf(Val(NtTt_CR) > Val(NtTt_DB), Common_Procedures.Currency_Format(Val(NtTt_CR) - Val(NtTt_DB)), "")
                                .Rows(N).Cells(3).Value = ""


                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                    .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                Next

                            End If

                            .Visible = True
                            .BringToFront()
                            .Focus()
                            If .Rows.Count > 0 Then
                                .CurrentCell = .Rows(0).Cells(0)
                                .CurrentCell.Selected = True
                            End If

                        End With

                    Else


                        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                        RpDs1.Name = "DataSet1"
                        RpDs1.Value = Dtbl1

                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GeneralTB.rdlc"

                        RptViewer.LocalReport.DataSources.Clear()

                        RptViewer.LocalReport.DataSources.Add(RpDs1)

                        RptViewer.LocalReport.Refresh()
                        RptViewer.RefreshReport()

                        RptViewer.Visible = True
                        RptViewer.Focus()
                        SendKeys.Send("{TAB}")
                    End If


                Case "group tb", "final tb", "weaver amount balance summary", "group ledger - grid", "final tb - grid", "group ledger - asondate"

                    RptHeading2 = RptHeading2 & IIf(Trim(RptHeading3) <> "", "   -   ", "") & RptHeading3

                    Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    Grp_IdNo = Common_Procedures.AccountsGroup_NameToIdNo(con, cbo_Inputs2.Text)

                    'If Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Then
                    '    If Grp_IdNo = 0 Then
                    '        MessageBox.Show("Invalid Group Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    '        If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                    '        Exit Sub
                    '    End If
                    'End If

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " tZ.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If

                    cmd.CommandText = "truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select tZ.* from Company_Head tZ Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tZ.Company_IdNo <> 0 Order by tZ.Company_IdNo", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            cmd.CommandText = "truncate table reporttempsub"
                            cmd.ExecuteNonQuery()

                            cmd.CommandText = "insert into reporttempsub ( Int1, Int2, date1, currency1 ) Select a.Company_IdNo, 12, a.Closing_Stock_Value_Date, sum(a.Closing_Stock_Value) from Closing_Stock_Value_Head a, Company_Head tZ where a.Company_IdNo = " & Str(Val(Dt1.Rows(i).Item("Company_IdNo").ToString)) & " and a.Closing_Stock_Value_Date <= @fromdate and a.Company_IdNo = tZ.Company_IdNo group by a.Company_IdNo, a.Closing_Stock_Value_Date Having sum(a.Closing_Stock_Value) <> 0"
                            Nr = cmd.ExecuteNonQuery()

                            cmd.CommandText = "insert into EntryTemp ( Int1, Int2, date1, currency1 ) Select top 1 Int1, Int2, date1, -1*Currency1 from ReportTempSub where date1 <= @fromdate Order by date1 desc"
                            Nr = cmd.ExecuteNonQuery()
                        Next i
                    End If
                    Dt1.Clear()



                    If cbo_Inputs2.Visible = True And Val(Grp_IdNo) <> 0 Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Parent_Code LIKE '%~" & Trim(Val(Grp_IdNo)) & "~%'"
                        'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tG.AccountsGroup_IdNo = " & Str(Val(Grp_IdNo))
                    End If
                    If Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance summary" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Ledger_Type = 'WEAVER' "
                    End If

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "group tb" Or Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Or Trim(LCase(RptIpDet_ReportName)) = "group ledger - asondate" Or Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance summary" Then

                        cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, name1, meters1, int1, name2, currency1, currency2 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and b.parent_code LIKE '%~18~' and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tZ.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, name1, meters1, int1, name2, currency1, currency2 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and b.parent_code NOT LIKE '%~18~' and b.parent_code NOT LIKE '%~9~4~' and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        '----Stock In Hand
                        cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, name1, meters1, int1, name2, currency1, currency2 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.Currency1) < 0 then abs(sum(a.Currency1)) else 0 end), (case when sum(a.Currency1) > 0 then abs(sum(a.Currency1)) else 0 end) from EntryTemp a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @fromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.Int1 = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.currency1) <> 0"
                        cmd.ExecuteNonQuery()


                    Else
                        cmd.CommandText = "Insert into reporttemp ( Company_Name , Company_Address1        , Company_Address2        , Report_Heading1            , Report_Heading2            , Report_Heading3            , name1                , meters1          , int1         , name2        , currency1                                                                       , currency2 ) " &
                                                " Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and tG.parent_idno NOT LIKE '%~18~' and tG.parent_idno NOT LIKE '%~9~4~' and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                        cmd.ExecuteNonQuery()

                        '----Stock In Hand
                        cmd.CommandText = "Insert into reporttemp ( Company_Name,     Company_Address1    ,     Company_Address2    ,      Report_Heading1       ,         Report_Heading2    ,         Report_Heading3    ,    name1             ,    meters1       ,   int1       ,    name2     ,                  currency1                                            ,                  currency2                                                       ) " &
                                            "Select     '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.Currency1) < 0 then abs(sum(a.Currency1)) else 0 end), (case when sum(a.Currency1) > 0 then abs(sum(a.Currency1)) else 0 end) from EntryTemp a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.date1 <= @fromdate and b.parent_code LIKE '%~9~4~' and a.int2 = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.Int1 = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.currency1) <> 0"
                        Nr = cmd.ExecuteNonQuery()

                    End If

                    'If Trim(LCase(RptIpDet_ReportName)) = "group tb" Or Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Then

                    '    cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, name1, meters1, int1, name2, currency1, currency2 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @companyfromdate and @fromdate and a.year_for_report < " & Str(Year(Common_Procedures.Company_ToDate)) & " and b.parent_code like '%~18~' and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tZ.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                    '    cmd.ExecuteNonQuery()

                    '    cmd.CommandText = "Insert into reporttemp ( Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3, name1, meters1, int1, name2, currency1, currency2 ) Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and b.parent_code not like '%~18~' and a.year_for_report < " & Str(Year(Common_Procedures.Company_ToDate)) & " and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                    '    cmd.ExecuteNonQuery()

                    'Else
                    '    cmd.CommandText = "Insert into reporttemp ( Company_Name , Company_Address1        , Company_Address2        , Report_Heading1            , Report_Heading2            , Report_Heading3            , name1                , meters1          , int1         , name2        , currency1                                                                       , currency2 ) " & _
                    '                            " Select '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "', tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name, (case when sum(a.voucher_amount) < 0 then abs(sum(a.voucher_amount)) else 0 end), (case when sum(a.voucher_amount) > 0 then abs(sum(a.voucher_amount)) else 0 end) from voucher_details a, ledger_head b, AccountsGroup_Head tG, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @fromdate and tG.parent_idno not like '%~18~' and a.ledger_idno = b.ledger_idno and b.AccountsGroup_IdNo = tG.AccountsGroup_IdNo and a.company_idno = tz.company_idno group by tG.AccountsGroup_Name, tG.Order_Position, b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                    '    cmd.ExecuteNonQuery()

                    'End If

                    Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, meters1, int1, name2, currency1, currency2 from reporttemp Order by meters1, name1, name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then


                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, meters1, name2, currency1, currency2 from reporttemp Order by meters1, name1, name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Or Trim(LCase(RptIpDet_ReportName)) = "final tb - grid" Then

                        With dgv_Report

                            .DataSource = Nothing

                            .BackgroundColor = Color.White
                            .BorderStyle = BorderStyle.FixedSingle

                            .AllowUserToAddRows = False
                            .AllowUserToDeleteRows = False
                            .AllowUserToOrderColumns = False
                            .ReadOnly = True
                            .SelectionMode = DataGridViewSelectionMode.FullRowSelect
                            .MultiSelect = False
                            .AllowUserToResizeColumns = False
                            .ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.DisableResizing
                            .AllowUserToResizeRows = False

                            .DefaultCellStyle.SelectionBackColor = Color.Lime
                            .DefaultCellStyle.SelectionForeColor = Color.Blue

                            .ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

                            .Columns.Clear()

                            .ColumnCount = 4

                            .RowHeadersVisible = False
                            .AllowUserToOrderColumns = False

                            .Columns(0).HeaderText = "PARTY NAME"
                            .Columns(1).HeaderText = "DEBIT"
                            .Columns(2).HeaderText = "CREDIT"
                            .Columns(3).HeaderText = "ledger_idno"

                            .Columns(3).Visible = False

                            .AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells
                            .AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill

                            .RowsDefaultCellStyle.BackColor = Color.White
                            .AlternatingRowsDefaultCellStyle.BackColor = Color.WhiteSmoke

                            '.RowsDefaultCellStyle.BackColor = Color.White
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.LightGray

                            '.RowsDefaultCellStyle.BackColor = Color.Bisque
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.Beige

                            '.RowsDefaultCellStyle.BackColor = Color.LightGray
                            '.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray

                            .Columns(0).FillWeight = 200
                            .Columns(1).FillWeight = 100
                            .Columns(2).FillWeight = 100
                            .Columns(3).FillWeight = 100

                            .Columns(0).DefaultCellStyle.Alignment = 1
                            .Columns(1).DefaultCellStyle.Alignment = 4
                            .Columns(2).DefaultCellStyle.Alignment = 4

                            .Columns(0).ReadOnly = True
                            .Columns(1).ReadOnly = True
                            .Columns(2).ReadOnly = True
                            .Columns(3).ReadOnly = True

                            .Columns(0).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(1).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(2).SortMode = DataGridViewColumnSortMode.NotSortable
                            .Columns(3).SortMode = DataGridViewColumnSortMode.NotSortable

                            .Rows.Clear()
                            Tot_CR = 0
                            Tot_DB = 0

                            Da = New SqlClient.SqlDataAdapter("select  * from reporttemp Order by name1, name2", con)
                            Dtbl1 = New DataTable
                            Da.Fill(Dtbl1)

                            Bal = 0
                            PrevGrpNm = ""
                            GrpHdRwNo = -1
                            If Dtbl1.Rows.Count > 0 Then

                                For i = 0 To Dtbl1.Rows.Count - 1

                                    If Trim(UCase(PrevGrpNm)) <> Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString)) Then

                                        If Trim(UCase(PrevGrpNm)) <> "" Then
                                            If GrpHdRwNo > 0 Then
                                                .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                                .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")

                                            End If
                                        End If

                                        Tot_CR = 0
                                        Tot_DB = 0

                                        .Rows.Add()

                                        N = .Rows.Add
                                        GrpHdRwNo = N
                                        .Rows(N).Cells(0).Value = Trim(UCase(Dtbl1.Rows(i).Item("Name1").ToString))
                                        .Rows(N).Cells(1).Value = ""
                                        .Rows(N).Cells(2).Value = ""
                                        .Rows(N).Cells(3).Value = ""

                                        .Rows(N).Height = 30
                                        For j = 0 To .ColumnCount - 1
                                            .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                            .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                            .Rows(N).Cells(j).Style.Font = New Font("Tahoma", 9, FontStyle.Bold)
                                        Next

                                    End If

                                    N = .Rows.Add
                                    .Rows(N).Cells(0).Value = Dtbl1.Rows(i).Item("Name2").ToString
                                    If Val(Dtbl1.Rows(i).Item("Currency1").ToString) <> 0 Then
                                        .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency1").ToString))
                                    End If
                                    If Val(Dtbl1.Rows(i).Item("Currency2").ToString) <> 0 Then
                                        .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(Dtbl1.Rows(i).Item("Currency2").ToString))
                                    End If
                                    .Rows(N).Cells(3).Value = Dtbl1.Rows(i).Item("int1").ToString

                                    Tot_DB = Tot_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    Tot_CR = Tot_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    NtTt_DB = NtTt_DB + Val(Dtbl1.Rows(i).Item("Currency1").ToString)
                                    NtTt_CR = NtTt_CR + Val(Dtbl1.Rows(i).Item("Currency2").ToString)

                                    PrevGrpNm = Dtbl1.Rows(i).Item("Name1").ToString

                                Next i

                                If Trim(UCase(PrevGrpNm)) <> "" Then
                                    If GrpHdRwNo > 0 Then
                                        .Rows(GrpHdRwNo).Cells(1).Value = IIf(Val(Tot_DB) > Val(Tot_CR), Common_Procedures.Currency_Format(Val(Tot_DB) - Val(Tot_CR)), "")
                                        .Rows(GrpHdRwNo).Cells(2).Value = IIf(Val(Tot_CR) > Val(Tot_DB), Common_Procedures.Currency_Format(Val(Tot_CR) - Val(Tot_DB)), "")
                                    End If
                                End If

                                .Rows.Add()

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "TOTAL"
                                .Rows(N).Cells(1).Value = Common_Procedures.Currency_Format(Val(NtTt_DB))
                                .Rows(N).Cells(2).Value = Common_Procedures.Currency_Format(Val(NtTt_CR))
                                .Rows(N).Cells(3).Value = ""

                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.LightSteelBlue
                                    .Rows(N).Cells(j).Style.ForeColor = Color.DarkRed
                                Next

                                N = .Rows.Add
                                .Rows(N).Cells(0).Value = "CLOSING BALANCE"
                                .Rows(N).Cells(1).Value = IIf(Val(NtTt_DB) > Val(NtTt_CR), Common_Procedures.Currency_Format(Val(NtTt_DB) - Val(NtTt_CR)), "")
                                .Rows(N).Cells(2).Value = IIf(Val(NtTt_CR) > Val(NtTt_DB), Common_Procedures.Currency_Format(Val(NtTt_CR) - Val(NtTt_DB)), "")
                                .Rows(N).Cells(3).Value = ""


                                N = .Rows.Count - 1
                                .Rows(N).Height = 40
                                For j = 0 To .ColumnCount - 1
                                    .Rows(N).Cells(j).Style.BackColor = Color.DarkGray
                                    .Rows(N).Cells(j).Style.ForeColor = Color.Red
                                Next

                            End If

                            .Visible = True
                            .BringToFront()
                            .Focus()
                            If .Rows.Count > 0 Then
                                .CurrentCell = .Rows(0).Cells(0)
                                .CurrentCell.Selected = True
                            End If

                        End With

                    Else
                        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                        RpDs1.Name = "DataSet1"
                        RpDs1.Value = Dtbl1

                        If Trim(LCase(RptIpDet_ReportName)) = "weaver amount balance summary" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Weaver_Amount_Balance_Summary.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GroupTB.rdlc"
                        End If

                        RptViewer.LocalReport.DataSources.Clear()

                        RptViewer.LocalReport.DataSources.Add(RpDs1)

                        RptViewer.LocalReport.Refresh()
                        RptViewer.RefreshReport()

                        RptViewer.Visible = True
                        RptViewer.Focus()
                        SendKeys.Send("{TAB}")

                    End If



                Case "customer bill pending - single", "customer bill pending - all", "customer bill pending - purchased", "customer bill pending - invoiced", "customer bill pending - single - with postdated amount", "customer bill pending - invoiced - notification"

                    If IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    Comp_IdNo = 0
                    If cbo_Inputs1.Visible Then Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

                    Led_IdNo = 0
                    If cbo_Inputs2.Visible Then
                        Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)
                        If Led_IdNo = 0 Then
                            MessageBox.Show("Invalid Party Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                            Exit Sub
                        End If
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
                        RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                    End If
                    If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Led_IdNo))
                    End If

                    cmd.CommandText = "truncate table reporttempsub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency1 ) Select tZ.company_idno, tP.ledger_idno, a.voucher_bill_code, 0 from voucher_bill_head a INNER JOIN company_head tz  ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency1 ) Select tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code, sum(a.Amount) from voucher_bill_details a INNER JOIN company_head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "insert into reporttempsub ( int1, int2, name1, currency2 ) Select tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code, sum(a.Amount) from voucher_bill_details a INNER JOIN company_head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date > @uptodate group by tZ.company_idno, tP.ledger_idno, a.Voucher_Bill_Code"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into EntryTemp ( int1, int2, name1, currency1, currency2 ) Select int1, int2, name1, sum(currency1), sum(currency2) from reporttempsub group by int1, int2, name1"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    IpColNm1 = "tZ.Company_ShortName"
                    If Comp_IdNo <> 0 Or ShowCompCol_STS = False Then
                        IpColNm1 = "'[HIDDEN]'"
                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - purchased" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.crdr_type = 'CR' and tP.ledger_type = '' "
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - invoiced" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.crdr_type = 'DR' and tP.ledger_type = '' "
                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - invoiced - notification" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " datediff(day, a.voucher_bill_date, @uptodate) > 30 "
                    End If

                    cmd.CommandText = "insert into ReportTemp ( name1, name2, name3, Date1, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7, Name10 ) Select " & IpColNm1 & ", tP.Ledger_Name, a.party_bill_no, a.voucher_bill_date, (case when lower(a.crdr_type) = 'cr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as cr_amount, (case when lower(a.crdr_type) = 'dr' then a.bill_amount else (case when b.currency1 is null then 0 else b.currency1 end ) end) as db_amount, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end)) as as_on_balance, a.crdr_type, b.currency2, abs(a.bill_amount - (case when b.currency1 is null then 0 else b.currency1 end) - (case when b.currency2 is null then 0 else b.currency2 end)) as net_balance, (CASE WHEN a.crdr_type = 'DR' THEN b.currency2 ELSE 0 END) as posted_amt_cr, (CASE WHEN a.crdr_type = 'CR' THEN b.currency2 ELSE 0 END) as posted_amt_Dr, datediff(day, a.voucher_bill_date, @uptodate) as noof_days, datediff (day, a.voucher_bill_date, getdate()) as noof_days_s, a.Entry_Identification from voucher_bill_head a, entrytemp b, company_head tz, ledger_head tp Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and (a.bill_amount- (case when b.currency1 is null then 0 else b.currency1 end)) <> 0 and a.voucher_bill_code = b.name1 and a.company_idno = b.int1 and a.ledger_idno = tP.ledger_idno and a.company_idno = tZ.company_idno order by a.voucher_bill_date, a.voucher_bill_code"
                    cmd.ExecuteNonQuery()

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1050" Then '---- Kumaravel Textiles
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Name6, name4, name2, date1, name3, name1", con)
                        Dt = New DataTable
                        Da.Fill(Dt)

                        If Dt.Rows.Count > 0 Then

                            For i = 0 To Dt.Rows.Count - 1

                                If Trim(UCase(Dt.Rows(i).Item("Name10").ToString)) Like "CSINV-*" Then

                                    Da = New SqlClient.SqlDataAdapter("Select z1.Remarks , Z1.Cash_Discount from ClothSales_Invoice_Head z1 where 'CSINV-' + z1.ClothSales_Invoice_Code = '" & Trim(Dt.Rows(i).Item("Name10").ToString) & "'", con)
                                    Dt1 = New DataTable
                                    Da.Fill(Dt1)
                                    If Dt1.Rows.Count > 0 Then

                                        cmd.CommandText = "Update ReportTemp set Name11 = '" & Trim(Dt1.Rows(0).Item("Remarks").ToString) & "', meters1 = " & Str(Val(Dt1.Rows(0).Item("Cash_Discount").ToString)) & "  Where Name10 = '" & Trim(Dt.Rows(i).Item("Name10").ToString) & "'"
                                        cmd.ExecuteNonQuery()

                                    End If
                                    Dt1.Clear()

                                End If
                            Next
                        End If
                    End If




                    H1 = "DAYS (I)"
                    H2 = "DAYS (S)"



                    cmd.CommandText = "Update ReportTemp set name8 = '" & Trim(H1) & "', name9 = '" & Trim(H2) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name2, name3, Date1, Date2, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7, name8, name9, name10 ,Name11,meters1  from reporttemp Order by name2, date1, name3, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        IpColNm1 = "'[HIDDEN]'"
                        cmd.CommandText = "Insert into reporttemp(name1, Currency12) values (" & IpColNm1 & ", -9999)"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Update ReportTemp set name8 = '" & Trim(H1) & "', name9 = '" & Trim(H2) & "'"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, name1, name2, name3, Date1, Date2, currency1, currency2, currency3, name4, currency4, currency5, currency6, currency7, int6, int7, name8, name9, name10 ,Name11,meters1 from reporttemp Order by name2, date1, name3, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    If Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - single" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Single.rdlc"

                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "customer bill pending - single - with postdated amount" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_Single_With_PostDated_Amount.rdlc"

                    Else


                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Pending_All.rdlc"


                    End If



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                    RptViewer.Focus()
                    SendKeys.Send("{TAB}")

                Case "party balance - billwise", "party balance - billwise simple"

                    If dtp_FromDate.Visible = True Then
                        If IsDate(dtp_FromDate.Text) = False Then
                            MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                            Exit Sub
                        End If
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.aREA_IdNo = " & Str(Val(Common_Procedures.Area_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into EntryTemp (int1, name1, currency1 ) Select b.ledger_idno, b.ledger_name, sum(a.voucher_amount) from voucher_details a, ledger_head b, AREA_head D, company_head tz where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @uptodate and b.AccountsGroup_IdNo = 10 and a.ledger_idno = b.ledger_idno and B.AREA_idno = D.AREA_idno  and a.company_idno = tz.company_idno group by b.ledger_idno, b.ledger_name having sum(a.voucher_amount) <> 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select int1 as Ledger_IdNo, name1 as Ledger_Name, abs(sum(currency1)) as BalanceAmount from EntryTemp group by int1, name1 having sum(currency1) < 0 Order by int1, name1", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)

                    Bal = 0
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            If Math.Abs(Val(Dt1.Rows(i).Item("BalanceAmount").ToString)) <> 0 Then

                                cmd.Parameters.Clear()
                                cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)

                                cmd.CommandText = "Truncate table EntryTempSub"
                                cmd.ExecuteNonQuery()

                                cmd.CommandText = "Insert into EntryTempSub (name1, meters1, date1, currency1 ) Select 'Opening', 0, a.voucher_date, abs(sum(a.voucher_amount)) as VouAmt from voucher_details a INNER JOIN company_head tz ON a.company_idno = tz.company_idno LEFT OUTER JOIN ledger_head B ON A.ledger_idno = B.ledger_idno LEFT OUTER JOIN AREA_HEAD D ON B.AREA_idno = D.AREA_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @uptodate and a.ledger_idno = " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & " and a.voucher_amount < 0 and a.Entry_Identification LIKE 'OPENI-%' group by a.voucher_date having sum(a.voucher_amount) <> 0"
                                cmd.ExecuteNonQuery()

                                cmd.CommandText = "Insert into EntryTempSub (name1, meters1, date1, currency1 ) Select c.sales_no, c.for_orderby, a.voucher_date, abs(sum(a.voucher_amount)) as VouAmt from voucher_details a INNER JOIN company_head tz ON a.company_idno = tz.company_idno LEFT OUTER JOIN sales_head c ON a.Entry_Identification = 'SALES-' + c.sales_code LEFT OUTER JOIN ledger_head B ON A.ledger_idno = B.ledger_idno LEFT OUTER JOIN AREA_HEAD D ON B.AREA_idno = D.AREA_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @uptodate and a.ledger_idno = " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & " and a.voucher_amount < 0 and a.Entry_Identification NOT LIKE 'OPENI-%' and a.Entry_Identification NOT LIKE 'GSALE-%' and a.Entry_Identification NOT LIKE 'GINVE-%' group by c.sales_no, c.for_orderby, a.voucher_date having sum(a.voucher_amount) <> 0"
                                cmd.ExecuteNonQuery()

                                cmd.CommandText = "Insert into EntryTempSub (name1, meters1, date1, currency1 ) Select c.sales_no, c.for_orderby, a.voucher_date, abs(sum(a.voucher_amount)) as VouAmt from voucher_details a INNER JOIN company_head tz ON a.company_idno = tz.company_idno INNER JOIN sales_head c ON a.Entry_Identification = c.sales_code LEFT OUTER JOIN ledger_head B ON A.ledger_idno = B.ledger_idno LEFT OUTER JOIN AREA_HEAD D ON B.AREA_idno = D.AREA_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @uptodate and a.ledger_idno = " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & " and a.voucher_amount < 0 and (a.Entry_Identification LIKE 'GSALE-%' OR a.Entry_Identification LIKE 'GINVE-%') group by c.sales_no, c.for_orderby, a.voucher_date having sum(a.voucher_amount) <> 0"
                                Nr = cmd.ExecuteNonQuery()

                                cmd.CommandText = "Select a.name1 as VouNo, a.meters1 as VouOrderBy, a.date1 as VouDate, a.currency1 as VouAmt from EntryTempSub a where a.currency1 <> 0 Order by a.date1 desc, a.meters1 desc, a.name1 desc"
                                'cmd.CommandText = "Select a.voucher_date, abs(sum(a.voucher_amount)) as VouAmt from voucher_details a INNER JOIN company_head tz ON a.company_idno = tz.company_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date <= @uptodate and a.ledger_idno = " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & " and a.voucher_amount < 0 group by a.voucher_date having sum(a.voucher_amount) <> 0 Order by a.voucher_date desc"

                                Da = New SqlClient.SqlDataAdapter(cmd)
                                Dt2 = New DataTable
                                Da.Fill(Dt2)

                                Bal = Math.Abs(Val(Dt1.Rows(i).Item("BalanceAmount").ToString))

                                If Dt2.Rows.Count > 0 Then

                                    For j = 0 To Dt2.Rows.Count - 1

                                        N = DateDiff(DateInterval.Day, CDate(Dt2.Rows(j).Item("VouDate")), dtp_FromDate.Value.Date)

                                        BlAmt = Val(Dt2.Rows(j).Item("VouAmt").ToString)
                                        RecAmt = 0
                                        Amt = 0
                                        If Bal >= Val(Dt2.Rows(j).Item("VouAmt").ToString) Then
                                            Amt = Val(Dt2.Rows(j).Item("VouAmt").ToString)
                                        Else
                                            Amt = Bal
                                        End If
                                        Bal = Bal - Amt

                                        RecAmt = BlAmt - Amt

                                        cmd.Parameters.Clear()
                                        cmd.Parameters.AddWithValue("@VouDate", Convert.ToDateTime(Dt2.Rows(j).Item("VouDate").ToString))

                                        cmd.CommandText = "Insert into ReportTempSub (                    Name1                 ,                              Meters1                     ,  Date1  ,                               int1                        ,         currency1      ,            currency2    ,          currency3   ,            int2     ) " &
                                                                "    Values ( '" & Trim(Dt2.Rows(j).Item("VouNo").ToString) & "', " & Str(Val(Dt2.Rows(j).Item("VouOrderBy").ToString)) & ", @VouDate, " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & ", " & Str(Val(BlAmt)) & ", " & Str(Val(RecAmt)) & ", " & Str(Val(Amt)) & ", " & Str(Val(N)) & " ) "
                                        cmd.ExecuteNonQuery()

                                        If Bal <= 0 Then
                                            Exit For
                                        End If

                                    Next j
                                End If
                                Dt2.Clear()

                                If Bal <> 0 Then
                                    N = 99999
                                    Amt = Bal
                                    cmd.CommandText = "Insert into ReportTempSub (  Name1   , Meters1,                                int1                       ,         currency1    , currency2,       currency3      ,            int2     ) " &
                                                            "          Values    ( 'Opening',     0  , " & Str(Val(Dt1.Rows(i).Item("Ledger_IdNo").ToString)) & ", " & Str(Val(Amt)) & ",      0   , " & Str(Val(Amt)) & ", " & Str(Val(N)) & " ) "
                                End If

                            End If

                        Next i

                    End If
                    Dt1.Clear()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp (  Name1,   Meters1,   Date1,   Int1       ,   Name2      ,   currency1,   currency2,   currency3,   Int2  ) " &
                                            "    Select        a.Name1, a.Meters1, a.Date1, b.Ledger_IdNo, b.Ledger_Name, a.currency1, a.currency2, a.currency3, a.Int2  from ReportTempSub a INNER JOIN Ledger_Head b ON a.Int1 = b.Ledger_IdNo"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Meters1, Date1, Int1, Name2, currency1, currency2, currency3, Int2  from reporttemp Order by Int2 desc, Date1, Meters1, Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into ReportTemp ( Int1 ,   Name1, Int2, Name2, currency1 ) VALUES ( 0 , '' ,  0 , '' , 0 ) "
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Meters1, Date1, Int1, Name2, currency1, currency2, currency3, Int2  from reporttemp Order by Int2 desc, Date1, Meters1, Name1, Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "party balance - billwise simple" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Party_OutStanding_BillWise_Simple.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Party_OutStanding_BillWise.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "day book"
                    DayBook_Report()


                Case "customer bill details - single", "customer bill details - agentwise - single"
                    Customer_Bill_Details_Single()
                Case "customer bill pending aging analysis"
                    Customer_Bills_Pending_AgingAnalysis()

                '----------------
                '-------------Employee ledger

                Case "employee ledger a/c"

                    If dtp_FromDate.Visible = True Then
                        If IsDate(dtp_FromDate.Text) = False Then
                            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                            Exit Sub
                        End If
                    End If
                    If dtp_ToDate.Visible = True Then
                        If IsDate(dtp_ToDate.Text) = False Then
                            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                            Exit Sub
                        End If
                    End If
                    If cbo_Inputs2.Visible = True Then
                        If Trim(cbo_Inputs2.Text) = "" Then
                            MessageBox.Show("Invalid Employee Name", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs2.Enabled Then cbo_Inputs2.Focus()
                            Exit Sub
                        End If
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    CompCondt = ""
                    If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                        CompCondt = "(Company_Type <> 'UNACCOUNT')"
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = Trim(CompCondt)
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    '-------- Amount
                    cmd.CommandText = "Insert into reporttemp(int3, name5, Currency1, Currency2) Select 0, 'Opening', (case when sum(a.Voucher_Amount) < 0 then abs(sum(a.Voucher_Amount)) else 0 end), (case when sum(a.Voucher_Amount) > 0 then abs(sum(a.Voucher_Amount)) else 0 end) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Date < @fromdate and a.Voucher_Amount <> 0 and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%') "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency1, Currency2) Select 22, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Voucher_No) as Particularss,  abs(a.Voucher_Amount), 0 from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount < 0 and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%') "
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency3, Currency2) Select 21, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Narration) as Particularss, abs(a.Voucher_Amount), 0 from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & "        a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount < 0  and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%') "
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency1, Currency2) Select 21, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Narration) as Particularss, 0, abs(a.Voucher_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & "        a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount > 0  and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%') "
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency1, Currency2) Select 21, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Voucher_No) as Particularss, 0, abs(a.Voucher_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & "       a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount > 0  and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%') "
                    'cmd.ExecuteNonQuery()

                    '---------------Advance
                    cmd.CommandText = "Insert into reporttemp(int3, name5, Currency4, Currency5) Select 0, 'Opening', (case when sum(a.Voucher_Amount) < 0 then abs(sum(a.Voucher_Amount)) else 0 end), (case when sum(a.Voucher_Amount) > 0 then abs(sum(a.Voucher_Amount)) else 0 end) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Date < @fromdate and a.Voucher_Amount <> 0  and (a.Voucher_Code LIKE 'ADVOP-%' or a.Voucher_Code LIKE 'EADPY-%' or a.Voucher_Code LIKE 'ADVLS-%')"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency4, Currency5) Select 22, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Voucher_No) as Particularss,  abs(a.Voucher_Amount), 0 from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and ( a.Voucher_Code LIKE 'ADVOP-%' or a.Voucher_Code LIKE 'EADPY-%' or a.Voucher_Code LIKE 'ADVLS-%') and a.Voucher_Amount < 0 "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp(int3, Date1, name1, name2, meters1, name3, name4, name5, Currency4, Currency5) Select 21, a.Voucher_Date, a.Entry_Identification, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name,  ((Case when a.Entry_Identification LIKE 'VOUCH-%' THEN 'Vou.' else '' end) + a.Voucher_Type + '-' + a.Voucher_No) as Particularss, 0, abs(a.Voucher_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and ( a.Voucher_Code LIKE 'ADVOP-%' or a.Voucher_Code LIKE 'EADPY-%' or a.Voucher_Code LIKE 'ADVLS-%' ) and a.Voucher_Amount > 0 "
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, Int4, Int5, Int6, Int7, Int8, Int9, weight1, weight2, meters6, meters7, meters8, meters10 , Currency1, Currency2, Currency3, Currency4, Currency5 ,  Currency10 , Currency5, Currency6 from reporttemp Order by Date1, Int3, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, Int4, Int5, Int6, Int7, Int8, Int9, weight1, weight2, meters6, meters7, meters8, Currency1, Currency2, Currency3, Currency5, Currency6 from reporttemp Order by Date1, Currency4, Currency5, Int3, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Accounts_Statement.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    'Debug.Print(Now)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

            End Select

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT SHOW REPORT....", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try



    End Sub
    Private Sub DayBook_Report()
        Dim Cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim Nr As Long = 0
        Dim Comp_IdNo As Integer = 0
        Dim CompCondt As String = ""
        Dim RptCondt As String = ""
        Dim IpColNm1 As String = ""
        Dim OpAmt As Double = 0

        CompCondt = ""
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(tZ.Company_Type <> 'UNACCOUNT')"
        End If

        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
        RptHeading3 = ""

        If IsDate(dtp_FromDate.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
            Exit Sub
        End If

        If IsDate(dtp_ToDate.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_ToDate.Visible = True And dtp_ToDate.Enabled = True Then dtp_ToDate.Focus()
            Exit Sub
        End If

        Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

        Cmd.Connection = con

        Cmd.Parameters.Clear()
        Cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        Cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
        Cmd.Parameters.AddWithValue("@companyfromdate", Common_Procedures.Company_FromDate)

        RptCondt = CompCondt

        IpColNm1 = ""
        If cbo_Inputs1.Visible = True Then
            If Val(Comp_IdNo) <> 0 Then
                RptCondt = " tZ.Company_IdNo = " & Str(Val(Comp_IdNo))
                IpColNm1 = "[HIDDEN]"
            End If
        Else
            IpColNm1 = "[HIDDEN]"
        End If


        OpAmt = 0
        Cmd.CommandText = "select sum(a.voucher_amount) from voucher_details a, ledger_head b, Company_Head tZ where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date < @fromdate and a.ledger_idno = b.ledger_idno and b.parent_code LIKE '%~6~4~%' and a.company_idno = tZ.company_idno"
        Da = New SqlClient.SqlDataAdapter(Cmd)
        Dt = New DataTable
        Da.Fill(Dt)
        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                OpAmt = Val(Dt.Rows(0)(0).ToString)
            End If
        End If
        Dt.Clear()


        Cmd.CommandText = "Truncate table ReportTemp"
        Cmd.ExecuteNonQuery()

        '---- Opening
        Cmd.CommandText = "Insert into ReportTemp(Int5, Date1, Meters1, Int6, Name1, Name2, Name3, Name4, Name5, Currency1, Currency2) values (0, @fromdate, 0, 0, 'OPENING', '', 'OPENING', '', '', " & IIf(OpAmt < 0, Math.Abs(OpAmt), 0) & ", " & IIf(OpAmt > 0, OpAmt, 0) & " ) "
        Cmd.ExecuteNonQuery()

        '---- Details
        Cmd.CommandText = "Insert into ReportTemp(Int5, Date1, Meters1, Int6, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name6) select 1, a.Voucher_Date, a.For_OrderBy, a.Sl_No, a.Voucher_Code, a.Voucher_No, 'By ' + c.ledger_name, Abs(a.voucher_amount), 0, a.narration, a.Voucher_Type, tZ.Company_ShortName from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN ledger_head c ON c.ledger_idno <> 0 and c.parent_code NOT LIKE '%~6~4~%' and a.ledger_idno = c.ledger_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and c.parent_code NOT LIKE '%~6~4~%' and a.ledger_idno <> 0 and a.voucher_amount < 0"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "Insert into ReportTemp(Int5, Date1, Meters1, Int6, Name1, Name2, Name3, Currency1, Currency2, Name4, Name5, Name6) select 2, a.Voucher_Date, a.For_OrderBy, a.Sl_No, a.Voucher_Code, a.Voucher_No, 'To ' + c.ledger_name, 0, a.Voucher_Amount, a.narration, a.Voucher_Type, tZ.Company_ShortName from voucher_details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN ledger_head c ON c.ledger_idno <> 0 and c.parent_code NOT LIKE '%~6~4~%' and a.ledger_idno = c.ledger_idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_date between @fromdate and @todate and c.parent_code NOT LIKE '%~6~4~%' and a.ledger_idno <> 0 and a.voucher_amount > 0"
        Cmd.ExecuteNonQuery()


        If Trim(IpColNm1) <> "" Then
            Cmd.CommandText = "Update ReportTemp set Name6 = '" & Trim(IpColNm1) & "'"
            Cmd.ExecuteNonQuery()

        End If

        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name6, Name4, Name5, Name6, Meters6 from reporttemp Order by Date1, meters1, name5, Int6, name2, name1", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            Cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
            Cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select  '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int5, Date1, Meters1, Name1, Name2, Name3, Currency1, Currency2, Name6, Name4, Name5, Name6, Meters6 from reporttemp Order by Int5, Date1, meters1, name2, name1", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_DayBook.rdlc"

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True
        RptViewer.Focus()
        SendKeys.Send("{TAB}")

    End Sub
    Private Sub Customer_Bill_Details_Single()
        Dim Cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dtbl1 As New DataTable
        Dim Dt1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String = ""
        Dim CompCondt As String = ""
        Dim Comp_IdNo As Integer
        Dim i As Integer
        Dim Led_IdNo As Integer
        Dim Nr As Long = 0
        Dim IpColVal1 As String = ""
        Dim rf As String = ""
        Dim amt As Single
        Dim v_amt As Single
        Dim Prev_SlNo As Long = 0
        Dim Ag_JoinType As String = ""
        Dim Tot_Bill_Amt As Single = 0

        If IsDate(dtp_FromDate.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
            Exit Sub
        End If

        If IsDate(dtp_ToDate.Text) = False Then
            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_ToDate.Visible = True And dtp_ToDate.Enabled = True Then dtp_ToDate.Focus()
            Exit Sub
        End If

        Comp_IdNo = 0
        If cbo_Inputs1.Visible Then Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

        Led_IdNo = 0
        If cbo_Inputs2.Visible Then
            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)
            If Led_IdNo = 0 Then
                MessageBox.Show("Invalid Ledger Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If cbo_Inputs2.Enabled And cbo_Inputs2.Visible Then cbo_Inputs2.Focus()
                Exit Sub
            End If
        End If

        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", "   -   ", "") & RptHeading3
        RptHeading3 = ""

        Cmd.Connection = con

        Cmd.Parameters.Clear()
        Cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        Cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

        CompCondt = ""
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT')"
        End If

        RptCondt = CompCondt

        IpColVal1 = ""
        If cbo_Inputs1.Visible = True Then
            If Trim(cbo_Inputs1.Text) <> "" Then
                RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
                IpColVal1 = "[HIDDEN]"
            End If

        Else
            IpColVal1 = "[HIDDEN]"

        End If


        Ag_JoinType = "LEFT OUTER JOIN"
        If cbo_Inputs2.Visible = True And Val(Led_IdNo) <> 0 Then

            If Trim(LCase(RptIpDet_ReportName)) = "customer bill details - agentwise - single" Then
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tA.Ledger_IdNo = " & Str(Val(Led_IdNo))
                Ag_JoinType = "INNER JOIN"
            Else
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Led_IdNo))
            End If

        End If

        Cmd.Connection = con

        'Case "customer bill details - single", "customer bill details - agentwise - single"
        'Cmd.CommandText = "Insert into reporttempsub ( Name9, Name10, Name1, Name2, Name3, Name4, Name5, currency" & Trim(i + 1) & " ) Select tA.Ledger_Name, tP.Ledger_Name, '" & Trim(S1) & "', '" & Trim(S2) & "', '" & Trim(S3) & "', '" & Trim(S4) & "', '" & Trim(S5) & "', sum(a.debit_amount - a.credit_amount) from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tz.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo INNER JOIN Ledger_Head tA ON a.Agent_IdNo <> 0 and a.Agent_idno = tA.Ledger_IdNo Where " & Trim(RptCondt) & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and datediff(dd, a.voucher_bill_date, @uptodate) between " & Str(Val(oldvl)) & " and " & Str(Val(b(i))) & " and a.debit_amount > a.credit_amount group by tA.Ledger_Name, tP.Ledger_Name"

        Cmd.CommandText = "truncate table reporttempsub"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "insert into reporttempsub (  int1,   date3            ,   currency1,   name1            ,   date1            ,   meters1    ,   name9          ,   currency2  ,                currency3                                                                                                                                                                                                    ,   name2        ,   name3    ,   name4       ,   name10       ,   date2       ,   name5    ,   name6                   ,   name7       ,   name8            ,   name11  ,   Int7       ,    Name12     ,    Name13     ) " _
                                & " Select   tz.company_idno, a.voucher_bill_date, a.amount   , b.Voucher_Bill_Code, b.voucher_bill_date, b.For_OrderBy, b.voucher_bill_no, b.bill_amount, ( Select sum(z.amount) from voucher_bill_details z where z.voucher_bill_date < @fromdate and z.voucher_bill_code = b.voucher_bill_code and z.company_idno = b.company_idno and z.ledger_idno = b.ledger_idno ) as prv_amount, b.party_bill_no, b.crdr_type, d.voucher_code, d.voucher_no, c.voucher_date, c.narration, e.ledger_name as bank_name, d.voucher_type, d.entry_identification, d.Entry_ID, b.Ledger_IdNo, tP.Ledger_name, tAr.Area_Name   " _
                                & " from voucher_bill_details a, voucher_bill_head b INNER JOIN Ledger_Head tP ON b.Ledger_IdNo <> 0 and b.Ledger_idno = tP.Ledger_IdNo LEFT OUTER JOIN Area_Head tAR ON tP.Area_idNo = tAR.Area_IdNo " & Ag_JoinType & " Ledger_Head tA ON b.Agent_IdNo <> 0 and b.Agent_idno = tA.Ledger_IdNo, voucher_details c, voucher_head d, ledger_head e, company_head tz " _
                                & " where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date between @fromdate and @todate and tZ.company_idno <> 0 and a.company_idno = tZ.company_idno and a.voucher_bill_code = b.voucher_bill_code and a.company_idno = b.company_idno and b.ledger_idno = c.ledger_idno and ( a.entry_identification = 'VOUCH-'+d.Voucher_Code or a.entry_identification = d.entry_identification ) and a.company_idno = d.company_idno and c.Voucher_Code = d.Voucher_Code and c.company_idno = d.company_idno and (case when a.ledger_idno = d.creditor_idno then d.debtor_idno else d.creditor_idno end) = e.ledger_idno order by b.voucher_bill_date, b.For_OrderBy, b.voucher_bill_no, a.voucher_bill_date"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "insert into reporttempsub ( int1,         currency1                                                                                                                                                          ,   name1            ,   name9          ,   date1            ,   meters1    ,   currency2  ,   name2        ,   name3    ,   Int7       ,    Name12     ,     name13  ) " _
                                & "Select   tz.company_idno, (select sum(z.amount) from voucher_bill_details z where z.voucher_bill_code = a.voucher_bill_code and z.company_idno = a.company_idno and z.voucher_bill_date < @fromdate ), a.voucher_bill_code, a.voucher_bill_no, a.voucher_bill_date, a.For_OrderBy, a.bill_amount, a.party_bill_no, a.crdr_type, a.Ledger_IdNo, tP.Ledger_name, tAr.Area_Name  " _
                                & " from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tZ.company_idno  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo LEFT OUTER JOIN Area_Head tAR ON tP.Area_idNo = tAR.Area_IdNo " & Ag_JoinType & " Ledger_Head tA ON a.Agent_IdNo <> 0 and a.Agent_idno = tA.Ledger_IdNo " _
                                & " where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @todate and (case when a.crdr_type = 'CR' then a.credit_amount else a.debit_amount end ) <> ( select ( case when sum(vbd.amount) is null then 0 else sum(vbd.amount) end ) from voucher_bill_details vbd where vbd.voucher_bill_code = a.voucher_bill_code and vbd.company_idno = a.company_idno and vbd.voucher_bill_date <= @todate ) and a.voucher_bill_code NOT IN ( select z2.name1 from reporttempsub z2) "
        Cmd.ExecuteNonQuery()


        Cmd.CommandText = "truncate table reporttemp"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "insert into reporttemp (   date1,   meters1,   name1,    name2            ,   name3,   Currency1,   currency3,   name4,                                                                          name5                                                                                    ,   date2,   name6,   name7,   date3,   currency2,                                                       name8                                      , currency4,   name9, currency5, name10,                  Int6           , Int7, Name12, name13  ) " _
                               & "    Select        a.date1, a.meters1, a.name1, tz.company_shortname, a.name2, a.currency2, a.currency3, a.name3, (case when a.currency1 <> 0 then  (case when a.name8 NOT LIKE 'VOUCH-%' and len(a.name8) > 12 then a.name11 else 'V' + a.name7 + '-' + a.name10 end)  else '' end), a.date2, a.name6, a.name5, a.date3, a.currency1, (case when a.currency1 <> 0 then (case when a.name3 = 'CR' then 'Dr' else 'Cr' end ) else '' end),      0   , a.name3,       0  ,   ''  ,  datediff(day, a.date1, a.date2), Int7, Name12, name13  From ReportTempSub a, company_head tZ where a.int1 <> 0 and a.int1 = tz.company_idno"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "Update reporttemp set Weight1 = (select sum(z1.bill_amount) from voucher_bill_head z1 where z1.voucher_bill_Code IN (select z2.name1 from reportTemp z2) )"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "Update reporttemp set Weight2 = (select sum(z1.bill_amount) from voucher_bill_head z1 where z1.Ledger_Idno = a.Int7 and z1.voucher_bill_Code IN (select z2.name1 from reportTemp z2 where z2.Int7 = z1.Ledger_Idno ) ) from reporttemp a, voucher_bill_head b where a.Int7 = b.Ledger_Idno "
        Cmd.ExecuteNonQuery()

        If Trim(IpColVal1) <> "" Then
            Cmd.CommandText = "Update reporttemp set name2 = '" & Trim(IpColVal1) & "'"
            Nr = Cmd.ExecuteNonQuery()
        End If

        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, date1, meters1, name1, name2, name3, Currency1, currency3, name4, name5, date2, name6, name7, date3, currency2, name8, currency4, name9, currency5, name10, Int6, Weight1, Weight2, Int7, Name12, name13 from reporttemp order by name13, name12, date1, meters1, name1, date2, date3", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        rf = ""
        If Dtbl1.Rows.Count > 0 Then

            For i = 0 To Dtbl1.Rows.Count - 1

                If rf <> Dtbl1.Rows(i).Item("name1").ToString() Then
                    If amt <> 0 Then
                        Dtbl1.Rows(Prev_SlNo).Item("currency5") = Val(amt)
                        Dtbl1.Rows(Prev_SlNo).Item("name10") = Dtbl1.Rows(Prev_SlNo).Item("name4").ToString()
                    End If

                    amt = Val(Dtbl1.Rows(i).Item("Currency1").ToString())
                    If Dtbl1.Rows(i).Item("currency3").ToString() <> "" Then amt = amt - Val(Dtbl1.Rows(i).Item("currency3").ToString())
                End If

                v_amt = 0
                If Dtbl1.Rows(i).Item("currency2").ToString() <> "" Then v_amt = Val(Dtbl1.Rows(i).Item("currency2").ToString())

                amt = amt - v_amt

                Dtbl1.Rows(i).Item("currency4") = Val(amt)
                Dtbl1.Rows(i).Item("name9") = Dtbl1.Rows(i).Item("name4").ToString()

                rf = Dtbl1.Rows(i).Item("name1").ToString()

                Prev_SlNo = i

            Next i

            If amt <> 0 Then
                Dtbl1.Rows(Prev_SlNo).Item("currency5") = Val(amt)
                Dtbl1.Rows(Prev_SlNo).Item("name10") = Dtbl1.Rows(Prev_SlNo).Item("name4").ToString()
            End If

        Else
            Cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
            Cmd.ExecuteNonQuery()

            If Trim(IpColVal1) <> "" Then
                Cmd.CommandText = "Update reporttemp set name2 = '" & Trim(IpColVal1) & "'"
                Nr = Cmd.ExecuteNonQuery()
            End If

            Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, date1, meters1, name1, name2, name3, Currency1, name4, name5, date2, name6, name7, date3, currency2, name8, currency3, name9, currency4, name10, Int6, Weight1, Weight2, Int7, Name12, name13 from reporttemp order by name13, name12, date1, meters1, name1, date2, date3", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        If Trim(LCase(RptIpDet_ReportName)) = "customer bill details - agentwise - single" Then
            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Details_AgentWise_Single.rdlc"
        Else
            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Customer_Bill_Details_Single.rdlc"
        End If


        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True

        RptViewer.Focus()
        SendKeys.Send("{TAB}")

    End Sub

    Private Sub Customer_Bills_Pending_AgingAnalysis()
        Dim Cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String = ""
        Dim CompCondt As String = ""
        Dim Comp_IdNo As Integer
        Dim b() As String
        Dim i As Integer
        Dim S As String
        Dim oldvl As String
        Dim RepPeriods As String = ""

        If IsDate(dtp_FromDate.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If dtp_FromDate.Visible = True And dtp_FromDate.Enabled = True Then dtp_FromDate.Focus()
            Exit Sub
        End If

        Comp_IdNo = 0
        If cbo_Inputs1.Visible Then Comp_IdNo = Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)

        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", "   -   ", "") & RptHeading3
        RptHeading3 = ""

        Cmd.Connection = con

        Cmd.Parameters.Clear()
        Cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)

        CompCondt = ""
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT')"
        End If

        RptCondt = CompCondt
        If cbo_Inputs1.Visible = True And Val(Comp_IdNo) <> 0 Then
            RptCondt = " a.Company_IdNo = " & Str(Val(Comp_IdNo))
        End If

        If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
            RepPeriods = cbo_Inputs2.Text
        End If
        If Trim(RepPeriods) = "" Then
            RepPeriods = "30,60,90,120"
        End If

        b = Split(RepPeriods, ",")

        Cmd.Connection = con

        Cmd.CommandText = "truncate table reporttempsub"
        Cmd.ExecuteNonQuery()

        oldvl = "0"

        For i = 0 To UBound(b)

            S = Trim(Val(oldvl)) & " TO " & Trim(Val(b(i)))

            Cmd.CommandText = "Insert into reporttempsub ( Int1,    Name1      , Int2, Name2, currency1) " &
                                        " Select tP.Ledger_idNo, tP.Ledger_Name, " & Str(Val(i) + 1) & ", '" & Trim(S) & "',      0    from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tz.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo Where " & Trim(RptCondt) & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and datediff(dd, a.voucher_bill_date, @uptodate) between " & Str(Val(oldvl)) & " and " & Str(Val(b(i))) & " and a.debit_amount > a.credit_amount group by tP.Ledger_idNo, tP.Ledger_Name"
            Cmd.ExecuteNonQuery()

            Cmd.CommandText = "Insert into reporttempsub ( Int1,    Name1      , Int2, Name2, currency1) " &
                                        " Select tP.Ledger_idNo, tP.Ledger_Name, " & Str(Val(i) + 1) & ", '" & Trim(S) & "', sum(a.debit_amount - a.credit_amount) from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tz.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo Where " & Trim(RptCondt) & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and datediff(dd, a.voucher_bill_date, @uptodate) between " & Str(Val(oldvl)) & " and " & Str(Val(b(i))) & " and a.debit_amount > a.credit_amount group by tP.Ledger_idNo, tP.Ledger_Name"
            Cmd.ExecuteNonQuery()

            oldvl = Val(b(i)) + 1

        Next i

        If Val(oldvl) <> 0 Then

            S = "ABV " & Trim(Val(oldvl) - 1)

            Cmd.CommandText = "Insert into reporttempsub ( Int1,    Name1      , Int2, Name2, currency1) " &
                                        " Select tP.Ledger_idNo, tP.Ledger_Name, " & Str(Val(i) + 1) & ", '" & Trim(S) & "',      0    from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tz.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo Where " & Trim(RptCondt) & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and datediff(dd, a.voucher_bill_date, @uptodate) >= " & Str(Val(oldvl)) & " and a.debit_amount > a.credit_amount group by tP.Ledger_idNo, tP.Ledger_Name"
            Cmd.ExecuteNonQuery()

            Cmd.CommandText = "Insert into reporttempsub ( Int1,    Name1      , Int2, Name2, currency1) " &
                                        " Select tP.Ledger_idNo, tP.Ledger_Name, " & Str(Val(i) + 1) & ", '" & Trim(S) & "', sum(a.debit_amount - a.credit_amount) from voucher_bill_head a INNER JOIN company_head tz ON a.company_idno <> 0 and a.company_idno = tz.company_idno INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_idno = tP.Ledger_IdNo Where " & Trim(RptCondt) & IIf(RptCondt <> "", " and ", "") & " a.voucher_bill_date <= @uptodate and datediff(dd, a.voucher_bill_date, @uptodate)  >= " & Str(Val(oldvl)) & " and a.debit_amount > a.credit_amount group by tP.Ledger_idNo, tP.Ledger_Name"
            Cmd.ExecuteNonQuery()

        End If

        Cmd.CommandText = "truncate table reporttemp"
        Cmd.ExecuteNonQuery()

        Cmd.CommandText = "insert into ReportTemp ( Int1,    Name1      , Int2, Name2, currency1 ) Select Int1, Name1, Int2, Name2, sum(currency1) from reporttempsub group by Int1, Name1, Int2, Name2 having sum(currency1) <> 0 "
        Cmd.ExecuteNonQuery()

        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int1,    Name1      , Int2, Name2, currency1  from reporttemp Order by name1, Int2, name2", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            oldvl = "0"

            For i = 0 To UBound(b)

                S = Trim(Val(oldvl)) & " TO " & Trim(Val(b(i)))

                Cmd.CommandText = "Insert into reporttempsub ( Int2, Name2, Currency12) values (" & Str(Val(i) + 1) & ", '" & Trim(S) & "', -99999 )"

                oldvl = Val(b(i)) + 1

            Next i

            If Val(oldvl) <> 0 Then

                S = "ABV " & Trim(Val(oldvl) - 1)

                Cmd.CommandText = "Insert into reporttempsub ( Int2, Name2, Currency12) values (" & Str(Val(i) + 1) & ", '" & Trim(S) & "', -99999 )"
                Cmd.ExecuteNonQuery()

            End If

            Cmd.CommandText = "truncate table reporttemp"
            Cmd.ExecuteNonQuery()

            Cmd.CommandText = "insert into ReportTemp ( Int1,    Name1      , Int2, Name2, currency1 ) Select Int1, Name1, Int2, Name2, sum(currency1) from reporttempsub group by Int1, Name1, Int2, Name2 "
            Cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Int1,    Name1      , Int2, Name2, currency1  from reporttemp Order by name1, Int2, name2", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Party_OutStanding_DayWise.rdlc"

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True

    End Sub

    Private Sub dgv_Report_CellFormatting(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellFormattingEventArgs) Handles dgv_Report.CellFormatting

        Select Case Trim(LCase(RptIpDet_ReportName))
            Case "single ledger - grid - datewise"
                If e.ColumnIndex = 5 Or e.ColumnIndex = 6 Then
                    If Val(e.Value.ToString) = 0 Then
                        e.Value = ""
                        e.FormattingApplied = True
                    End If
                End If
        End Select

    End Sub

    'Private Sub dgv_Report_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Report.KeyDown

    'Dim I As Integer = 0
    'Dim J As Integer = 0
    'Dim vDateInp1 As Date
    'Dim vDateInp2 As Date
    'Dim vCboInpText1 As String = ""
    'Dim vCboInpText2 As String = ""
    'Dim vCboInpText3 As String = ""
    'Dim vCboInpText4 As String = ""
    'Dim vCboInpText5 As String = ""
    'Dim vVou_Code As String = ""
    'Dim vVou_CompNm As String = ""
    'Dim vVou_No As String = ""
    'Dim vVou_Type As String = ""
    'Dim vLed_IdNo As Long = 0

    'If e.KeyCode = Keys.Enter Then

    '    e.Handled = True
    '    e.SuppressKeyPress = True

    '    vDateInp1 = dtp_FromDate.Value.ToShortDateString
    '    vDateInp2 = dtp_ToDate.Value.ToShortDateString
    '    vCboInpText1 = cbo_Inputs1.Text
    '    vCboInpText2 = cbo_Inputs2.Text
    '    vCboInpText3 = cbo_Inputs3.Text
    '    vCboInpText4 = cbo_Inputs4.Text
    '    vCboInpText5 = cbo_Inputs5.Text

    '    vVou_CompNm = ""
    '    vVou_Code = ""
    '    vVou_No = ""
    '    vVou_Type = ""
    '    vLed_IdNo = 0

    '    With dgv_Report

    '        If Trim(LCase(RptIpDet_ReportName)) = "single ledger - grid - datewise" Or Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Then

    '            If Trim(LCase(RptIpDet_ReportName)) = "group ledger - grid" Then
    '                vLed_IdNo = Val(.Rows(.CurrentCell.RowIndex).Cells(.ColumnCount - 1).Value)
    '                If Val(vLed_IdNo) = 0 Then
    '                    Exit Sub
    '                End If
    '            End If

    '            If Trim(LCase(RptIpDet_ReportName)) = "single ledger - grid - datewise" Then
    '                vVou_Code = Trim(.Rows(.CurrentCell.RowIndex).Cells(.ColumnCount - 1).Value)
    '                vVou_Type = Trim(.Rows(.CurrentCell.RowIndex).Cells(1).Value)
    '                vVou_CompNm = Trim(.Rows(.CurrentCell.RowIndex).Cells(2).Value)
    '                vVou_No = Trim(.Rows(.CurrentCell.RowIndex).Cells(3).Value)
    '                If Trim(vVou_Code) = "" Or Trim(vVou_CompNm) = "" Then
    '                    Exit Sub
    '                End If

    '            End If

    '            RptSubReport_Index = RptSubReport_Index + 1

    '            RptSubReportDet(RptSubReport_Index).ReportName = ""
    '            RptSubReportDet(RptSubReport_Index).ReportGroupName = ""
    '            RptSubReportDet(RptSubReport_Index).ReportHeading = ""
    '            RptSubReportDet(RptSubReport_Index).ReportInputs = ""
    '            RptSubReportDet(RptSubReport_Index).IsGridReport = False
    '            RptSubReportDet(RptSubReport_Index).CurrentRowVal = -1
    '            RptSubReportDet(RptSubReport_Index).TopRowVal = -1
    '            RptSubReportDet(RptSubReport_Index).DateInp_Value1 = #1/1/1900#
    '            RptSubReportDet(RptSubReport_Index).DateInp_Value2 = #1/1/1900#
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text1 = ""
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text2 = ""
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text3 = ""
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text4 = ""
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text5 = "'"

    '            For I = 1 To 10

    '                RptSubReportInpDet(RptSubReport_Index, I).PKey = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).TableName = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).Selection_FieldName = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).Return_FieldName = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).Condition = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).Display_Name = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).BlankFieldCondition = ""
    '                RptSubReportInpDet(RptSubReport_Index, I).CtrlType_Cbo_OR_Txt = ""

    '            Next I

    '            RptSubReportDet(RptSubReport_Index).ReportName = RptIpDet_ReportName
    '            RptSubReportDet(RptSubReport_Index).ReportGroupName = RptIpDet_ReportGroupName
    '            RptSubReportDet(RptSubReport_Index).ReportHeading = RptIpDet_ReportHeading
    '            RptSubReportDet(RptSubReport_Index).ReportInputs = RptIpDet_ReportInputs
    '            RptSubReportDet(RptSubReport_Index).IsGridReport = RptIpDet_IsGridReport
    '            RptSubReportDet(RptSubReport_Index).CurrentRowVal = .CurrentCell.RowIndex
    '            RptSubReportDet(RptSubReport_Index).TopRowVal = .FirstDisplayedScrollingRowIndex

    '            RptSubReportDet(RptSubReport_Index).DateInp_Value1 = dtp_FromDate.Value.ToShortDateString
    '            RptSubReportDet(RptSubReport_Index).DateInp_Value2 = dtp_ToDate.Value.ToShortDateString
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text1 = cbo_Inputs1.Text
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text2 = cbo_Inputs2.Text
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text3 = cbo_Inputs3.Text
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text4 = cbo_Inputs4.Text
    '            RptSubReportDet(RptSubReport_Index).CboInp_Text5 = cbo_Inputs5.Text

    '            For I = 1 To 10

    '                RptSubReportInpDet(RptSubReport_Index, I).PKey = RptCboDet(I).PKey
    '                RptSubReportInpDet(RptSubReport_Index, I).TableName = RptCboDet(I).TableName
    '                RptSubReportInpDet(RptSubReport_Index, I).Selection_FieldName = RptCboDet(I).Selection_FieldName
    '                RptSubReportInpDet(RptSubReport_Index, I).Return_FieldName = RptCboDet(I).Return_FieldName
    '                RptSubReportInpDet(RptSubReport_Index, I).Condition = RptCboDet(I).Condition
    '                RptSubReportInpDet(RptSubReport_Index, I).Display_Name = RptCboDet(I).Display_Name
    '                RptSubReportInpDet(RptSubReport_Index, I).BlankFieldCondition = RptCboDet(I).BlankFieldCondition
    '                RptSubReportInpDet(RptSubReport_Index, I).CtrlType_Cbo_OR_Txt = RptCboDet(I).CtrlType_Cbo_OR_Txt

    '            Next I

    '            dgv_Report.DataSource = Nothing
    '            dgv_Report.Rows.Clear()
    '            dgv_Report.Columns.Clear()

    '            Select Case Trim(LCase(RptIpDet_ReportName))
    '                Case "single ledger - grid - datewise"
    '                    Select Case Trim(UCase(Microsoft.VisualBasic.Left(vVou_Code, 6)))
    '                        Case "VOUCH-"

    '                            If Trim(UCase(Microsoft.VisualBasic.Right(vVou_Code, 5))) = Common_Procedures.FnYearCode Then

    '                                Common_Procedures.CompIdNo = 0
    '                                Dim f As New Voucher_Entry

    '                                Common_Procedures.VoucherType = vVou_Type
    '                                f.RptSubReport_Index = RptSubReport_Index
    '                                f.RptSubReport_CompanyShortName = vVou_CompNm
    '                                f.RptSubReport_VouNo = vVou_No

    '                                For I = 1 To 10

    '                                    f.RptSubReportDet(I).ReportName = RptSubReportDet(I).ReportName
    '                                    f.RptSubReportDet(I).ReportGroupName = RptSubReportDet(I).ReportGroupName
    '                                    f.RptSubReportDet(I).ReportHeading = RptSubReportDet(I).ReportHeading
    '                                    f.RptSubReportDet(I).ReportInputs = RptSubReportDet(I).ReportInputs
    '                                    f.RptSubReportDet(I).IsGridReport = RptSubReportDet(I).IsGridReport
    '                                    f.RptSubReportDet(I).CurrentRowVal = RptSubReportDet(I).CurrentRowVal
    '                                    f.RptSubReportDet(I).TopRowVal = RptSubReportDet(I).TopRowVal

    '                                    f.RptSubReportDet(I).DateInp_Value1 = RptSubReportDet(I).DateInp_Value1
    '                                    f.RptSubReportDet(I).DateInp_Value2 = RptSubReportDet(I).DateInp_Value2
    '                                    f.RptSubReportDet(I).CboInp_Text1 = RptSubReportDet(I).CboInp_Text1
    '                                    f.RptSubReportDet(I).CboInp_Text2 = RptSubReportDet(I).CboInp_Text2
    '                                    f.RptSubReportDet(I).CboInp_Text3 = RptSubReportDet(I).CboInp_Text3
    '                                    f.RptSubReportDet(I).CboInp_Text4 = RptSubReportDet(I).CboInp_Text4
    '                                    f.RptSubReportDet(I).CboInp_Text5 = RptSubReportDet(I).CboInp_Text5

    '                                    For J = 1 To 10

    '                                        f.RptSubReportInpDet(I, J).PKey = RptSubReportInpDet(I, J).PKey
    '                                        f.RptSubReportInpDet(I, J).TableName = RptSubReportInpDet(I, J).TableName
    '                                        f.RptSubReportInpDet(I, J).Selection_FieldName = RptSubReportInpDet(I, J).Selection_FieldName
    '                                        f.RptSubReportInpDet(I, J).Return_FieldName = RptSubReportInpDet(I, J).Return_FieldName
    '                                        f.RptSubReportInpDet(I, J).Condition = RptSubReportInpDet(I, J).Condition
    '                                        f.RptSubReportInpDet(I, J).Display_Name = RptSubReportInpDet(I, J).Display_Name
    '                                        f.RptSubReportInpDet(I, J).BlankFieldCondition = RptSubReportInpDet(I, J).BlankFieldCondition
    '                                        f.RptSubReportInpDet(I, J).CtrlType_Cbo_OR_Txt = RptSubReportInpDet(I, J).CtrlType_Cbo_OR_Txt

    '                                    Next J

    '                                Next I

    '                                f.MdiParent = MDIParent1
    '                                f.Show()
    '                                If Val(Common_Procedures.CompIdNo) = 0 Then
    '                                    f.Close()
    '                                    f.Dispose()
    '                                End If

    '                                Me.Close()
    '                                Me.Dispose()

    '                            End If

    '                            'Case "YNPUR-", "YPAGC-"

    '                            'Case "WVWAG-", "WPYMT-"

    '                            'Case "CSINV-", "CSAGC-"

    '                            'Case "ICINV-", "ICAGC-"

    '                    End Select



    '                Case "group ledger - grid"

    '                    'Dim f As New Report_Details
    '                    Common_Procedures.RptInputDet.ReportGroupName = "Accounts"
    '                    Common_Procedures.RptInputDet.ReportName = "single ledger - Grid - datewise"
    '                    Common_Procedures.RptInputDet.ReportHeading = "Ledger Statement"
    '                    Common_Procedures.RptInputDet.IsGridReport = True
    '                    Common_Procedures.RptInputDet.ReportInputs = "2DT,Z,*L"
    '                    'f.MdiParent = Me
    '                    'f.Show()

    '                    Me.Report_Details_Load(sender, e)

    '                    dtp_FromDate.Text = Common_Procedures.Company_FromDate
    '                    dtp_ToDate.Text = vDateInp1.ToString

    '                    cbo_Inputs1.Text = Trim(vCboInpText1)
    '                    cbo_Inputs2.Text = Common_Procedures.Ledger_IdNoToName(con, vLed_IdNo)
    '                    cbo_Inputs3.Text = ""
    '                    cbo_Inputs4.Text = ""

    '                    cbo_Inputs5.Text = ""

    '                    Show_Report()


    '            End Select

    '        End If

    '    End With

    'End If

    ' End Sub

    Private Sub dgv_Report_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgv_Report.LostFocus
        On Error Resume Next
        dgv_Report.CurrentCell.Selected = False
    End Sub

    Private Sub Register_Report()

        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Da2 As New SqlClient.SqlDataAdapter
        Dim Dt2 As New DataTable
        Dim Dtbl1 As New DataTable


        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String
        Dim RptCondt1 As String
        Dim CompCondt As String
        Dim InpNm1 As String = ""
        Dim FlName1 As String = "", FlName2 As String = ""
        Dim CompTinNo As String = ""
        Dim nr As Integer = 0
        Dim VouCond As String = ""
        Dim ReportHd As String = ""
        Dim ItmNam As String = ""
        Dim LiD As Integer = 0
        Dim Typ As String = ""
        Dim vMnth_ID As Integer = 0
        Dim RptCondt_sub As String = ""
        Dim Mth_ID As Integer

        'Try

        CompCondt = ""
            If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                CompCondt = "(Company_Type <> 'UNACCOUNT')"
            End If



            Select Case Trim(LCase(RptIpDet_ReportName))

                Case "milk sales register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Agent_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1,   Name2   ,   Meters1    ,   Date1     ,    Name3       , Name4                    ,  Name5     ,     Name6   ,  INT2       ,   int3          , Meters2 , Currency1   ) " &
                                            "     Select a.Sales_Code, a.Sales_No, a.for_OrderBy, a.Sales_Date, tP.Ledger_Name ,d.Ledger_Name AS AgentName ,e.Item_Name  ,f.Area_Name , a.Noof_Items,a.Extra_Quantity ,a.Rate   , a.Amount from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Ledger_Head d ON a.Agent_idno = d.Ledger_idno INNER JOIN Item_Head e ON a.Item_idno = e.Item_idno  INNER JOIN Area_Head f ON a.Area_idno = f.Area_idno   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate Order by a.Sales_Date, a.for_OrderBy, a.Sales_Code, a.Sales_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 ,Weight2 ,Meters2 , Name4 , Name5  ,  Name6  ,int2 ,int3,  Currency3 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Milk_Sales_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "milk sales summary"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp (             Name1   , Name2  ,  int2    , Currency1 ) " &
                                        " Select        c.Ledger_Name, d.Item_Name, SUM(a.Noof_Items+a.Extra_Quantity) , sum(a.Amount) from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo = d.Item_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by c.Ledger_Name ,  d.Item_Name having sum(a.Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Name3 ,int2 , currency1 from reporttemp where int2 <> 0 Order by Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Weight1 from reporttemp Order by Name1, Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Milk_Sales_Summary.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True



                Case "sales details monthly - partywise"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) = "" Then
                        MessageBox.Show("Invalid Month", "DOES NOT SHOW...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs5.Enabled Then cbo_Inputs5.Focus()
                        Exit Sub
                    End If
                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    'If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                    '    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Month_IdNo = " & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs4.Text)))
                    'End If
                    cmd.CommandText = "Truncate table ReportTemp"

                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "sales details monthly - itemwise" Then

                        If Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) >= 4 And Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) <= 12 Then
                            cmd.CommandText = "Insert into ReportTemp ( Name1  ,       Weight1    ,       Weight2 ) " &
                                        " Select                 d.Item_Name   ,SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON  e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) = " & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  d.Item_Name  Having SUM(a.Noof_Items) <> 0"
                            cmd.ExecuteNonQuery()
                        Else
                            cmd.CommandText = "Insert into ReportTemp ( Name1  ,        Weight1    ,       Weight2 ) " &
                                              " Select             d.Item_Name ,SUM(a.Noof_Items) , SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON   e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) =" & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  d.Item_Name Having SUM(a.Noof_Items) <> 0"
                            cmd.ExecuteNonQuery()
                        End If


                    Else

                        If Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) >= 4 And Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) <= 12 Then
                            cmd.CommandText = "Insert into ReportTemp ( Name1   ,       Weight1    ,       Weight2 ) " &
                                        " Select                 C.Ledger_Name  ,SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON  e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) = " & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  C.Ledger_Name  Having SUM(a.Noof_Items) <> 0"
                            cmd.ExecuteNonQuery()
                        Else
                            cmd.CommandText = "Insert into ReportTemp ( Name1    ,        Weight1    ,       Weight2 ) " &
                                              " Select             C.Ledger_Name ,SUM(a.Noof_Items) , SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON   e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) =" & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  C.Ledger_Name Having SUM(a.Noof_Items) <> 0"
                            cmd.ExecuteNonQuery()
                        End If

                    End If

                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,  Weight1 ,Weight2  from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_MonthWise.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "master party register"


                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & Trim(RptHeading3)
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_Idno = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.area_Idno = " & Str(Val(Common_Procedures.Area_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5                  ) " &
                                       " Select  1, a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address1,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo from Ledger_Head a  LEFT OUTER JOIN Area_Head b ON a.area_Idno = b.area_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = 10 "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5                  ) " &
                                      " Select  2, a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address2,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo from Ledger_Head a LEFT OUTER JOIN Area_Head b ON a.area_Idno = b.area_Idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = 10 and a.Ledger_Address2 <> ''"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5                  ) " &
                                      " Select  3, a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address3,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo from Ledger_Head a LEFT OUTER JOIN Area_Head b ON a.area_Idno = b.area_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = 10 and a.Ledger_Address3 <> ''"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5                  ) " &
                                      " Select  4, a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address4,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo from Ledger_Head a LEFT OUTER JOIN Area_Head b ON a.area_Idno = b.area_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = 10 and a.Ledger_Address4 <> ''"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5                  ) " & _
                    '                  " Select  5, a.Ledger_Name, a.Ledger_IdNo, '',  '', '', '' from Ledger_Head a LEFT OUTER JOIN Area_Head b ON a.area_Idno = b.area_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = 10 "
                    'cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, Name3, Name4, Name5 from reporttemp Order by name1, Meters5", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, Name3, Name4, Name5 from reporttemp Order by name1, Meters5", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Master_Party_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "master ledger register"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & Trim(RptHeading3)
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.AccountsGroup_IdNo = " & Str(Val(Common_Procedures.AccountsGroup_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_Name = '" & Trim(cbo_Inputs2.Text) & "'"
                    End If

                    cmd.CommandText = "Insert into ReportTemp(Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5,  Name6                ) " &
                                            " Select             1   , a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address1,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo,b.AccountsGroup_Name from Ledger_Head a, AccountsGroup_Head b where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.AccountsGroup_IdNo = b.AccountsGroup_IdNo Order by Ledger_Name"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Meters5,   Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5 ,Name6                 ) " &
                                            " Select             2   , a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address2,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo,b.AccountsGroup_Name from Ledger_Head a, AccountsGroup_Head b where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Ledger_Address2 <> '' and a.AccountsGroup_IdNo = b.AccountsGroup_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Meters5,   Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5 ,Name6                 ) " &
                                            " Select               3   , a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address3,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo,b.AccountsGroup_Name from Ledger_Head a, AccountsGroup_Head b where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Ledger_Address3 <> '' and a.AccountsGroup_IdNo = b.AccountsGroup_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Meters5, Name1 ,    Int1        ,   Name2    ,           Name3   ,      Name4       ,      Name5 , Name6                 ) " &
                                      " Select                     4 ,   a.Ledger_Name, a.Ledger_IdNo, a.Ledger_Address4,  a.Ledger_PhoneNo,a.Ledger_PANNo , a.Ledger_GSTinNo,b.AccountsGroup_Name from Ledger_Head a, AccountsGroup_Head b where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Ledger_Address4 <> '' and a.AccountsGroup_IdNo = b.AccountsGroup_IdNo"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, Name3, Name4, Name5,Name6 from reporttemp Order by name6, name1, meters5", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, Name3, Name4, Name5,Name6 from reporttemp Order by name6, name1, meters5", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If


                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Master_Ledger_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "master item register"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & Trim(RptHeading3)
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_Name = '" & Trim(cbo_Inputs1.Text) & "'"
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", "and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs2.Text)))

                    End If


                    cmd.CommandText = "Insert into ReportTemp(Name1 ,         Name2,   Weight1, Weight2               ) " &
                                       " Select  a.Item_Name,  b.ItemGroup_Name,a.Sales_Rate ,a.Tax_Percentage from Item_Head a LEFT OUTER JOIN ItemGroup_Head b ON a.ItemGroup_IdNo = b.ItemGroup_IdNo where " & Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo <> 0 Order by a.Item_Name"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2,Weight1,Weight2 from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2,Weight1,Weight2 from reporttemp Order by name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Master_Item_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "sales summary"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1,   Name2    ,   Weight1         ,Weight2        ,Weight3   ) " &
                                        " Select        c.Ledger_Name, d.Item_Name, sum(b.Noof_Items),SUM(b.Amount)  ,sum(b.Amount)+(sum(b.Amount) * (a.Tax_Perc/100)) from Sales_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Sales_Details b ON a.Company_IdNo = b.Company_IdNo and a.Sales_Code = b.Sales_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by  c.Ledger_Name, d.Item_Name ,a.Tax_Perc"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Weight1,Weight2 ,Weight3   from reporttemp where Weight1 <> 0 Order by Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Weight1 from reporttemp Order by Name1, Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Sales_Summary.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "sales summary itemwise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp (    Name2 ,     Weight1     ,    Weight2    ,   Weight3   ) " &
                                        " Select             d.Item_Name, sum(b.Noof_Items),SUM(b.Amount)  ,sum(b.Amount)+(sum(b.Amount) * (a.Tax_Perc/100)) from Sales_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Sales_Details b ON a.Company_IdNo = b.Company_IdNo and a.Sales_Code = b.Sales_Code INNER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by d.Item_Name,a.Tax_Perc"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 , Weight2,Weight3 from reporttemp where Weight1 <> 0 Order by Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 from reporttemp Order by Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Sales_Summary_ItemWise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "sales summary partywise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If



                    cmd.CommandText = "Insert into ReportTemp ( Name1        ,   Name2    ,     Weight1      , Weight2     ,Meters1   ,        Weight3  ) " &
                                        " Select            c.Ledger_MainName, d.Area_Name, SUM(b.Noof_Items),SUM(b.Amount),a.Tax_Perc,sum(b.Amount)+(sum(b.Amount) * (a.Tax_Perc/100)) from Sales_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Sales_Details b ON a.Company_IdNo = b.Company_IdNo and a.Sales_Code = b.Sales_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN Area_Head d ON c.Area_IdNo = d.Area_IdNO Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by c.Ledger_MainName, d.Area_Name,a.Tax_Perc"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 , Name2, Weight1, Weight2,Meters1,Weight3 from reporttemp where Weight1 <> 0 Order by Name1 , Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Weight1,Weight2 , Weight3  from reporttemp Order by Name1, Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Sales_Summary_PartyWise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "monthly sales details - quarterly"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()

                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo= " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo  = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 6 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 7 and 9 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name4          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 10 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name5          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 6 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 7 and 9 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name4          ,       Weight5    ,       Weight6 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 10 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name5          ,       Weight7    ,       Weight8 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set  Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name3 = 'JUL' Where Name3 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set Name4 = 'OCT' Where Name4 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name5 = 'JAN' Where Name5 = ''"
                    cmd.ExecuteNonQuery()



                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2    ,Name3    ,Name4    ,Name5,     Weight1 ,Weight2 , Weight3 , Weight4 , Weight5 , Weight6 , Weight7 , Weight8 from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_Quarterly.rdlc"
                    ' RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Sales_Summary.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True



                Case "monthly sales details - halfyearly"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If


                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 9 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 10 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 9 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 10 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name3 = 'OCT' Where Name3 = ''"
                    cmd.ExecuteNonQuery()



                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2    ,Name3   ,    Weight1 ,Weight2 , Weight3 , Weight4 from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_HalfYearly.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "monthly sales details - yearly"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If


                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY c.Ledger_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()




                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2    ,  Weight1 ,Weight2  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_Yearly.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "monthly sales details -itemwise quarterly"


                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)


                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If



                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 6 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 7 and 9 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name4          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 10 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name5          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 6 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 7 and 9 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name4          ,       Weight5    ,       Weight6 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 10 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name5          ,       Weight7    ,       Weight8 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set  Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name3 = 'JUL' Where Name3 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set Name4 = 'OCT' Where Name4 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name5 = 'JAN' Where Name5 = ''"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2    ,Name3    ,Name4    ,Name5,     Weight1 ,Weight2 , Weight3 , Weight4 , Weight5 , Weight6 , Weight7 , Weight8 from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_ItemWIseQuarterly.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "monthly sales details -itemwise halfyearly"

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If



                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 9 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 10 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 9 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 10 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name3          ,       Weight3    ,       Weight4 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set  Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Update ReportTemp set  Name3 = 'OCT' Where Name3 = ''"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2    ,Name3 ,      Weight1 ,Weight2 , Weight3 , Weight4  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_ItemWise_HalfYearly.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "monthly sales details -itemwise yearly"


                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If



                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo  LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Currency1    ,       Currency2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1,    Int1,    Int2      ,    Name2          ,       Weight1    ,       Weight2 ) " &
                                      " Select            d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set  Name2 = 'APR' Where Name2 = ''"
                    cmd.ExecuteNonQuery()



                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2  , Weight1 ,Weight2  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_ItemWise_Yearly.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "sales details item group wise"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs5.Text)))
                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select                      e.ItemGroup_Name,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY  e.ItemGroup_Name    ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select                 e.ItemGroup_Name    ,d.Item_Name  , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY  e.ItemGroup_Name    ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1     ,    Int2      ,    Name3          ,       Weight1    ,       Weight2 ) " &
                                      " Select            e.ItemGroup_Name    ,d.Item_Name , tM.IdNo  , tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  e.ItemGroup_Name    ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1  ,    Int2      ,    Name3          ,        Weight1    ,       Weight2 ) " &
                                      " Select            e.ItemGroup_Name    ,d.Item_Name ,tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items) , SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  e.ItemGroup_Name    ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Name2 = 'APR' Where Name3 = ''"
                    cmd.ExecuteNonQuery()




                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2 ,Name3   ,  Weight1 ,Weight2  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_ItemGroupWise.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "sales details party wise"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If
                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs5.Text)))
                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select                      c.Ledger_Name,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 4 and 12 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY c.Ledger_Name   ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select                c.Ledger_Name    ,d.Item_Name  , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Sales_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Sales_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Sales_Date between @CompFromDate and @CompToDate GROUP BY  c.Ledger_Name    ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1     ,    Int2      ,    Name3          ,       Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name    ,d.Item_Name , tM.IdNo  , tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 4 and 12 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  c.Ledger_Name   ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1  ,    Int2      ,    Name3          ,        Weight1    ,       Weight2 ) " &
                                      " Select            c.Ledger_Name    ,d.Item_Name ,tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items) , SUM(a.Amount)   from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON a.ItemGroup_IdNo <> 0 and a.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Sales_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Sales_Date) between 1 and 3 and Year(a.Sales_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  c.Ledger_Name   ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Name2 = 'APR' Where Name3 = ''"
                    cmd.ExecuteNonQuery()




                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2 ,Name3   ,  Weight1 ,Weight2  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_SalesDetails_ItemGroupWise.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "party details register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("@todate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    RptCondt1 = ""
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.company_idno = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt1 = Trim(RptCondt1) & IIf(Trim(RptCondt1) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table EntryTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp (  int1          ,   Name1 ,Int2 )   " &
                                            "   Select              a.Ledger_IdNo , ItemGroup_Name ,sum(Noof_Items) from Sales_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN ItemGroup_Head IG ON a.ItemGroup_IdNo = IG.ItemGroup_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "a.Sales_Date between @fromdate and @todate  group  by  a.Ledger_IdNo , ItemGroup_Name"
                    cmd.ExecuteNonQuery()

                    Da1 = New SqlClient.SqlDataAdapter(" select int1  ,   Name1  from ReportTemp group by int1  ,   Name1", con)
                    Da1.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1
                            If IsDBNull(Dt1.Rows(i).Item("Name1").ToString) = False Then
                                If LiD <> Val(Dt1.Rows(i).Item("int1").ToString) Then
                                    If LiD <> 0 Then
                                        cmd.CommandText = "Insert into EntryTempSub(  int1 ,Name1 ) Values (" & LiD & ",'" & ItmNam & "')"
                                        cmd.ExecuteNonQuery()
                                    End If
                                    LiD = Val(Dt1.Rows(i).Item("int1").ToString)
                                    ItmNam = ""
                                End If
                                ItmNam = ItmNam & IIf(ItmNam <> "", ",", "") & Microsoft.VisualBasic.Left(Dt1.Rows(i).Item("Name1").ToString, 4)
                            End If
                        Next
                        If LiD <> 0 And ItmNam <> "" Then
                            cmd.CommandText = "Insert into EntryTempSub(  int1 ,Name1 ) Values (" & LiD & ",'" & ItmNam & "')"
                            cmd.ExecuteNonQuery()
                        End If

                    End If




                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempSub (  int1         ,   Meters1 )   " &
                                              "   Select        a.Ledger_IdNo ,sum(a.Net_Amount)   from Sales_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "a.Sales_Date between @fromdate and @todate  group by a.Ledger_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp (     Name1          ,Name2          ,Name3          ,Name4            ,Name5              ,Name6             ,Meters1       ,Name7        ,Name8 )   " &
                                                 "   Select         SH.State_Name  ,AH.Area_Name   ,a.Ledger_Name  ,a.Ledger_Address1, a.Ledger_Address2 ,a.Ledger_PhoneNo  , RS.Meters1   , ES.Name1    ,a.Owner_Name   from Ledger_Head a LEFT OUTER JOIN State_Head SH ON a.State_Idno = SH.State_Idno LEFT OUTER JOIN Area_Head AH ON a.Area_IdNo = AH.Area_IdNo LEFT OUTER JOIN ReportTempSub RS ON a.Ledger_IdNo =RS.int1  LEFT OUTER JOIN EntryTempSub ES ON a.Ledger_IdNo = ES.Int1 Where " & RptCondt1 & IIf(RptCondt1 <> "", " and ", "") & "  a.AccountsGroup_IdNo = 10  "
                    cmd.ExecuteNonQuery()



                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,   Name1  ,Name2 ,Name3 ,Name4 ,Name5 ,Name6,Meters1 ,Name7 ,Name8   from reporttemp   Order by Name3", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Weight1, Meters1,  Currency1, Weight2, Meters2, Currency2 from reporttemp Order by Name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Party_Details_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "purchase details item group wise"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs5.Text)))
                    End If

                    'cmd.CommandText = "Insert into ReportTemp(Name1,   Int1        ,   Name2      ,   Weight10   ,   Date1        ,   Name6  ,   Name3      ,   Int2 ,   Name4    ,   Name5    ,   Weight1   ,   Currency1,   Currency2,   Currency3      ,   Currency4           ,   Currency5      ,   Currency6          ,   Currency7     ,   Currency8 , Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 ) " & _
                    '                  " Select    a.Purchase_Code, a.Company_IdNo, a.Purchase_No, a.for_OrderBy, a.Purchase_Date, a.Bill_No, c.Ledger_Name, b.SL_No, d.Item_Name, e.Unit_Name, b.Noof_Items, b.Rate     , b.Amount   , a.SubTotal_Amount, a.Total_DiscountAmount, a.Total_TaxAmount, a.CashDiscount_Amount, a.AddLess_Amount, a.Net_Amount, 0      , 0      , 0      , 0      , 0      , 0        from Purchase_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Purchase_Details b ON a.Company_IdNo = b.Company_IdNo and a.Purchase_Code = b.Purchase_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN Unit_Head e ON b.Unit_IdNo = e.Unit_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                    'cmd.ExecuteNonQuery()


                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    '-------Empty Records 
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select               e.ItemGroup_Name      ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Purchase_Details a ON tM.Month_IdNo between 4 and 12 and month(a.Purchase_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Purchase_Date between @CompFromDate and @CompToDate GROUP BY  e.ItemGroup_Name    ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert into ReportTemp (Name1                , Name2      ,    Int1,    Int2      ,    Name3          ,       Currency1    ,       Currency2 ) " &
                                      " Select                 e.ItemGroup_Name    ,d.Item_Name  , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Month_Head tM LEFT OUTER JOIN Purchase_Details a ON tM.Month_IdNo between 1 and 3 and month(a.Purchase_Date) <> tM.Month_IdNo INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Purchase_Date between @CompFromDate and @CompToDate GROUP BY  e.ItemGroup_Name    ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName"
                    cmd.ExecuteNonQuery()
                    '---------------------------------

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1     ,    Int2      ,    Name3          ,       Weight1    ,       Weight2 ) " &
                                      " Select            e.ItemGroup_Name    ,d.Item_Name , tM.IdNo  , tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items), SUM(a.Amount)   from Purchase_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Purchase_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Purchase_Date) between 4 and 12 and Year(a.Purchase_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  e.ItemGroup_Name    ,d.Item_Name , tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,   Name2    , Int1  ,    Int2      ,    Name3          ,        Weight1    ,       Weight2 ) " &
                                      " Select            e.ItemGroup_Name    ,d.Item_Name ,tM.IdNo, tM.Month_IdNo, tM.Month_ShortName, SUM(a.Noof_Items) , SUM(a.Amount)   from Purchase_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Purchase_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON e.Cetegory_IdNo <> 0 and e.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Purchase_Date) between 1 and 3 and Year(a.Purchase_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  e.ItemGroup_Name    ,d.Item_Name, tM.IdNo, tM.Month_IdNo, tM.Month_ShortName Having SUM(a.Noof_Items) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Name2 = 'APR' Where Name3 = ''"
                    cmd.ExecuteNonQuery()




                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1 ,Name2 ,Name3   ,  Weight1 ,Weight2  from reporttemp Order by int1 ,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_PurchaseDetails_ItemGroupWise.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "printing order register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " d.Order_No_New = '" & Trim(cbo_Inputs3.Text) & " '"
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12  , Name13  ) " &
                                            "     Select a.Printing_Order_Code, a.Printing_Order_No, a.for_OrderBy, a.Printing_Order_Date , d.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No , d.Order_No_New from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate Order by a.Printing_Order_Date, a.for_OrderBy, a.Printing_Order_Code, a.Printing_Order_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2        ,Name13   ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Order_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "order program register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12   ) " &
                                            "     Select a.Order_Program_Code, a.Order_Program_No, a.for_OrderBy, a.Order_Program_Date , a.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No from Order_Program_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Order_Program_Details d ON a.Order_Program_Code = d.Order_Program_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Order_Program_Date between @fromdate and @todate Order by a.Order_Program_Date, a.for_OrderBy, a.Order_Program_Code, a.Order_Program_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2           ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Order_Program_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "printing invoice register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,   Meters5     , Meters6             , Meters7     , Meters8       , Currency1           , Currency2 ) " &
                                            " Select a.Printing_Invoice_Code, a.Printing_Invoice_No, a.for_OrderBy, a.Printing_Invoice_Date , d.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.Amount ,  a.Assesable_Amount , a.Other_Charges , a.Net_Amount  ,  VD.Credit_Amount    ,  a.Net_Amount - VD.Credit_Amount  from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + a.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate Order by a.Printing_Invoice_Date, a.for_OrderBy, a.Printing_Invoice_Code, a.Printing_Invoice_No"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Meters2 = (Select sum(h.Assesable_Amount) from Printing_Invoice_Head h where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Meters3 = (Select sum(h.Other_Charges) from Printing_Invoice_Head h where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Meters4 = (Select sum(h.Net_Amount) from Printing_Invoice_Head h where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency3 = (Select sum(V.Credit_Amount) from Printing_Invoice_Head h LEFT OUTER JOIN Voucher_Bill_Head V ON V.Entry_Identification = 'PRINV-' + h.Printing_Invoice_Code where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + a.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency4 = (Select sum(h.Net_Amount - V.Credit_Amount ) from Printing_Invoice_Head h LEFT OUTER JOIN Voucher_Bill_Head V ON V.Entry_Identification = 'PRINV-' + h.Printing_Invoice_Code where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + a.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2           ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8     ,     Meters5     , Meters6             , Meters7         , Meters8 , Meters2   , Meters3  , Meters4   , Name12 , Currency1             , Currency2 , Currency3             , Currency4 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Invoice_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "printing order program pending"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12   ) " &
                                            "     Select a.Printing_Order_Code, a.Printing_Order_No, a.for_OrderBy, a.Printing_Order_Date , d.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate and d.Order_Program_Code = '' and d.Cancel_Status = 0 Order by a.Printing_Order_Date, a.for_OrderBy, a.Printing_Order_Code, a.Printing_Order_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2           ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Order_Program_Pending.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "printing invoice pending"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12   ) " &
                                            "     Select a.Order_Program_Code, a.Order_Program_No, a.for_OrderBy, a.Order_Program_Date , a.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No from Order_Program_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Order_Program_Details d ON a.Order_Program_Code = d.Order_Program_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Order_Program_Date between @fromdate and @todate  and a.Printing_Invoice_Code = '' Order by a.Order_Program_Date, a.for_OrderBy, a.Order_Program_Code, a.Order_Program_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2           ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Invoice_Pending.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "printing order cancel register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp ( Name1          ,   Name2           ,   Meters1     ,   Date1               ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12   ) " &
                                            "     Select a.Printing_Order_Code, a.Printing_Order_No, a.for_OrderBy, a.Printing_Order_Date , d.Order_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate and d.Cancel_Status = 1 Order by a.Printing_Order_Date, a.for_OrderBy, a.Printing_Order_Code, a.Printing_Order_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1          ,   Name2           ,   Meters1     ,   Date1             ,    Name3   , Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11      , Name12 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Order_Cancel_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "printing order details list"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    cmd.CommandText = "truncate table entrytempsub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into entrytempsub(name1, Currency1) select a.Voucher_Bill_Code, -1*sum(b.Voucher_Amount) from Voucher_Bill_Details a, Voucher_Details b where b.Ledger_IdNo = 17 and a.CrDr_Type = 'CR' and a.Entry_Identification = b.Entry_Identification group by a.Voucher_Bill_Code having sum(b.Voucher_Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1         ,    Meters1     ,   Date1              ,    Name3   , Name2                  ,  Name4            ,  Name5          ,      INT2     ,  Name6       ,     Name7   ,  Name8           ,  Name9         ,   Name10         , Name11           , Name12       ,  Name13      ,    Currency1  , Currency2  ,     Currency3                 ,       Currency4                      ,      Currency9   ) " &
                                            "     Select a.Printing_Order_Code,  a.for_OrderBy, a.Printing_Order_Date , d.Order_No , IH.Printing_Invoice_No ,  tP.Ledger_Name  , e.Variety_Name  ,  d.Quantity   , f.Unit_Name  , d.NO_of_SET , d.No_Of_Copies   , g.Size_name    ,  d.Paper_Details , d.Colour_Details , d.Binding_No , a.advance_Date, IH.Net_Amount , a.advance  ,  VD.Credit_Amount - a.advance - tESUB.Currency1 , (IH.Net_Amount  - VD.Credit_Amount  ), tESUB.Currency1 Balance from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code LEFT OUTER JOIN entrytempsub tESUB ON vd.Voucher_Bill_Code = tESUB.Name1 Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate Order by a.Printing_Order_Date, a.for_OrderBy, a.Printing_Order_Code, a.Printing_Order_No"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency5 = (Select sum(h.Net_Amount) from Printing_Invoice_Head h where h.Printing_Invoice_Code IN (Select IH.Printing_Invoice_Code from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency6 = (Select sum(h.advance) from Printing_Order_Head h where h.Printing_Order_Code IN (Select a.Printing_Order_Code from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency7 = (Select sum(V.Credit_Amount -  tESUB.Currency1 ) from Printing_Invoice_Head h LEFT OUTER JOIN Voucher_Bill_Head V ON V.Entry_Identification = 'PRINV-' + h.Printing_Invoice_Code  LEFT OUTER JOIN entrytempsub tESUB ON v.Voucher_Bill_Code = tESUB.Name1  where h.Printing_Invoice_Code IN  (Select IH.Printing_Invoice_Code from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency8 = (Select sum(h.Net_Amount - V.Credit_Amount) from Printing_Invoice_Head h LEFT OUTER JOIN Voucher_Bill_Head V ON V.Entry_Identification = 'PRINV-' + h.Printing_Invoice_Code where h.Printing_Invoice_Code IN (Select IH.Printing_Invoice_Code from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency10 = (Select sum(tESUB.Currency1) from Printing_Invoice_Head h LEFT OUTER JOIN Voucher_Bill_Head V ON V.Entry_Identification = 'PRINV-' + h.Printing_Invoice_Code LEFT OUTER JOIN entrytempsub tESUB ON v.Voucher_Bill_Code = tESUB.Name1 where h.Printing_Invoice_Code IN (Select IH.Printing_Invoice_Code from Printing_Order_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Order_Details d ON a.Printing_Order_Code = d.Printing_Order_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno LEFT OUTER JOIN Size_Head g ON d.Size_IdNo = g.Size_IdNo LEFT OUTER JOIN Order_Program_Head OH ON d.Order_Program_Code = OH.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Details ID ON OH.Order_Program_Code = ID.Order_Program_Code LEFT OUTER JOIN Printing_Invoice_Head IH ON ID.Printing_Invoice_Code = IH.Printing_Invoice_Code LEFT OUTER JOIN Voucher_Bill_Head VD ON VD.Entry_Identification = 'PRINV-' + IH.Printing_Invoice_Code Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Order_Date between @fromdate and @todate ) )"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update ReportTemp Set Meters2 = (Select sum(h.Assesable_Amount) from Printing_Invoice_Head h where h.Printing_Invoice_Code IN ( Select d.Printing_Invoice_Code from Printing_Invoice_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno INNER JOIN Printing_Invoice_Details d ON a.Printing_Invoice_Code = d.Printing_Invoice_Code LEFT OUTER JOIN Variety_Head e ON d.Variety_IdNo = e.Variety_IdNo  LEFT OUTER JOIN Unit_Head f ON d.Unit_idno = f.Unit_idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Printing_Invoice_Date between @fromdate and @todate ) )"
                    'cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1         ,    Meters1     ,   Date1          ,Name13    ,    Name3   , Name4     ,Name2       ,  Name5   ,Currency5,Currency6,Currency7,Currency8       ,      INT2     ,  Name6       ,     Name7   ,  Name8 ,  Name9   ,   Name10 , Name11  , Name12  , Currency1 , Currency2 , Currency3  , Currency4 , Currency9 , Currency10 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Printing_Order_Details_List.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "purchase summary categorywise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " CH.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "  D.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If


                    cmd.CommandText = "Insert into ReportTemp (    Name2  ,     Weight1        ,    Weight2     ,   Weight3   ) " &
                                        " Select             d.Item_Name  , sum(b.Noof_Items)  , SUM(b.Amount)  ,sum(b.Amount)+(sum(B.Amount) * (B.Tax_Perc/100)) from Purchase_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Purchase_Details b ON a.Company_IdNo = b.Company_IdNo and a.Purchase_Code = b.Purchase_Code INNER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head IG ON D.ItemGroup_IdNo = IG.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON IG.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate group by d.Item_Name,B.Tax_Perc"
                    cmd.ExecuteNonQuery()





                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 , Weight2,Weight3 from reporttemp where Weight1 <> 0 Order by Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 from reporttemp Order by Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Purchase_Summary_CategoryWise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "purchase details orderwise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.OrderCode_forSelection = '" & cbo_Inputs3.Text & "'"
                    End If

                    cmd.CommandText = "Insert into ReportTemp(Name1,   Int1        ,   Name2      ,   Weight10   ,   Date1        ,   Name6  ,   Name3      ,   Int2 ,   Name4    ,   Name5    ,   Weight1   ,   Currency1,   Currency2,   Currency3      ,   Currency4                  ,   Currency5                                 ,   Name7           ) " &
                                        " Select    a.Purchase_Code, a.Company_IdNo, a.Purchase_No, a.for_OrderBy, a.Purchase_Date, a.Bill_No, c.Ledger_Name, b.SL_No, d.Item_Name, e.Unit_Name, b.Noof_Items, b.Rate     , b.Amount   , b.Discount_Amount, b.Amount*b.GST_Percentage/100, b.Amount  + (b.Amount*b.GST_Percentage/100) ,  OrderCode_forSelection      from Purchase_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Purchase_Details b ON a.Company_IdNo = b.Company_IdNo and a.Purchase_Code = b.Purchase_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN Unit_Head e ON b.Unit_IdNo = e.Unit_IdNo  LEFT OUTER JOIN Month_Head f ON b.Manufacture_Month_IdNo = f.Month_IdNo LEFT OUTER JOIN Month_Head g ON b.Manufacture_Month_IdNo = g.Month_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Select sum(z.SubTotal_Amount), sum(z.Total_DiscountAmount), sum(z.Total_TaxAmount), sum(z.CashDiscount_Amount), sum(z.AddLess_Amount), sum(z.Net_Amount) from Purchase_Head z where z.Purchase_Code IN (Select a.Purchase_Code from Purchase_Head a LEFT OUTER JOIN Purchase_Details b ON a.Company_IdNo = b.Company_IdNo and a.Purchase_Code = b.Purchase_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN Item_Head d ON B.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN Unit_Head e ON b.Unit_IdNo = e.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate) "
                    'Da = New SqlClient.SqlDataAdapter(cmd)
                    'Dt = New DataTable
                    'Da.Fill(Dt)

                    'If Dt.Rows.Count > 0 Then
                    '    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters1 = " & Str(Val((Dt.Rows(0)(0).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    '    If IsDBNull(Dt.Rows(0)(1).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters2 = " & Str(Val((Dt.Rows(0)(1).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    '    If IsDBNull(Dt.Rows(0)(2).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters3 = " & Str(Val((Dt.Rows(0)(2).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    '    If IsDBNull(Dt.Rows(0)(3).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters4 = " & Str(Val((Dt.Rows(0)(3).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    '    If IsDBNull(Dt.Rows(0)(4).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters5 = " & Str(Val((Dt.Rows(0)(4).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    '    If IsDBNull(Dt.Rows(0)(5).ToString) = False Then
                    '        cmd.CommandText = "Update ReportTemp set Meters6 = " & Str(Val((Dt.Rows(0)(5).ToString)))
                    '        cmd.ExecuteNonQuery()
                    '    End If
                    'End If

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Name6,Name7, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6,Name8,Name9,int3,int4,int5,int6,int7,date2,date3 from reporttemp Order by name7,Date1, Weight10, name2, name1, Int2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)


                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Name6,Name7 , Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by name7,Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_PurchaseDetails_OrderWise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "purchase summary itemwise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & RptHeading3
                    RptHeading3 = ""

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "  D.ItemGroup_IdNo = " & Str(Val(Common_Procedures.ItemGroup_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If



                    cmd.CommandText = "Insert into ReportTemp (    Name2  ,     Weight1        ,    Weight2     ,   Weight3   ) " &
                                        " Select             d.Item_Name  , sum(b.Noof_Items)  , SUM(b.Amount)  ,sum(b.Amount)+(sum(B.Amount) * (B.Tax_Perc/100)) from Purchase_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Purchase_Details b ON a.Company_IdNo = b.Company_IdNo and a.Purchase_Code = b.Purchase_Code INNER JOIN Item_Head d ON b.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head IG ON D.ItemGroup_IdNo = IG.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON IG.Cetegory_IdNo = CH.Cetegory_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate group by d.Item_Name,B.Tax_Perc"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 , Weight2,Weight3 from reporttemp where Weight1 <> 0 Order by Name1, Name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name2, Weight1 from reporttemp Order by Name2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Purchase_Summary_ItemWise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "purchase summary monthly- itemwise"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) = "" Then
                        MessageBox.Show("Invalid Month", "DOES NOT SHOW...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs5.Enabled Then cbo_Inputs5.Focus()
                        Exit Sub
                    End If
                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    'If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                    '    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Month_IdNo = " & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs4.Text)))
                    'End If
                    cmd.CommandText = "Truncate table ReportTemp"

                    cmd.ExecuteNonQuery()

                    If Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) >= 4 And Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) <= 12 Then

                        cmd.CommandText = "Insert into ReportTemp ( Name2  ,       Weight1    ,       Weight2 ,Weight3 ) " &
                                    " Select                 d.Item_Name   ,SUM(a.Noof_Items) , SUM(a.Amount) ,sum(a.Amount)+ (sum(a.Amount) * (a.Tax_Perc/100))  from Purchase_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Purchase_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON  e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Purchase_Date) = " & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Purchase_Date) = " & Str(Val(Year(Common_Procedures.Company_FromDate))) & " GROUP BY  d.Item_Name ,a.Tax_Perc  Having SUM(a.Noof_Items) <> 0"
                        cmd.ExecuteNonQuery()
                    Else
                        cmd.CommandText = "Insert into ReportTemp ( Name2  ,        Weight1    ,       Weight2 , Weight3  ) " &
                                          " Select             d.Item_Name ,SUM(a.Noof_Items) , SUM(a.Amount)  , sum(a.Amount)+ (sum(a.Amount) * (a.Tax_Perc/100))  from Purchase_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo INNER JOIN Item_Head d ON a.Item_IdNo <> 0 and a.Item_IdNo = d.Item_IdNo LEFT OUTER JOIN ItemGroup_Head e ON d.ItemGroup_IdNo <> 0 and d.ItemGroup_IdNo = e.ItemGroup_IdNo INNER JOIN Month_Head tM ON tM.Month_IdNo <> 0 and month(a.Purchase_Date) = tM.Month_IdNo LEFT OUTER JOIN Cetegory_Head CH ON   e.Cetegory_IdNo = CH.Cetegory_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " month(a.Purchase_Date) =" & Common_Procedures.Month_NameToIdNo(con, Trim(cbo_Inputs5.Text)) & " and Year(a.Purchase_Date) = " & Str(Val(Year(Common_Procedures.Company_ToDate))) & " GROUP BY  d.Item_Name ,a.Tax_Perc Having SUM(a.Noof_Items) <> 0"
                        cmd.ExecuteNonQuery()
                    End If


                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name2 ,  Weight1 ,Weight2  ,Weight3 from reporttemp Order by name2", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Purchase_Summary_MonthWise.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "orderwise profit and loss report"

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("CompFromDate", Common_Procedures.Company_FromDate)
                    cmd.Parameters.AddWithValue("CompToDate", Common_Procedures.Company_ToDate)

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) = "" Then
                        MessageBox.Show("Invalid Month", "DOES NOT SHOW...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs5.Enabled Then cbo_Inputs5.Focus()
                        Exit Sub
                    End If
                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Sales_Order_Selection_Code = '" & Trim(cbo_Inputs2.Text) & "'"
                    End If



                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    '---Purchase
                    cmd.CommandText = "Insert into EntryTemp ( Name1                         ,   Currency1           ) " &
                                      " Select                  a.Sales_Order_Selection_Code ,    sum(a.Net_Amount)      from Purchase_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo     " & IIf(RptCondt <> "", " Where ", "") & RptCondt & "  GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Net_Amount) <> 0"
                    cmd.ExecuteNonQuery()
                    '---Purchase 
                    cmd.CommandText = "Insert into EntryTemp ( Name1                        ,   Currency1              ) " &
                                  " Select                  a.Sales_Order_Selection_Code    ,    -1*sum(a.Net_Amount)     from Purchase_Return_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo    " & IIf(RptCondt <> "", " Where ", "") & RptCondt & "   GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Net_Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempSub ( Name1      ,   Currency1                 ) " &
                                  " Select                         Name1      ,   sum(Currency1)    from EntryTemp group by Name1 "
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    '---Sales 
                    cmd.CommandText = "Insert into EntryTemp ( Name1                         ,Currency3                   ) " &
                                  " Select                  a.Sales_Order_Selection_Code    , sum(a.Net_Amount)        from Sales_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo    " & IIf(RptCondt <> "", " Where ", "") & RptCondt & "  GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Net_Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    '---Sales Return
                    cmd.CommandText = "Insert into EntryTemp ( Name1                        ,Currency3                ) " &
                                  " Select                  a.Sales_Order_Selection_Code    , -1 * sum(a.Net_Amount)     from SalesReturn_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo    " & IIf(RptCondt <> "", " Where ", "") & RptCondt & "   GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Net_Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempSub ( Name1     ,   Currency3                ) " &
                               " Select                            Name1     ,   sum(Currency3)    from EntryTemp group by Name1 "
                    cmd.ExecuteNonQuery()

                    '---Expenses FOR ORDER 
                    cmd.CommandText = "Insert into ReportTempSub ( Name1                     , Currency2    ) " &
                                  " Select                  a.Sales_Order_Selection_Code     , sum(abs(a.Amount))     from Voucher_Order_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo     where   " & RptCondt & IIf(RptCondt <> "", " and  ", "") & "   a.Amount < 0  and a.Sales_Order_Selection_Code like '%-ORD'  GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Amount) <> 0"
                    cmd.ExecuteNonQuery()


                    '---Expenses FOR ENQUIRY
                    cmd.CommandText = "Insert into ReportTempSub ( Name1                     , Currency2    ) " &
                                  " Select                 OSH.Order_Selection_Code     , sum(abs(a.Amount))     from Voucher_Order_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Sales_Quotation_Head sQ ON a.Sales_Order_Selection_Code = sQ.Enquiry_No LEFT OUTER JOIN Sales_Order_Head SO ON SO.Quotation_No = SQ.Sales_Quotation_No LEFT OUTER JOIN Order_Selection_Code_Head OSH ON OSH.Reference_Code = SO.Sales_Order_Code where   " & RptCondt & IIf(RptCondt <> "", " and  ", "") & "   a.Amount < 0  and a.Sales_Order_Selection_Code like '%-ENQ' GROUP BY     OSH.Order_Selection_Code having  sum(a.Amount) <> 0"
                    nr = cmd.ExecuteNonQuery()


                    '---Receipt FOR ORDER
                    cmd.CommandText = "Insert into ReportTempSub ( Name1                     , Currency4    ) " &
                                  " Select                  a.Sales_Order_Selection_Code     , sum(a.Amount)     from Voucher_Order_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo  where   " & RptCondt & IIf(RptCondt <> "", " and  ", "") & "   a.Amount > 0 and a.Sales_Order_Selection_Code like '%-ORD' GROUP BY  a.Sales_Order_Selection_Code having  sum(a.Amount) <> 0"
                    cmd.ExecuteNonQuery()

                    '---Receipt For ENQUIRY
                    cmd.CommandText = "Insert into ReportTempSub ( Name1                     , Currency4    ) " &
                                  " Select                 OSH.Order_Selection_Code     , sum(abs(a.Amount))     from Voucher_Order_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Sales_Quotation_Head sQ ON a.Sales_Order_Selection_Code = sQ.Enquiry_No LEFT OUTER JOIN Sales_Order_Head SO ON SO.Quotation_No = SQ.Sales_Quotation_No LEFT OUTER JOIN Order_Selection_Code_Head OSH ON OSH.Reference_Code = SO.Sales_Order_Code where   " & RptCondt & IIf(RptCondt <> "", " and  ", "") & "   a.Amount > 0  and a.Sales_Order_Selection_Code like '%-ENQ' GROUP BY     OSH.Order_Selection_Code having  sum(a.Amount) <> 0"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp ( Name1      ,   Currency1        ,Currency2      ,Currency3      ,Currency4         ) " &
                                  " Select                       Name1     ,   sum(Currency1)   ,sum(Currency2) ,sum(Currency3) ,sum(Currency4)   from ReportTempSub group by Name1 "
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "', Report_Heading1 = '" & Trim(RptHeading1) & "', Report_Heading2 = '" & Trim(RptHeading2) & "', Report_Heading3 = '" & Trim(RptHeading3) & "'"
                    cmd.ExecuteNonQuery()
                    Da = New SqlClient.SqlDataAdapter("select Company_Name, Company_Address1, Company_Address2, Report_Heading1, Report_Heading2, Report_Heading3,Name1   ,   Currency1     ,Currency2     ,Currency3 ,Currency4       from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Date1, Name2, Name3, Name4, Name5, Weight1, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8, Meters1, Meters2, Meters3, Meters4, Meters5, Meters6 from reporttemp Order by Date1, Weight10, name2, name1, Int2", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_OrderWise_Proft_and_Loss_Register.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "voucher register - cash and bank receipt", "voucher register - cash and bank payment"

                    VouCond = ""
                    ReportHd = ""

                    If Trim(LCase(RptIpDet_ReportName)) = "voucher register - cash and bank receipt" Then

                        VouCond = "(Voucher_Amount > 0 And (a.Voucher_Type = 'Rcpt' OR a.Voucher_Type = 'Csrp'))"

                        ReportHd = "CASH AND BANK RECEIPT REGISTER"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "voucher register - cash and bank payment" Then
                        VouCond = "(Voucher_Amount < 0 And (a.Voucher_Type = 'Pymt' OR a.Voucher_Type = 'Cspy'))"
                        ReportHd = "CASH AND BANK PAYMENT REGISTER"
                    End If



                    RptHeading1 = Trim(ReportHd)
                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & Trim(RptHeading3)
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If


                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    If Trim(VouCond) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & Trim(VouCond)
                    End If

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Ledger_Idno = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    nr = 0

                    cmd.CommandText = "Insert into ReportTemp (Date1 , Name1         ,     Int1         ,    Name2       ,   meters1    ,   Name3       ,       Currency1                    ,   Name4          ) " &
                                     " Select         a.Voucher_Date , a.Voucher_Code,   a.Company_IdNo ,  a.Voucher_No  , a.for_OrderBy,  c.Ledger_Name, abs(b.Voucher_Amount) as Vou_Amount, a.Narration from Voucher_Head a INNER JOIN Voucher_Details b ON a.Company_IdNo = b.Company_IdNo and a.Voucher_Code = b.Voucher_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON b.Ledger_Idno = c.Ledger_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate"
                    nr = cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Currency1,int2, Name4 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Currency1,int2, Name4 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Voucher_Payment_Receipt_Register_Simple.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()

                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                '-------------PAYROLL
                'Case "payroll employee register"

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    RptCondt = ""
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                '    End If

                '    cmd.CommandText = "Insert into ReportTemp(Name1,  Name2     ,     NAME4    , int1   , Name3 , Name10      , Name5             ,Name7              ,Name8        ,currency1                                                                                                                                      ,Name9       , Currency3 ) " & _
                '                        " Select    a.Employee_Name,a.Card_No   , a.Date_Birth , a.Age  , a.Sex , a.Join_date,b.Category_Name     ,DH.Department_Name ,a.Designation, (select top 1 z1.For_Salary from PayRoll_Employee_Salary_Details z1 where z1.employee_idno = a.employee_idno order by From_Date desc) as salary,a.Week_Off , a.Op_Amount from PayRoll_Employee_Head a LEFT OUTER JOIN PayRoll_Category_Head b ON a.Category_IdNo = b.Category_IdNo LEFT OUTER JOIN Department_Head DH ON a.Department_Idno = DH.Department_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_IdNo <> 0"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1,Name2,Name4,int1,Name3,Name5,Name6,Name7,Name8,currency1,Name9,Name10,Currency3 from reporttemp", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Currency1, Currency2, int2, Name4 from reporttemp Order by Date1, Meters1, Int1, name2, name1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Employee_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True


                'Case "payroll attendance register"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = ""

                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                '    End If

                '    cmd.CommandText = "Insert into ReportTemp(Date1                    ,Name1          ,Meters1) " & _
                '                                    " Select a.Employee_Attendance_Date,c.Employee_Name,a.No_Of_Shift from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Name1,Meters1 from reporttemp Order by Date1 ", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Attendance_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)
                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "payroll attendance register hours"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = ""

                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                '    End If

                '    cmd.CommandText = "Insert into ReportTemp(Date1                    ,Name1          ,Meters1) " & _
                '                                    " Select a.Employee_Attendance_Date,c.Employee_Name,(a.Shift_Hours + a.OT_Hours) from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Name1,Meters1 from reporttemp Order by Date1 ", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Attendance_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "payroll attendance monthwise register", "payroll attendance monthwise register hours"
                '    Attendance_Register_MonthWise()

                'Case "payroll salary register", "payroll salary register2"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = ""

                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " c.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs1.Text)))
                '    End If
                '    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " e.Month_IdNo = " & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                '    End If

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    If Trim(LCase(RptIpDet_ReportName)) = "payroll salary register2" Then
                '        cmd.CommandText = "Insert into ReportTemp (  Int1          ,   Name1        ,   Currency1   ,   Meters1              ,   Meters2      ,   Currency2   ,   Currency3 ,    Currency4   ,    Currency5,   Currency6       ,    Currency7,    Currency8    ,  Meters3            ,    Currency9      ,   Currency10   ,    Currency11 ,   Currency12,    Weight1                         ,    Meters4                       ) " & _
                '                          "            Select      a.Employee_IdNo , b.Employee_Name, a.Salary_Shift, a.No_Of_Attendance_Days, a.Working_Hours, a.Basic_Salary, a.Ot_Hours  ,  a.Ot_Pay_Hours,  a.Ot_Salary, a.Incentive_Amount,  a.Advance  ,  a.Minus_Advance, a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Salary ,  a.Mess       , a.Net_Salary, (a.Net_Pay_Amount-a.Salary_Pending), (a.Salary_Pending-a.Advance)  from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON d.Month_IdNo = e.Month_IdNo LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                '        cmd.ExecuteNonQuery()

                '    Else
                '        cmd.CommandText = "Insert into ReportTemp (  Int1          ,   Name1        ,   Currency1   ,   Meters1              ,   Meters2      ,   Currency2   ,   Currency3 ,    Currency4   ,    Currency5,   Currency6       ,    Currency7,    Currency8    ,  Meters3            ,    Currency9      ,   Currency10   ,    Currency11 ,   Currency12,   Weight1       , Meters4 ) " & _
                '                          "            Select      a.Employee_IdNo , b.Employee_Name, a.Salary_Shift, a.No_Of_Attendance_Days, a.Working_Hours, a.Basic_Salary, a.Ot_Hours  ,  a.Ot_Pay_Hours,  a.Ot_Salary, a.Incentive_Amount,  a.Advance  ,  a.Minus_Advance, a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Salary ,  a.Mess       , a.Net_Salary, a.Net_Pay_Amount, 0  from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON d.Month_IdNo = e.Month_IdNo LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                '        cmd.ExecuteNonQuery()

                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " & _
                '                         "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                '        nr = cmd.ExecuteNonQuery()

                '        cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                '        cmd.ExecuteNonQuery()

                '    End If

                '    'cmd.CommandText = "Insert into ReportTemp (  Int1          ,   Name1        ,   Currency1   ,   Meters1              ,   Meters2      ,   Currency2   ,   Currency3 ,    Currency4   ,    Currency5,   Currency6       ,    Currency7,    Currency8    ,  Meters3            ,    Currency9      ,   Currency10   ,    Currency11 ,   Currency12,   Weight1       , Meters4                       ) " & _
                '    '                 "            Select      a.Employee_IdNo , b.Employee_Name, a.Salary_Shift, a.No_Of_Attendance_Days, a.Working_Hours, a.Basic_Salary, a.Ot_Hours  ,  a.Ot_Pay_Hours,  a.Ot_Salary, a.Incentive_Amount,  a.Advance  ,  a.Minus_Advance, a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Salary ,  a.Mess       , a.Net_Salary, a.Net_Pay_Amount, (a.Salary_Pending-a.Advance)  from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON d.Month_IdNo = e.Month_IdNo LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                '    'cmd.ExecuteNonQuery()

                '    ''cmd.CommandText = "Truncate table ReportTempSub"
                '    ''cmd.ExecuteNonQuery()

                '    ''cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " & _
                '    ''                 "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                '    ''Nr = cmd.ExecuteNonQuery()

                '    ''cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                '    ''cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1         ,Currency1      ,Meters1      ,Meters3 ,  Meters2     , Meters4        ,Currency2     ,Currency3    ,Currency4     ,Currency5    ,Currency6          ,Currency7   ,Currency8       ,Currency9          ,Currency10      ,Currency11  ,Currency12,   Weight1 from reporttemp", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    If Trim(LCase(RptIpDet_ReportName)) = "payroll salary register2" Then
                '        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1119" Then  '--- Alphonsa Cards (Tirupur)
                '            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register2_With_Debit.rdlc"
                '        Else
                '            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register2.rdlc"
                '        End If


                '    Else

                '        If Val(Common_Procedures.settings.PAYROLLENTRY_Attendance_In_Hours_Status) = 1 Then
                '            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Hours_Register.rdlc"
                '        Else
                '            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1119" Then  '--- Alphonsa Cards (Tirupur)
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_with_Debit.rdlc"
                '            Else
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register.rdlc"
                '            End If

                '        End If

                '    End If

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "payroll netpay register"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = ""


                '    cmd.CommandText = "Insert into ReportTemp(    Name1            ,Name2   ,Currency1) " & _
                '                                    " Select    a.Employee_Name, a.Bank_Ac_No, b.Net_Salary  from PayRoll_Employee_Head a INNER JOIN PayRoll_Salary_Details b ON a.Employee_IdNo = b.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " b.Salary_Date between @fromdate and @todate"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1,Name2,Currency1 from reporttemp", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_NetPay_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "employee payment register"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = CompCondt
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '    End If
                '    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_Idno = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                '    End If
                '    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.DebitAc_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text)))
                '    End If


                '    cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1        ,   Name2          ,   meters1    ,        Date1       ,                                   Name3    ,   Name4                        ,   Name5      ,   Name6             , Currency1         ) " & _
                '                       " Select  a.Employee_Payment_Code, a.Company_IdNo, a.Employee_Payment_No, a.for_OrderBy, a.Employee_Payment_Date, b.Ledger_Name as Employee_Name, a.Cash_Cheque, c.Ledger_Name as DebitAccount_Name,a.Advance_Salary  ,a.Amount from PayRoll_Employee_Payment_Head a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head b ON a.Employee_Idno = b.Ledger_IdNo LEFT OUTER JOIN Ledger_Head c ON a.DebitAc_IdNo = c.Ledger_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Payment_Date between @fromdate and @todate Order by a.Employee_Payment_Date, a.for_OrderBy, a.Employee_Payment_No, a.Company_IdNo"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Name4, Name5,Name6 ,Currency1 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Payment_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True


                'Case "employee deduction register"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = CompCondt
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '    End If
                '    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_Idno = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs2.Text)))
                '    End If

                '    cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1        ,   Name2          ,   meters1    ,        Date1       ,                                   Name3    ,    Currency1      ,Name4   ) " & _
                '                       " Select  a.Employee_Deduction_Code, a.Company_IdNo, a.Employee_Deduction_No, a.for_OrderBy, a.Employee_Deduction_Date, b.Employee_Name,a.Advance_Deduction_Amount,a.Remarks from PayRoll_Employee_Deduction_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head b ON a.Employee_Idno <> 0 and a.Employee_Idno = b.Employee_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Deduction_Date between @fromdate and @todate Order by a.Employee_Deduction_Date, a.for_OrderBy, a.Employee_Deduction_No, a.Company_IdNo"
                '    cmd.ExecuteNonQuery()

                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Name4,Currency1 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Deduction_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "employee daily working register"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    RptCondt = CompCondt
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '    End If
                '    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs2.Text)))
                '    End If


                '    cmd.CommandText = "Insert into ReportTemp(Date1              , Name1           , Name2          ,Name3             ,Name4             ,Name5            ,Name6                                                ,Name7  ) " & _
                '                                     " Select  a.Reference_Date  ,a.Reference_Code ,a.Reference_No  ,b.Employee_Name   ,a.Start_Time_Text ,a.End_Time_Text  ,datediff(minute, a.Start_Time,a.End_Time) as noof_hrs ,a.Work_Description from PayRoll_Employee_Daily_Working_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo =b.Employee_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_IdNo <> 0"
                '    cmd.ExecuteNonQuery()


                '    Dim Hr As Integer = 0
                '    Dim Mns As Integer = 0

                '    Da = New SqlClient.SqlDataAdapter("Select a.Reference_Code ,a.Employee_IdNo , datediff(minute, a.Start_Time,a.End_Time) as noof_hrs  from PayRoll_Employee_Daily_Working_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo =b.Employee_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_IdNo <> 0", con)
                '    Dt1 = New DataTable
                '    Da.Fill(Dt1)
                '    If Dt1.Rows.Count > 0 Then
                '        For i = 0 To Dt1.Rows.Count - 1
                '            Hr = 0
                '            Mns = 0
                '            Hr = Val(Dt1.Rows(i).Item("noof_hrs").ToString) / 60
                '            Mns = Hr * 60
                '            Mns = Val(Dt1.Rows(i).Item("noof_hrs").ToString) - Mns


                '            cmd.CommandText = "Update reporttemp set name6 = '" & Hr & ":" & Mns & "' where name1 = '" & Trim(Dt1.Rows(i).Item("Reference_Code").ToString) & "'"
                '            cmd.ExecuteNonQuery()

                '        Next
                '    End If



                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1 , Name1 , Name2 ,Name3 ,Name4 ,Name5 ,Name6,Name7 from reporttemp", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)
                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Currency1, Currency2, int2, Name4 from reporttemp Order by Date1, Meters1, Int1, name2, name1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Daily_Working_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True

                'Case "amount balance report"

                '    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '        Exit Sub
                '    End If
                '    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '        Exit Sub
                '    End If
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) = "" Then
                '        MessageBox.Show("Invalid ItemName", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '        If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                '        Exit Sub
                '    End If

                '    cmd.Connection = con

                '    cmd.CommandText = "Truncate table ReportTempSub"
                '    cmd.ExecuteNonQuery()

                '    cmd.CommandText = "Truncate table ReportTemp"
                '    cmd.ExecuteNonQuery()

                '    cmd.Parameters.Clear()
                '    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '    RptCondt = CompCondt
                '    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '    End If
                '    'If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '    '    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs2.Text)))
                '    'End If


                '    '--Total Sales
                '    cmd.CommandText = "Insert into reporttempSub( Date1   , Currency1) " & _
                '                                "Select      a.Sales_Date ,sum(A.Amount)         from Sales_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by a.Sales_Date"
                '    cmd.ExecuteNonQuery()

                '    '---Total advance
                '    cmd.CommandText = "Insert into reporttempSub( Date1             ,Currency2 ) " & _
                '                                  "Select      a.Voucher_Bill_Date  ,   sum(a.amount)       from Voucher_Bill_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Sales_Head b ON a.entry_identification = b.Sales_Code  where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Bill_Date between @fromdate and @todate  and b.Sales_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "'  group by a.Voucher_Bill_Date"
                '    cmd.ExecuteNonQuery()

                '    ''---Total Receipt
                '    'cmd.CommandText = "Insert into reporttempSub( Date1         ,Currency3 ) " & _
                '    '                         "Select      a.Voucher_Bill_Date  ,  sum(a.amount)       from Voucher_Bill_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Bill_Date between @fromdate and @todate AND a.entry_identification  LIKE 'VOUCH-%'  and a.entry_identification like '%/" & Trim(Common_Procedures.FnYearCode) & "' AND A.CrDr_Type = 'CR' group by a.Voucher_Bill_Date"
                '    'cmd.ExecuteNonQuery()

                '    '---Total Receipt
                '    cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency3 ) " & _
                '                             "Select      a.Voucher_Date  ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 5 or b.AccountsGroup_IdNo = 10 or b.AccountsGroup_IdNo = 18 or b.AccountsGroup_IdNo = 19)  and  a.Voucher_Date between @fromdate and @todate and a.Voucher_amount <> 0 and a.Voucher_amount > 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Rcpt' group by a.Voucher_Date "
                '    cmd.ExecuteNonQuery()


                '    '---Total Expenses
                '    cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency4 ) " & _
                '                             "Select      a.Voucher_Date  ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 14 or b.AccountsGroup_IdNo = 15 or b.AccountsGroup_IdNo = 16)  and  a.Voucher_Date between @fromdate and @todate and a.Voucher_amount <> 0 and a.Voucher_amount < 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Pymt' group by a.Voucher_Date "
                '    cmd.ExecuteNonQuery()

                '    '---Total Bank Deposit
                '    cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency5 ) " & _
                '                             "Select      a.Voucher_Date  ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 5)  and  a.Voucher_Date between @fromdate and @todate and a.Voucher_amount <> 0 and a.Voucher_amount < 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Pymt' group by a.Voucher_Date "
                '    cmd.ExecuteNonQuery()



                '    cmd.CommandText = "Insert into reporttemp( Date1   , Currency1      ,Currency2       ,Currency3      ,Currency4       ,Currency5) " & _
                '                                  "Select    Date1     , sum(Currency1) ,sum(Currency2)  ,sum(Currency3) ,sum(Currency4)  ,sum(Currency5)  from ReportTempsub group by Date1"
                '    cmd.ExecuteNonQuery()


                '    cmd.CommandText = "Truncate table ReportTempSub"
                '    cmd.ExecuteNonQuery()


                '    Da = New SqlClient.SqlDataAdapter("select date1 as EntryDate from reporttemp  Order by Date1", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dt1)
                '    If Dt1.Rows.Count > 0 Then
                '        For i = 0 To Dt1.Rows.Count - 1
                '            cmd.Parameters.Clear()
                '            cmd.Parameters.AddWithValue("@uptodate", Dt1.Rows(i).Item("EntryDate"))

                '            '---Total advance

                '            cmd.CommandText = "Insert into reporttempSub( Date1             ,Currency2 ) " & _
                '                                          "Select      @uptodate  ,   sum(a.amount)       from Voucher_Bill_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Sales_Head b ON a.entry_identification = b.Sales_Code  where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Bill_Date < @uptodate  and b.Sales_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "' "
                '            cmd.ExecuteNonQuery()

                '            ''---Total Receipt

                '            'cmd.CommandText = "Insert into reporttempSub( Date1         ,Currency3 ) " & _
                '            '                         "Select      @uptodate ,  sum(a.amount)       from Voucher_Bill_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Voucher_Bill_Date < @uptodate AND a.entry_identification  LIKE 'VOUCH-%'  and a.entry_identification like '%/" & Trim(Common_Procedures.FnYearCode) & "' AND A.CrDr_Type = 'CR' "
                '            'cmd.ExecuteNonQuery()

                '            '---Total Receipt
                '            cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency3 ) " & _
                '                                     "Select        @uptodate    ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 5 or b.AccountsGroup_IdNo = 10 or b.AccountsGroup_IdNo = 18 or b.AccountsGroup_IdNo = 19)  and  a.Voucher_Date < @uptodate and a.Voucher_amount <> 0 and a.Voucher_amount > 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Rcpt' "
                '            cmd.ExecuteNonQuery()


                '            '---Total Expenses

                '            cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency4 ) " & _
                '                                     "Select      @uptodate       ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 14 or b.AccountsGroup_IdNo = 15 or b.AccountsGroup_IdNo = 16)  and  a.Voucher_Date < @uptodate and a.Voucher_amount <> 0 and a.Voucher_amount < 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Pymt' "
                '            cmd.ExecuteNonQuery()

                '            '---Total Bank Deposit  

                '            cmd.CommandText = "Insert into reporttempSub( Date1   ,Currency5 ) " & _
                '                                     "Select      @uptodate       ,  sum(abs(a.Voucher_amount))   from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head B ON A.Ledger_IdNo =b.Ledger_IdNo where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " (b.AccountsGroup_IdNo = 5)  and  a.Voucher_Date < @uptodate and a.Voucher_amount <> 0 and a.Voucher_amount < 0 and a.entry_identification LIKE 'VOUCH-%' and a.Voucher_Type = 'Pymt'  "
                '            cmd.ExecuteNonQuery()


                '            cmd.CommandText = "Update reporttemp set Currency6 = (select (sum(Currency2) + sum(Currency3)) - (sum(Currency4) + sum(Currency5)) from reporttempSub where  Date1 =  @uptodate     ) where date1 =  @uptodate"
                '            cmd.ExecuteNonQuery()

                '        Next
                '    End If




                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1   , Currency1      ,Currency2       ,Currency3      ,Currency4       ,Currency5 ,Currency6 from reporttemp  Order by Date1", con)
                '    Dtbl1 = New DataTable
                '    Da.Fill(Dtbl1)



                '    If Dtbl1.Rows.Count = 0 Then

                '        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int5, Date1, name1, name2, meters1, name3, weight1, weight2, Weight3 from reporttemp Order by Date1, Int1, name2, name1", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '    End If

                '    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '    RpDs1.Name = "DataSet1"
                '    RpDs1.Value = Dtbl1

                '    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Amount_Balance_Report.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '    RptViewer.LocalReport.DataSources.Add(RpDs1)

                '    'Debug.Print(Now)
                '    RptViewer.LocalReport.Refresh()
                '    RptViewer.RefreshReport()

                '    RptViewer.Visible = True
                '    'Debug.Print(Now)



                Case "payroll employee register"

                    cmd.Connection = con


                    RptCondt_sub = RptCondt

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If



                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@compFromdate", Convert.ToDateTime(Common_Procedures.Company_FromDate))

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "DH.Department_Idno  = " & Str(Val(Common_Procedures.Department_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp( Name1 ,  Name2    ,     Name4   , int1 , Name3 , Name10      , Name5             ,Name7        ,Name8         ,currency1                                                                                                                                         , Name9             , Currency3 ) " &
                                        " Select    a.Employee_Name  , a.Card_No ,a.Date_Birth ,a.Age , a.Sex , a.Join_date , b.Category_Name   ,dh.Department_Name ,a.Designation , (select top 1 z1.For_Salary from PayRoll_Employee_Salary_Details z1 where z1.employee_idno = a.employee_idno order by From_Date desc) as salary  , a.Week_Off  , (select top 1 z2.Amount from PayRoll_Employee_Payment_Head z2 where z2.Employee_IdNo = a.Employee_IdNo and z2.Employee_Payment_Date < @compFromdate ) from PayRoll_Employee_Head a LEFT OUTER JOIN PayRoll_Category_Head b ON a.Category_IdNo = b.Category_IdNo LEFT OUTER JOIN Department_Head DH ON a.Department_Idno = DH.Department_Idno Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_IdNo <> 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1,Name2,Name4,int1,Name3,Name5,Name6,Name7,Name8,currency1,Name9,Name10,Currency3 from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Currency1, Currency2, int2, Name4 from reporttemp Order by Date1, Meters1, Int1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Employee_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "payroll attendance register - ordered by date", "payroll attendance register - ordered by employee"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If
                    If Trim(LCase(RptIpDet_ReportName)) = "ot register employeewise" Then
                        If cbo_Inputs1.Visible = True And cbo_Inputs1.Enabled And Trim(cbo_Inputs1.Text) = "" Then
                            MessageBox.Show("Invalid Employee Name", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                            Exit Sub
                        End If
                    End If
                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTempSub; Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If



                    cmd.CommandText = " Insert into ReportTempSub(Date1                       ,Name1            ,   Name2           ,Meters1              ) " &
                                      " Select       a.Employee_Attendance_Date  ,c.Employee_Name  ,  d.Category_Name            ,   sum(a.No_Of_Shift ) from " &
                                      " PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN " &
                                      " PayRoll_Category_Head d ON  D.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " And ", "") &
                                      " a.Employee_Attendance_Date between @fromdate And @todate group by a.Employee_Attendance_Date,c.Employee_Name,d.Category_Name " &
                                      " having  sum(a.No_Of_Shift) <> 0 "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = " Insert into  ReportTempSub(Date1        ,Name1            ,   Name2           ,Meters2              ) " &
                                      " Select       a.Timing_OverTime_Date  ,c.Employee_Name  ,  d.Category_Name  ,   sum(a.OT_Hours ) from " &
                                      " Payroll_Employee_OverTime_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN " &
                                      " PayRoll_Category_Head d ON  D.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " And ", "") &
                                      " a.Timing_OverTime_Date between @fromdate And @todate group by a.Timing_OverTime_Date,c.Employee_Name,d.Category_Name " &
                                      " having  sum(a.OT_Hours) <> 0 "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = " Insert into  ReportTempSub(Date1                     ,Name1              ,   Name2                     ,Meters3              ) " &
                                      " Select       a.Timing_PermissionLeaveTime_Date    ,c.Employee_Name    ,  d.Category_Name            ,   sum(a.PermissionLeaveTime_Hours ) from " &
                                      " Payroll_Employee_PermissionLeaveTime_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN " &
                                      " PayRoll_Category_Head d ON  D.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " And ", "") &
                                      " a.Timing_PermissionLeaveTime_Date between @fromdate And @todate group by a.Timing_PermissionLeaveTime_Date,c.Employee_Name,d.Category_Name " &
                                      " having  sum(a.PermissionLeaveTime_Hours) <> 0 "
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp (Date1        ,Name1        ,   Name2          ,Meters1               ,Meters2               ,Meters3              )" &
                                       " select                Date1        ,name1        ,Name2             ,sum(isnull(meters1,0)),sum(isnull(meters2,0)),sum(isnull(meters3,0)) from ReportTempSub Group by Date1,Name1,Name2"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1 ,Name1 ,Meters1 ,Name2 , Meters2,Meters3 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    If Trim(LCase(RptIpDet_ReportName)) = "payroll attendance register - ordered by date" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Attendance_Register.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Attendance_Register_OBEmpl.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll incentive register - ordered by date", "payroll incentive register - ordered by employee"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If
                    If Trim(LCase(RptIpDet_ReportName)) = "ot register employeewise" Then
                        If cbo_Inputs1.Visible = True And cbo_Inputs1.Enabled And Trim(cbo_Inputs1.Text) = "" Then
                            MessageBox.Show("Invalid Employee Name", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                            Exit Sub
                        End If
                    End If
                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTempSub; Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    cmd.CommandText = " Insert into ReportTemp(Date1   ,Name1            ,   Name2           ,Meters1              ) " &
                                      " Select       a.Incentive_Date  ,c.Employee_Name  ,  d.Category_Name            ,   sum(a.Incentive_Amount ) from " &
                                      " Payroll_Employee_Incentive_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN " &
                                      " PayRoll_Category_Head d ON  D.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " And ", "") &
                                      " a.Incentive_Date between @fromdate And @todate group by a.Incentive_Date,c.Employee_Name,d.Category_Name " &
                                      " having  sum(a.Incentive_Amount) <> 0 "
                    cmd.ExecuteNonQuery()



                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1 ,Name1 ,Meters1 ,Name2  from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    If Trim(LCase(RptIpDet_ReportName)) = "payroll incentive register - ordered by date" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Incentive_Register.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Incentive_Register_OBEmpl.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "payroll attendance monthwise register"

                    Attendance_Register_MonthWise()

                Case "payroll advance register - monthwise"
                    Advance_Register_MonthWise()

                Case "payroll salary register", "payroll salary register2"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "e.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1          ,   Currency1    ,   Meters1               ,   Meters2       ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,   Currency6        ,    Currency7,    Currency8     ,  Meters3            ,    Currency9      ,   Currency10   ,  Currency11   ,   Currency12,   Weight1         ,   int2   , int3     , Weight2         ,  Name2  ) " &
                                      "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name , a.Salary_Shift , a.No_Of_Attendance_Days , a.Working_Hours , a.Basic_Salary , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Ot_Salary , a.Incentive_Amount ,  a.Advance  ,  a.Minus_Advance , a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Salary  ,  a.Mess        , a.Net_Pay   , a.Net_Pay_Amount ,b.Pf_No   ,b.Esi_No  ,a.Salary_Days ,c.Category_Name from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo  INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " &
                                     "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                    nr = cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update ReportTemp set Meters4 = (select a.Meters4 from ReportTempsub a where a.name1 = reporttemp.name1)"
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1 ,Name1         ,Currency1      ,Meters1      ,Meters3 ,  Meters2     , Meters4        ,Currency2     ,Currency3    ,Currency4     ,Currency5    ,Currency6          ,Currency7   ,Currency8       ,Currency9          ,Currency10      ,Currency11  ,Currency12,   Weight1, int2,int3,int4  ,name2 from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "payroll salary register2" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register2.rdlc"

                    Else

                        If Val(Common_Procedures.settings.PAYROLLENTRY_Attendance_In_Hours_Status) = 1 Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Hours_Register.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register.rdlc"
                        End If

                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "payroll salary register simple"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "e.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1          ,   Currency1    ,   Meters1               ,   Meters2       ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,   Currency6        ,    Currency7,    Currency8     ,  Meters3            ,    Currency9      ,   Currency10   ,  Currency11   ,   Currency12,   Weight1         ,   int2    , int3      , Weight2         ,  Name2        ,  Meters4         ,Meters5     ,Meters6       ,Meters7     ,Meters8             ,Meters9    ) " &
                                      "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name  , a.Salary_Shift , a.No_Of_Attendance_Days , a.Working_Hours , a.Basic_Salary , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Ot_Salary , a.Incentive_Amount ,  a.Advance  ,  a.Minus_Advance , a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Salary  ,  a.Mess        , a.Net_Pay   , a.Net_Pay_Amount ,b.Pf_No   ,b.Esi_No  ,a.Salary_Days    ,c.Category_Name , ES.For_Salary    ,a.Provision ,a.Conveyance  ,A.Late_Mins ,A.Late_Hours_Salary , a.Net_Pay from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " &
                                     "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                    nr = cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update ReportTemp set Meters4 = (select a.Meters4 from ReportTempsub a where a.name1 = reporttemp.name1)"
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  , Int1  ,  Name1   ,   Currency1    ,   Meters1   ,   Meters2  ,   Currency2    ,   Currency3 ,    Currency4  ,    Currency5 ,   Currency6   ,    Currency7,    Currency8     ,  Meters3  ,    Currency9  ,   Currency10   ,  Currency11   ,   Currency12,   Weight1 ,   int2    , int3      , Weight2  ,  Name2   ,  Meters4   ,Meters5     ,Meters6       ,Meters7     ,Meters8  ,Meters9    from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_Simple.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "payroll netpay register", Trim(LCase("Payroll NetPay Register - ESI/PF GroupWIse"))

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "MH.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                            If RptCboDet(3).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs3.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(3).MultiSelectedIdNos_ForInQuery) <> "" Then
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.bank_IdNo IN " & RptCboDet(3).MultiSelectedIdNos_ForInQuery
                            Else
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.bank_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs3.Text)))
                            End If
                        End If
                        'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "a.bank_IdNo =" & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll NetPay Register - ESI/PF GroupWIse")) Then
                        If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                            If RptCboDet(5).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs5.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(5).MultiSelectedIdNos_ForInQuery) <> "" Then
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ESI_PF_Group_IdNo IN " & RptCboDet(5).MultiSelectedIdNos_ForInQuery
                            Else
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.ESI_PF_Group_IdNo = " & Str(Val(Common_Procedures.Esi_Pf_Group_NameToIdNo(con, cbo_Inputs5.Text)))
                            End If
                        End If

                    Else
                        If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                            If RptCboDet(5).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs5.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(5).MultiSelectedIdNos_ForInQuery) <> "" Then
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " ch.Category_IdNo IN " & RptCboDet(5).MultiSelectedIdNos_ForInQuery
                            Else
                                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " ch.Category_IdNo =" & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs5.Text)))
                            End If
                        End If

                    End If




                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        If Trim(cbo_Inputs4.Text) = "YES" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.signature_Status = 1 "
                        ElseIf Trim(cbo_Inputs4.Text) = "NO" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.signature_Status = 0 "
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.signature_Status = '" & Trim(cbo_Inputs4.Text) & "'"
                        End If
                    End If

                    cmd.CommandText = "Insert into ReportTemp (Date1            ,      Date2          ,    Date3        ,   Name1            ,     Name2   ,              Currency1                                                                                                                                              ,   Name3     , Name4 , Name5    ) " &
                                             " Select         d.Salary_Date     ,     d.From_date     ,    d.To_Date    , a.Employee_MainName, a.Bank_Ac_No, (case when a.ESI_PF_Group_IdNo = 2 then (b.Net_Pay-b.OT_Salary-b.ESI+b.SALARY_OT_ESI) Else b.Net_Pay End)  , a.Bank_Code ,  'C'  , 'SALARY'  from PayRoll_Employee_Head a INNER JOIN PayRoll_Salary_Details b ON a.Employee_IdNo = b.Employee_IdNo INNER JOIN PayRoll_Salary_Head D ON B.SALARY_CODE = D.SALARY_CODE LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = month(b.Salary_Date) LEFT OUTER JOIN Ledger_Head LH ON a.Bank_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN PayRoll_Category_Head CH ON a.Category_IdNo = CH.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " b.Salary_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()



                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Date2,Date3, Name1,Name2,Currency1,Currency2,Name3,Name4,Name5,meters6                 , weight10        ,  meters11   ,  Meters12  from reporttemp order by Date1,Date2,Date3,name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1, Date2, Date3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll NetPay Register - ESI/PF GroupWIse")) Then
                        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_NetPay_Register_1066.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_NetPay_Register.rdlc"

                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "employee payment register"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_Idno = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.DebitAc_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then

                        If Trim(cbo_Inputs4.Text) = "ADVANCE" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " (a.Advance_Salary = 'SALARYADVANCE' or a.Advance_Salary = 'SALARY ADVANCE')"

                        ElseIf Trim(cbo_Inputs4.Text) = "LOAN" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Advance_Salary = 'ADVANCE'"

                        ElseIf Trim(cbo_Inputs4.Text) = "SALARY" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Advance_Salary = 'SALARY'"

                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Advance_Salary = '" & Trim(cbo_Inputs4.Text) & "'"
                        End If

                    End If

                    cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1        ,   Name2                  ,   meters1    ,        Date1       ,                                   Name3    ,         Name4                            ,             Name5                                                                                                                                                             ,   Name6    , Currency1, Name7         ) " &
                                       " Select  a.Employee_Payment_Code, a.Company_IdNo, a.Employee_Payment_No, a.for_OrderBy, a.Employee_Payment_Date, b.Ledger_Name as Employee_Name, a.Cash_Cheque, c.Ledger_Name as DebitAccount_Name, (CASE WHEN a.Advance_Salary = 'ADVANCE' THEN 'LOAN' WHEN a.Advance_Salary = 'SALARYADVANCE' OR a.Advance_Salary = 'SALARY ADVANCE'  THEN 'ADVANCE' ELSE a.Advance_Salary END)  , a.Amount , Voucher_No from PayRoll_Employee_Payment_Head a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head b ON a.Employee_Idno = b.Ledger_IdNo LEFT OUTER JOIN Ledger_Head c ON a.DebitAc_IdNo = c.Ledger_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Payment_Date between @fromdate and @todate Order by a.Employee_Payment_Date, a.for_OrderBy, a.Employee_Payment_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3, Name4, Name5,Name6 , Name7, Currency1 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Payment_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "employee addition and deduction register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_Idno = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp(Name1         ,   Int1        ,   Name2                ,   meters1     ,        Date1             ,    Name3        , Name4     ,   Currency1               ,Currency2  ,Currency3  ,Currency4 ,Currency5          ,Currency6        ,                                        Currency7                             ) " &
                                       " Select    a.Employee_Deduction_Code, a.Company_IdNo, a.Employee_Deduction_No, a.for_OrderBy , a.Employee_Deduction_Date, b.Employee_Name ,a.Remarks  ,a.Advance_Deduction_Amount ,A.Mess     ,A.Medical  ,A.Store   , A.Other_Deduction ,A.Other_Addition ,a.Advance_Deduction_Amount + A.Mess + A.Medical + A.Store + A.Other_Deduction  from PayRoll_Employee_Deduction_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head b ON a.Employee_Idno <> 0 and a.Employee_Idno = b.Employee_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Deduction_Date between @fromdate and @todate Order by a.Employee_Deduction_Date, a.for_OrderBy, a.Employee_Deduction_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,   Int1  ,Name2   ,meters1 , Date1 , Name3 , Name4 , Currency1 ,Currency2  ,Currency3  ,Currency4 ,Currency5 ,Currency6 ,Currency7  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Employee_Deduction_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll absent list register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp( Date1                        , Name1           ) " &
                                                         "Select a.Employee_Attendance_Date , c.Employee_Name  from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate and  a.No_Of_Shift = 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Name1,Meters1 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_AbsentList_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll latecomers list register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp( Date1                        , Name1           , Meters1 ) " &
                                                         "Select a.Employee_Attendance_Date , c.Employee_Name  , a.Late_Hours from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate and  a.Late_Hours <> 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Name1,Meters1 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_LateComersList_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll earlyout list register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    cmd.CommandText = "Insert into ReportTemp( Date1                        , Name1            , Meters1 ) " &
                                                         "Select a.Employee_Attendance_Date , c.Employee_Name  , a.EarlyOut_Hours from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate and  a.EarlyOut_Hours <> 0"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1,Name1,Meters1 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_EarlyOutList_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case Trim(LCase("payroll esi pf register")), Trim(LCase("Payroll ESI PF Register - Format2")), Trim(LCase("Payroll Salary Register Format1")), Trim(LCase("Payroll Salary Register Format2")), Trim(LCase("Payroll Salary Register Format3")), Trim(LCase("Payroll Salary Register Format4")), Trim(LCase("Payroll ESI PF Register - Salary Details")), Trim(LCase("Payroll Directors - Salary Details"))


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    'If cbo_Inputs2.Visible = True And cbo_Inputs2.Enabled = True And Trim(cbo_Inputs2.Text) = "" Then
                    '    MessageBox.Show("Invalid Month", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    '    If cbo_Inputs2.Enabled Then cbo_Inputs2.Focus()
                    '    Exit Function
                    'End If
                    'If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                    '    MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    '    If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                    '    Exit Function
                    'End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        If RptCboDet(1).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs1.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(1).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo IN " & RptCboDet(1).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                        End If
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        If RptCboDet(2).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs2.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(2).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " MH.Month_IdNo IN " & RptCboDet(2).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " MH.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                        End If
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        If RptCboDet(3).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs3.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(3).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Salary_Payment_Type_IdNo IN " & RptCboDet(3).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                        End If
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        If RptCboDet(4).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs4.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(4).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tCT.Category_IdNo IN " & RptCboDet(4).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tCT.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs4.Text)))
                        End If
                    End If

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        If RptCboDet(5).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs5.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(5).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " c.ESI_PF_Group_IdNo IN " & RptCboDet(5).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " c.ESI_PF_Group_IdNo = " & Str(Val(Common_Procedures.Esi_Pf_Group_NameToIdNo(con, cbo_Inputs5.Text)))
                        End If
                    End If


                    If Trim(LCase(RptIpDet_ReportName)) = "payroll esi pf register" Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll ESI PF Register - Format2")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll ESI PF Register - Salary Details")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Directors - Salary Details")) Then

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL

                            cmd.CommandText = "Insert into ReportTemp ( Name1 ,    Name2  ,   Name3 ,   Name4       ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8           ,       Meters9         ,         Meters10                                , Meters11         , Meters12               ,   Currency4 ,      Currency5       ,Currency6              ,        Currency1                                                              ,               Currency2                                                                                                              ,        Currency3                                                                                            , weight10       )  " &
                                                  " Select  c.Employee_Name   ,  c.Esi_No , c.Pf_No , c.Designation , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F_AUDIT) , sum(b.Pension_Scheme) , ( sum(b.E_P_F_AUDIT)  + sum(b.Pension_Scheme) ) , sum( b.PF_AUDIT) ,  sum( b.SALARY_OT_ESI) , sum(b.Mess) , sum(b.Minus_Advance) ,sum(b.Other_Deduction) , (sum(b.Total_Deduction) - sum(b.PF_AUDIT) - sum(b.ESI_AUDIT) - sum(b.Mess) )  ,  sum(b.Mess)  + sum(b.Minus_Advance) +sum(Other_Deduction) + (SUM(B.SALARY_OT_ESI)+( sum(b.E_P_F_AUDIT)  + sum(b.Pension_Scheme) ))  ,  sum(b.Net_Salary)-sum(b.Minus_Advance)-(SUM(SALARY_OT_ESI)-( sum(b.E_P_F_AUDIT)  + sum(b.Pension_Scheme) )), sum( b.OT_Salary)  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                            cmd.ExecuteNonQuery()

                        Else

                            cmd.CommandText = "Insert into ReportTemp ( Name1     ,    Name2  ,   Name3 ,   Name4       ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8           ,       Meters9         ,         Meters10                                , Meters11         , Meters12               ,   Currency4 ,      Currency5        ,        Currency1                                                              ,               Currency2                                                             ,        Currency3                                     , weight10       )  " &
                                                  " Select  c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F_AUDIT) , sum(b.Pension_Scheme) , ( sum(b.E_P_F_AUDIT)  + sum(b.Pension_Scheme) ) , sum( b.PF_AUDIT) ,  sum( b.SALARY_OT_ESI) , sum(b.Mess) , sum(b.Minus_Advance)  , (sum(b.Total_Deduction) - sum(b.PF_AUDIT) - sum(b.ESI_AUDIT) - sum(b.Mess) )  ,  sum(b.Total_Deduction) + sum(b.Minus_Advance) + (SUM(B.OT_ESI))  ,  sum(b.Net_Salary)-sum(b.Minus_Advance)-(SUM(OT_ESI)), sum( b.OT_Salary)  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                            cmd.ExecuteNonQuery()

                        End If


                        '2018-06-07
                        'cmd.CommandText = "Insert into ReportTemp ( Name1        ,    Name2  ,   Name3 ,   Name4       ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8           ,       Meters9         ,         Meters10                                , Meters11         , Meters12             ,   Currency4 ,      Currency5        ,        Currency1                                                              ,               Currency2                                          ,        Currency3                                                     ,weight10       )  " & _
                        '                        " Select  c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F_AUDIT) , sum(b.Pension_Scheme) , ( sum(b.E_P_F_AUDIT)  + sum(b.Pension_Scheme) ) , sum( b.PF_AUDIT) ,  sum( b.SALARY_OT_ESI) , sum(b.Mess) , sum(b.Minus_Advance)  , (sum(b.Total_Deduction) - sum(b.PF_AUDIT) - sum(b.ESI_AUDIT) - sum(b.Mess) )  ,  sum(b.Total_Deduction) + sum(b.Minus_Advance) + (SUM(OT_ESI))  ,  sum(b.Net_Salary)-sum(b.Minus_Advance)-(SUM(OT_ESI)),sum( b.OT_Salary)  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                        'cmd.ExecuteNonQuery()




                    ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format1")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format2")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format3")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format4")) Then


                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL
                            If Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format3")) Then

                                cmd.CommandText = "Insert into ReportTemp ( Name1     ,    Name2  ,   Name3 ,   Name4        ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8     ,       Meters9         ,         Meters10                          , Meters11     , Meters12     ,   Currency4 ,      Currency5        ,Currency6               ,    Currency1                                                       ,               Currency2                                                                                             ,                                     Currency3                                                                                                              , weight10       )  " &
                                                   " Select     c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation  , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F) , sum(b.Pension_Scheme) , ( sum(b.E_P_F)  + sum(b.Pension_Scheme) ) , sum( b.P_F)  ,  sum( b.ESI) , sum(b.Mess) , sum(b.Minus_Advance)  ,sum(b.Other_Deduction)  , (sum(b.Total_Deduction) - sum(b.P_F) - sum(b.ESI) - sum(b.Mess) )  ,  sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)    ,  (sum(b.Total_Addition)+sum(b.Earning)) - (sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)), 0  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                                cmd.ExecuteNonQuery()

                                'cmd.CommandText = "Insert into ReportTemp ( Name1     ,    Name2  ,   Name3 ,   Name4        ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8     ,       Meters9         ,         Meters10                          , Meters11     , Meters12     ,   Currency4 ,      Currency5        ,Currency6               ,    Currency1                                                       ,               Currency2                                                                                             ,                                     Currency3                                                                                                              , weight10       )  " & _
                                '                    " Select     c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation  , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F) , sum(b.Pension_Scheme) , ( sum(b.E_P_F)  + sum(b.Pension_Scheme) ) , sum( b.P_F)  ,  sum( b.ESI) , sum(b.Mess) , sum(b.Minus_Advance)  ,sum(b.Other_Deduction)  , (sum(b.Total_Deduction) - sum(b.P_F) - sum(b.ESI) - sum(b.Mess) )  ,  sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)    ,  (sum(b.Total_Addition)+sum(b.Earning)) - (sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)), 0  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                                'cmd.ExecuteNonQuery()

                            ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format4")) Then
                                cmd.CommandText = "Insert into ReportTemp ( Name1     ,    Name2  ,   Name3 ,   Name4        ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8     ,       Meters9         ,         Meters10                          , Meters11     , Meters12     ,   Currency4 ,      Currency5        ,Currency6               ,    Currency1                                                       ,               Currency2                                                                                             ,                                     Currency3                                                                                                              , weight10       )  " &
                                                   " Select     c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation  , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F) , sum(b.Pension_Scheme) , ( sum(b.E_P_F)  + sum(b.Pension_Scheme) ) , sum( b.P_F)  ,  sum( b.SALARY_OT_ESI) , sum(b.Mess) , sum(b.Minus_Advance)  ,sum(b.Other_Deduction)  , (sum(b.Total_Deduction) - sum(b.P_F) - sum(b.SALARY_OT_ESI) - sum(b.Mess) )  ,  sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.SALARY_OT_ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)    ,  (sum(b.Total_Addition)+sum(b.Earning)) - (sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.SALARY_OT_ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)), sum( b.OT_Salary)  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                                cmd.ExecuteNonQuery()


                            Else
                                cmd.CommandText = "Insert into ReportTemp ( Name1     ,    Name2  ,   Name3 ,   Name4        ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8     ,       Meters9         ,         Meters10                          , Meters11     , Meters12               ,   Currency4 ,      Currency5        ,Currency6               ,    Currency1                                                       ,               Currency2                                                                                                      ,        Currency3                                                                                    , weight10       )  " &
                                                   " Select     c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation  , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F) , sum(b.Pension_Scheme) , ( sum(b.E_P_F)  + sum(b.Pension_Scheme) ) , sum( b.P_F)  ,  sum( b.SALARY_OT_ESI) , sum(b.Mess) , sum(b.Minus_Advance)  ,sum(b.Other_Deduction)  , (sum(b.Total_Deduction) - sum(b.P_F) - sum(b.ESI) - sum(b.Mess) )  ,  sum(b.Mess)  + sum(b.Minus_Advance) +sum(b.Other_Deduction) + SUM(B.SALARY_OT_ESI)+ sum(b.E_P_F)  + sum(b.Pension_Scheme)    ,  sum(b.Net_Salary)-sum(b.Minus_Advance)-(SUM(SALARY_OT_ESI) + sum(b.E_P_F)  + sum(b.Pension_Scheme)), sum( b.OT_Salary)  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo   WHERE " & RptCondt & IIf(RptCondt <> "", "  ", "") & "  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                                cmd.ExecuteNonQuery()

                            End If

                        Else

                            cmd.CommandText = "Insert into ReportTemp ( Name1        ,    Name2  ,   Name3 ,   Name4       ,       Weight1     ,       Meters1      ,       Meters2  ,   Meters3     ,        Weight2  ,       Meters5     ,        Weight3      ,        Weight4      ,        Meters6                         ,       Meters7  ,  Meters8     ,       Meters9         ,         Meters10                          , Meters11    , Meters12   ,   Currency4 ,      Currency5        ,        Currency1                                                   ,               Currency2                           ,        Currency3                                )  " &
                                                     " Select  c.Employee_Name       ,  c.Esi_No , c.Pf_No , c.Designation , sum(b.Total_Days) , sum(b.Salary_Days) , sum(b.Earning) , sum(b.H_R_A)  ,  sum(b.Washing) , sum(b.Conveyance) , sum(b.Entertainment) , sum(b.Maintenance) , (sum(b.Total_Addition)+sum(b.Earning)) , sum(b.Earning) , sum(b.E_P_F) , sum(b.Pension_Scheme) , ( sum(b.E_P_F)  + sum(b.Pension_Scheme) ) , sum( b.P_F) , sum(b.ESI) , sum(b.Mess) , sum(b.Minus_Advance)  , (sum(b.Total_Deduction) - sum(b.P_F) - sum(b.ESI) - sum(b.Mess) )  , ( sum(b.Total_Deduction) + sum(b.Minus_Advance) ) , ( sum(b.Net_Salary)-sum(b.Minus_Advance) )  from PayRoll_Salary_Head a INNER JOIN PayRoll_Salary_Details b ON a.Salary_Code = b.Salary_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN PayRoll_Employee_Head C ON b.Employee_IdNo <> 0 and b.Employee_IdNo = c.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tCT.Category_IdNo <> 0 and tCT.Category_IdNo = c.Category_IdNo LEFT OUTER JOIN Month_Head MH ON MH.Month_IdNo = a.Month_IdNo  LEFT OUTER JOIN ESI_PF_Head EPH ON c.ESI_PF_Group_IdNo = EPH.ESI_PF_Group_IdNo WHERE " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Salary_Date between @fromdate and @todate  Group by c.Employee_Name,  c.Esi_No, c.Pf_No, c.Designation"
                            cmd.ExecuteNonQuery()

                        End If


                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL

                        vMnth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)
                        If Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("payroll esi pf register")) Then
                            RptHeading1 = "Workers Wages Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format1")) Then
                            RptHeading1 = " Workers Wages Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format2")) Then
                            RptHeading1 = Trim(UCase(cbo_Inputs5.Text)) & " Workers Wages Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format3")) Then
                            RptHeading1 = "Apprentice stipend Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format4")) Then
                            RptHeading1 = "Exempted Workers Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll ESI PF Register - Format2")) Or Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Directors - Salary Details")) Then
                            If InStr(1, Trim(cbo_Inputs4.Text), "DIRECTOR") > 0 Then
                                RptHeading1 = "Directors Remuneration Statement - " & cbo_Inputs2.Text & "  " & IIf(Mth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))
                            Else
                                RptHeading1 = Trim(UCase(cbo_Inputs4.Text)) & " Salary Statement - " & cbo_Inputs2.Text & "  " & IIf(vMnth_ID <= 3, Year(Common_Procedures.Company_ToDate), Year(Common_Procedures.Company_FromDate))
                            End If

                        End If

                        RptHeading2 = ""
                        RptHeading3 = ""

                    End If


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1        ,    Name2  ,   Name3 ,   Name4       ,       Weight1                ,       Meters1      ,       Meters2  ,   Meters3     ,       Meters4     ,       Weight2  ,                                Meters5                                                         ,       Meters6         ,       Meters7  ,  Meters8      ,       Meters9         ,          Meters10                     , Meters11    , Meters12 ,   Currency4  ,      Currency5 ,Currency6    ,       Currency1                                                    ,               Currency2                               ,        Currency3      , Weight3      ,        Weight4   ,weight10            from reporttemp Order by name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL

                        If Trim(LCase(RptIpDet_ReportName)) = "payroll esi pf register" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_1066.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format1")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_1066.rdlc"
                            'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_1066.rdlc"
                            'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_Employee_1066.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format2")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_with_credit_1066.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format3")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_Format2_Employee_1066.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Salary Register Format4")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_Format4_1066.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll ESI PF Register - Salary Details")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Staff_salary_Details.rdlc"

                        ElseIf Trim(LCase(RptIpDet_ReportName)) = Trim(LCase("Payroll Directors - Salary Details")) Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Director_salary_Details.rdlc"

                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register_Format2_1066.rdlc"

                        End If

                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_ESI_PF_Register.rdlc"

                    End If
                    'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_ESI_PF_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "ot register datewise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If
                    If Trim(LCase(RptIpDet_ReportName)) = "ot register employeewise" Then
                        If cbo_Inputs1.Visible = True And cbo_Inputs1.Enabled And Trim(cbo_Inputs1.Text) = "" Then
                            MessageBox.Show("Invalid Employee Name", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                            Exit Sub
                        End If
                    End If
                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""


                    cmd.CommandText = "Insert into ReportTemp(Date1                       ,Name1            ,   Name2         ,  Meters2) " &
                                             " Select       a.Employee_Attendance_Date  ,c.Employee_Name  ,  d.Category_Name  ,   sum(a.OT_Hours) from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head d ON  D.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate group by a.Employee_Attendance_Date,c.Employee_Name,d.Category_Name having sum(a.OT_Hours) <> 0 "
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1 ,Name1 ,Meters1 ,Name2 , Meters2 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Ot_DateWise_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "ot register employeewise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If
                    If Trim(LCase(RptIpDet_ReportName)) = "ot register employeewise" Then
                        If cbo_Inputs1.Visible = True And cbo_Inputs1.Enabled And Trim(cbo_Inputs1.Text) = "" Then
                            MessageBox.Show("Invalid Employee Name", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                            If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                            Exit Sub
                        End If
                    End If
                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If


                    cmd.CommandText = "Insert into ReportTemp( Date1                   ,  Meters2) " &
                                               " Select     a.Employee_Attendance_Date  , a.OT_Hours from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head c ON a.Employee_IdNo = c.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head d ON  D.Category_IdNo = d.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate and a.Employee_Idno <> 0 and a.OT_Hours <> 0 " 'group by a.Employee_Attendance_Date,a.Employee_Idno  "
                    cmd.ExecuteNonQuery()




                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1 ,Name1 ,Meters1 ,Name2 , Meters2 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Ot_EmployeeWise_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "ot salary register"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "e.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL
                        cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1         ,Name2           ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,Currency6     ) " &
                                          "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name ,c.Category_Name , a.Basic_Salary , a.OT_HOURS_HALF  ,  a.Ot_Pay_Hours ,  a.Ot_Salary ,a.Salary_Days from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo  INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                        cmd.ExecuteNonQuery()

                    Else
                        cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1         ,Name2           ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,Currency6     ) " &
                                          "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name ,c.Category_Name , a.Basic_Salary , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Ot_Salary ,a.Salary_Days from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo  INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                        cmd.ExecuteNonQuery()

                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " &
                                     "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                    nr = cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update ReportTemp set Meters4 = (select a.Meters4 from ReportTempsub a where a.name1 = reporttemp.name1)"
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Date1 ,Name1         ,Currency1      ,Meters1      ,Meters3 ,  Meters2     , Meters4        ,Currency2     ,Currency3    ,Currency4     ,Currency5    ,Currency6          ,Currency7   ,Currency8       ,Currency9          ,Currency10      ,Currency11  ,Currency12,   Weight1, int2,int3,int4  ,name2 from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1066" Then '---- SOUTHERN COTSPINNERS COIMBATORE LTD (COIMBATORE)  --SPINNING MILL
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Ot_Salary_Register_format1.rdlc"
                    Else

                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Ot_Salary_Register.rdlc"
                    End If


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "payroll salary register simple1"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "e.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    Dim STR1 As String = ""
                    Dim STR2 As String = ""

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    For I = 1 To 7

                        Select Case I
                            Case 1
                                STR2 = "sum(a.Conveyance)"
                            Case 2
                                STR2 = "sum(a.Washing)"
                            Case 3
                                STR2 = "sum(a.Entertainment)"
                            Case 4
                                STR2 = "sum(a.Maintenance)"
                            Case 5
                                STR2 = "sum(a.Provision)"
                            Case 6
                                STR2 = "sum(a.Other_Addition1)"
                            Case 7
                                STR2 = "sum(a.Other_Addition2)"
                        End Select

                        cmd.CommandText = "select * from PayRoll_Settings order by Auto_SlNo"
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dtbl1 = New DataTable
                        Da.Fill(Dt1)

                        If Not IsDBNull(Dt1.Rows(0).Item("Add_Caption" & Val(I))) Then
                            STR1 = Trim(Dt1.Rows(0).Item("Add_Caption" & Val(I)).ToString)
                        End If
                        Dt1.Clear()

                        cmd.CommandText = "Insert into EntryTemp(Int1         , Name1              , Meters1 ) " &
                         "  Select                                  Employee_IdNo ,'" & Trim(STR1) & "'," & Trim(STR2) & " from PayRoll_Salary_Details a Where  a.Salary_Date between @fromdate and @todate group by   a.Employee_IdNo "
                        cmd.ExecuteNonQuery()

                    Next

                    cmd.CommandText = "Insert into ReportTempSub(Int1         , Name1   , Meters1 ) " &
                                                          "  Select Int1      , Name1   ,Meters1  from EntryTemp  "
                    cmd.ExecuteNonQuery()




                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1          ,   Currency1    ,   Meters1               ,   Meters2       ,   Currency2         ,   Currency3 ,    Currency4    ,    Currency5      ,   Currency6             ,    Currency7,    Currency8     ,  Meters3            ,    Currency9      ,   Currency10         ,  Currency11   ,   Currency12     ,   Weight1         ,   int2    , int3      , Weight2         ,  Name5        ,  Meters4            ,Meters7     ,Meters8                 ,Meters9        ,Name2     , Meters5 ) " & _
                    '                  "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name  , a.Salary_Shift , a.No_Of_Attendance_Days , a.Working_Hours , avg(a.Basic_Salary) , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  avg(a.Ot_Salary) , avg(a.Incentive_Amount) ,  a.Advance  ,  a.Minus_Advance , a.Minus_MainAdvance ,  a.Balance_Advance, avg(a.Total_Salary)  ,  AVG(a.Mess)  , AVG(a.Net_Pay )  , a.Net_Pay_Amount ,b.Pf_No   ,b.Esi_No  ,a.Salary_Days    ,c.Category_Name , ES.For_Salary       ,A.Late_Mins ,avg(A.Late_Hours_Salary) ,AVG( a.Net_Pay) ,RT.Name1  ,RT.Meters1     from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo LEFT Outer Join ReportTempSub RT ON RT.Int1 = a.Employee_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate GROUP BY d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name  , a.Salary_Shift , a.No_Of_Attendance_Days , a.Working_Hours ,  a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Advance  ,  a.Minus_Advance , a.Minus_MainAdvance ,  a.Balance_Advance,a.Net_Pay_Amount ,b.Pf_No   ,b.Esi_No  ,a.Salary_Days    ,c.Category_Name , ES.For_Salary       ,A.Late_Mins  ,RT.Name1  , RT.Meters1  "
                    'cmd.ExecuteNonQuery()


                    cmd.CommandText = "Insert into ReportTemp( Date1         , Int1                ,  Name1          ,   Currency1 ,   Meters1               ,   Meters2       ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,   Currency6        ,    Currency7,    Currency8     ,  Meters3            ,    Currency9      ,   Currency10                                                        ,  Currency11    ,   Currency12,   Weight1         ,   int2    , int3      , Weight2         ,  Name5            ,  Meters4         ,Meters7     ,Meters8             ,Meters9    ,Name2     , Meters5  ,Meters6                ,Meters11 , Meters12 ) " &
                                    "  Select                d.Salary_Date ,a.Employee_IdNo     , b.Employee_Name  , a.Salary_Days , a.No_Of_Attendance_Days , a.Working_Hours , a.Basic_Salary , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Ot_Salary , a.Incentive_Amount    ,  a.Advance  ,  a.Minus_Advance , a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Addition +a.Basic_Salary + a.Ot_Salary +a.Incentive_Amount  ,  a.Mess        , a.Net_Pay   , a.Net_Pay_Amount ,b.Pf_No   ,b.Esi_No  ,a.Salary_Days    ,c.Category_Name    ,a.Actual_Salary   ,A.Late_Mins ,A.Late_Hours_Salary , a.Net_Pay ,RT.Name1  ,RT.Meters1  ,a.Week_Off_Allowance  ,a.ESI   ,a.P_F  from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo LEFT Outer Join ReportTempSub RT ON RT.Int1 = a.Employee_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTempsub(  Int1          ,   Name1         ,        Meters4 ) " &
                                     "  Select                   a.Employee_IdNo , a.Employee_Name , sum(VD.voucher_amount) from voucher_details VD INNER JOIN pAYROLL_Employee_Head a ON a.Employee_IdNo = VD.Ledger_IdNo Where VD.Voucher_Date <= @todate GROUP BY a.Employee_Name, a.Employee_IdNo"
                    nr = cmd.ExecuteNonQuery()


                    'cmd.CommandText = "Update ReportTemp set Meters4 = (select a.Meters4 from ReportTempsub a where a.name1 = reporttemp.name1)"
                    'cmd.ExecuteNonQuery()


                    'cmd.CommandText = "Update ReportTemp  set Meters4 = a.Meters4 from ReportTempsub a where a.Int1 = ReportTemp.Int1"
                    'cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  , Int1  ,  Name1   ,   Currency1    ,   Meters1   ,   Meters2  ,   Currency2    ,   Currency3 ,    Currency4  ,    Currency5 ,   Currency6   ,    Currency7,    Currency8     ,  Meters3  ,    Currency9  ,   Currency10   ,  Currency11   ,   Currency12,   Weight1 ,   int2    , int3      , Weight2  ,  Name2   ,  Meters4   ,Meters5     ,Meters6       ,Meters7     ,Meters8  ,Meters9  ,Name5 ,Meters6, Meters11 , Meters12 from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_Simple1.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll salary register simple2", "payroll salary register simple3"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    'If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) <> "" Then
                    '    MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    '    If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                    '    Exit Sub
                    'End If
                    cmd.Connection = con


                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If


                    RptCondt_sub = RptCondt

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "e.Month_IdNo =" & Str(Val(Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "b.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then

                        Dim dttm1 As Date
                        Dim dttm2 As Date

                        Mth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)

                        dttm1 = New DateTime(IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate)), Mth_ID, 1)

                        dtp_FromDate.Text = dttm1

                        dttm2 = DateAdd("M", 1, dttm1)
                        dttm2 = DateAdd("d", -1, dttm2)

                        dtp_FromDate.Text = dttm1
                        dtp_ToDate.Text = dttm2


                    End If


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    'SALARY DETAILS
                    'LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo

                    cmd.CommandText = "Insert into ReportTemp( Date1          ,     Date2            , Date3           , Int1                ,  Name1           ,Name3              ,    Currency1  ,   Meters1               ,   Meters2       ,   Currency2    ,   Currency3 ,    Currency4    ,    Currency5 ,   Currency6           ,    Currency7                            ,    Currency8       ,  Meters3            ,    Currency9      ,   Currency10                                                        ,  Currency11    ,   Currency12,   Weight1           , Weight2         ,  Name5            ,  Weight3         ,Meters7     ,Meters8             ,Meters9        ,Name2     , Meters5  , Meters6                  ,  Meters11 , Meters12    ,  Weight4           ,Weight5         , Weight6         ,   Weight7         ) " &
                                "  Select                d.Salary_Date        ,    d.From_Date       , d.To_Date       ,a.Employee_IdNo      , b.Employee_Name  ,dh.Department_Name , a.Salary_Days , a.No_Of_Attendance_Days , a.Working_Hours , a.Basic_Salary , a.Ot_Hours  ,  a.Ot_Pay_Hours ,  a.Ot_Salary , a.Incentive_Amount    ,  (a.Opening_Advance + a.Salary_Pending) ,  a.Minus_Advance   , a.Minus_MainAdvance ,  a.Balance_Advance, a.Total_Addition +a.Basic_Salary + a.Ot_Salary +a.Incentive_Amount  ,  a.Mess        , a.Net_Pay   , a.Net_Pay_Amount    ,a.Salary_Days    ,c.Category_Name    ,a.Actual_Salary   ,A.Late_Mins ,A.Late_Hours_Salary , a.Net_Pay     ,     0    ,   0      ,  a.Week_Off_Allowance    ,     a.P_F ,   a.ESI     ,   a.Salary_Advance , Total_Advance  ,  Minus_Advance  ,   Balance_Advance   from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo = b.Employee_IdNo  INNER JOIN PayRoll_Salary_Head d ON a.Salary_Code = d.Salary_Code  LEFT OUTER JOIN Month_Head e ON e.Month_IdNo = month( d.Salary_Date ) LEFT OUTER JOIN PayRoll_Category_Head c ON b.Category_IdNo = c.Category_IdNo   LEFT OUTER JOIN Department_Head DH ON  B.Department_IdNo = DH.Department_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " d.Salary_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  , Date2  , Date3 , Int1  ,  Name1 ,Name3  ,   Currency1    ,   Meters1   ,   Meters2  ,   Currency2    ,   Currency3 ,    Currency4  ,    Currency5 ,   Currency6   ,    Currency7,    Currency8     ,  Meters3  ,    Currency9  ,   Currency10   ,  Currency11   ,   Currency12,   Weight1 ,   int2    , int3      , Weight2  ,  Name2   ,  Meters4   ,Meters5     ,Meters6       ,Meters7     ,Meters8  ,Meters9  ,Name5 ,Meters6, Meters11 , Meters12 ,Weight3 ,Weight4,Weight5,Weight6,Weight7 from reporttemp order by date1,date2,date3", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2,Currency7 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    If Trim(LCase(RptIpDet_ReportName)) = "payroll salary register simple3" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_Simple3.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_Simple_1117.rdlc"
                    End If


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll bonus register simple", "payroll bonus register summary"
                    'Payroll Addition Deduction Register

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    RptCondt_sub = RptCondt


                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If



                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    'SALARY DETAILS
                    'LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo

                    cmd.CommandText = "Insert into ReportTemp(  Name1           ,Date1             , Date2                ,Date3         ,Meters1       ,  Name16                    , Name17              ,  Name2   , Name3 ,    Name4 ,  Name5,    Name6  ,    Name7   ,    Name8 ,Name9 ,    Name10  ,  Name11  , Name12  ,  Name13 , Name14   ,    Name15 ,   Name18      ,Meters2 , Meters3 , Meters4 ,  Meters5 ,     Meters6 ,    Meters7 ,     Meters8 ,    Meters9    ,     Meters10 ,    Meters11    ,     Meters12 ,    Meters13    ,  Meters14 ,    Meters15    ,  Meters16    ,    Meters17  ,    Currency1  ,   Currency2           ,    Currency3  ,    Currency4       ,     Currency5      ) " &
                                      "  Select              a.Bonus_Code       ,a.Bonus_Date      , a.from_Date          ,a.to_date     , a.bonus_rate , P.Salary_Payment_Type_Name , C.Category_Name     , a.m1     , a.m2  ,  a.m3    ,  a.m4 , a.m5      ,  a.m6      ,  a.m7    , a.m8 ,  a.m9      , a.m10    ,  a.m11  , a.m12   , a.m13    ,a.M14      ,E.Employee_Name,b.m1    ,  b.m2   ,  b.m3   , b.m4     ,     b.m5    ,   b.m6     ,  b.m7       ,     b.m8      ,   b.m9       ,     b.m10      ,       b.m11  ,     b.m12      ,    b.m13  ,     b.m14      , b.tot_shifts ,b.tot_att     , b.Wage_Per_Day,  b.Total_Earnings     ,b.Bonus_Rate   ,  b.bonus_earned    ,  b.Bonus_Finalised " &
                                      " From Payroll_Bonus_Details b INNER JOIN PayRoll_Employee_Head E ON b.Employee_IdNo = E.Employee_IdNo  INNER JOIN PayRoll_Bonus_Head a ON a.Bonus_Code = b.bonus_Code  LEFT OUTER JOIN PayRoll_Category_Head c ON E.Category_IdNo = c.Category_IdNo  LEFT OUTER JOIN Payroll_Salary_Payment_Type_Head P ON E.Salary_Payment_Type_IdNo = P.Salary_Payment_Type_IdNo   LEFT OUTER JOIN Department_Head D ON  E.Department_IdNo = D.Department_IdNo " &
                                      " Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Bonus_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Name25 =  convert(varchar,Date2,103) + ' - ' + convert(varchar,Date3,103) "
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, * from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2,Currency7 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    If Trim(LCase(RptIpDet_ReportName)) = "payroll salary register simple3" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Salary_Register_Simple3.rdlc"
                    Else
                        If Trim(LCase(RptIpDet_ReportName)) = "payroll bonus register simple" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Bonus_Register_Simple_1117.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Bonus_Register_Summary_1117.rdlc"
                        End If
                    End If


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll addition deduction register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs3.Visible = True And cbo_Inputs3.Enabled = True And Trim(cbo_Inputs3.Text) = "" Then
                        MessageBox.Show("Invalid Payment Type", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs3.Enabled Then cbo_Inputs3.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    RptCondt = ""

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    RptCondt_sub = RptCondt


                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " E.Salary_Payment_Type_IdNo = " & Str(Val(Common_Procedures.Salary_PaymentType_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " E.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs4.Text)))
                    End If

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    'SALARY DETAILS
                    'LEFT OUTER JOIN PayRoll_Employee_Salary_Details ES ON a.Employee_IdNo = ES.Employee_IdNo

                    cmd.CommandText = "Insert into ReportTemp(  Name1                        ,Date1                          , Name2             , Currency1    ) " &
                                      "  Select              a.Employee_Deduction_Code       ,a.Employee_Deduction_Date      , E.Employee_Name    ,a.Mess       " &
                                      " From Payroll_Employee_Deduction_Head a INNER JOIN PayRoll_Employee_Head E ON a.Employee_IdNo = E.Employee_IdNo  " &
                                      " Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Deduction_Date between @fromdate and @todate"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, * from reporttemp", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2,Currency7 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath & "\Reports\Report_Payroll_Add_Ded_1117.rdlc")


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "payroll time missing register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = ""

                    Dim TmMs As String = ""
                    Dim arr() As String

                    cmd.CommandText = "select  a.* ,b.Employee_Name ,c.Category_Name from PayRoll_Employee_Attendance_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN PayRoll_Employee_Head B ON a.Employee_IdNo =b.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head C ON b.Category_IdNo =C.Category_IdNo where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "   a.Employee_Attendance_Date BETWEEN  @fromdate AND @todate  "
                    Da = New SqlClient.SqlDataAdapter(cmd)
                    Dtbl1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            If Not IsDBNull(Dt1.Rows(i).Item("In_Out_Timings")) Then

                                TmMs = Trim(Dt1.Rows(i).Item("In_Out_Timings"))

                                arr = Split(TmMs, ",")
                                If (UBound(arr)) Mod 2 = 0 Then

                                    cmd.Parameters.Clear()
                                    cmd.Parameters.AddWithValue("@attdate", dtp_FromDate.Value.Date)

                                    cmd.CommandText = "Insert into ReportTemp(Date1             ,Name1                                               ,   Name2                                         ,   Name3) " &
                                                                          "values(   @attdate       ,'" & Trim(Dt1.Rows(i).Item("Employee_Name")) & "'  , '" & Trim(Dt1.Rows(i).Item("Category_Name")) & "','" & Trim(Dt1.Rows(i).Item("In_Out_Timings")) & "' )"
                                    cmd.ExecuteNonQuery()

                                End If
                            End If
                        Next

                    End If
                    Dt1.Clear()



                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  ,Name1   ,   Name2  ,   Name3 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1, Date1, Name3,Weight1,Weight2, Name4, Name5,Name6 ,name7,currency1, currency2 from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Time_Missing_DateWise_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case Trim(LCase("Payroll OT Hours Register - DateWise"))

                    Call Payroll_OT_Hours_Register_DateWise()


                Case "payroll pf list register"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    If cbo_Inputs2.Visible = True And cbo_Inputs2.Enabled = True And Trim(cbo_Inputs2.Text) = "" Then
                        MessageBox.Show("Invalid Month", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs2.Enabled Then cbo_Inputs2.Focus()
                        Exit Sub
                    End If
                    cmd.Connection = con

                    RptCondt_sub = RptCondt






                    RptCondt = ""


                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        If RptCboDet(1).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs1.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(1).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " EH.Company_IdNo IN " & RptCboDet(1).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " EH.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                        End If
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        Dim dttm1 As Date
                        Dim dttm2 As Date

                        Mth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)

                        dttm1 = New DateTime(IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate)), Mth_ID, 1)

                        dtp_FromDate.Text = dttm1

                        dttm2 = DateAdd("M", 1, dttm1)
                        dttm2 = DateAdd("d", -1, dttm2)

                        dtp_FromDate.Text = dttm1
                        dtp_ToDate.Text = dttm2
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        If RptCboDet(3).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs3.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(3).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eh.Category_IdNo IN " & RptCboDet(3).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eh.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
                        End If
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        If RptCboDet(4).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs4.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(4).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eh.Department_IdNo IN " & RptCboDet(4).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & "eh.Department_IdNo = " & Str(Val(Common_Procedures.Department_NameToIdNo(con, cbo_Inputs4.Text)))
                        End If
                    End If
                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        If RptCboDet(5).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs5.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(5).MultiSelectedIdNos_ForInQuery) <> "" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eh.ESI_PF_Group_IdNo IN " & RptCboDet(5).MultiSelectedIdNos_ForInQuery
                        Else
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eh.ESI_PF_Group_IdNo = " & Str(Val(Common_Procedures.Esi_Pf_Group_NameToIdNo(con, cbo_Inputs5.Text)))
                        End If
                    End If


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()



                    cmd.CommandText = "Insert into ReportTemp( Name1 ,  Name2            ,     name7           , Name9              ) " &
                                           " Select    eh.Employee_Name  , dh.Department_Name ,   eh.Week_Off  ,    eh.Card_No    from PayRoll_Employee_Head eh LEFT OUTER JOIN Department_Head DH ON eh.Department_Idno = DH.Department_Idno LEFT OUTER JOIN Payroll_Category_Head CH ON eh.Category_Idno = CH.Category_Idno where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " eh.Employee_IdNo IN (SELECT z1.employee_idno from PayRoll_Employee_Attendance_Details z1 where z1.Employee_Attendance_Date between @fromdate and @todate and z1.No_Of_Shift <> 0 ) "
                    cmd.ExecuteNonQuery()



                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  , Int1  ,  Name1 ,Name3  ,   Currency1    ,   Meters1   ,   Meters2  ,   Currency2    ,   Currency3 ,    Currency4  ,    Currency5 ,   Currency6   ,    Currency7,    Currency8     ,  Meters3  ,    Currency9  ,   Currency10   ,  Currency11   ,   Currency12,   Weight1 ,   int2    , int3      , Weight2  ,  Name2   ,  Meters4   ,Meters5     ,Meters6       ,Meters7     ,Meters8  ,Meters9  ,Name5 ,Meters6, Meters11 , Meters12 ,Weight3 ,Weight4 ,name7, Name9 from reporttemp Order by Name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)
                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Int1, Name2, meters1,Meters3 , Date1, Name3,Weight1,Weight2, Name4,Meters4 , Name5,Name6 ,name7,currency1, currency2,Currency7,name7, name9  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1



                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Employee_PF_List_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                '=======GST RETURN REPORT =============

                'Case "inward supply - unregistered"

                '        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                '        RptHeading3 = ""

                '        If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '            Exit Sub
                '        End If
                '        If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '            Exit Sub
                '        End If

                '        cmd.Connection = con

                '        cmd.CommandText = "Truncate table ReportTemp"
                '        cmd.ExecuteNonQuery()
                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.Parameters.Clear()
                '        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '        RptCondt = CompCondt
                '        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '        End If




                '        cmd.CommandText = "Insert into ReportTemp(Name7                                , Name1         ,Meters1        ,  Date1           , Currency1           , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5             ,Currency6                                                        , Name5  ,Name6) " & _
                '                                  " Select    a.Purchase_No +cast(a.Sl_No as varchar)  ,a.Purchase_No  ,a.for_OrderBy  ,a.Purchase_Date   ,a.Taxable_Amount    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount        ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount  , ''     ,''  from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate and  LH.Ledger_GSTinNo =''  Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                '        cmd.ExecuteNonQuery()




                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,Meters1 , Date1  , Currency1 , Name2   , Name3  ,Name4 , Currency2 , Currency3 ,Currency4 , Currency5 ,Currency6 , Name5 ,Name6 ,Name7 from reporttemp Order by Date1, Meters1 ", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '        If Dtbl1.Rows.Count = 0 Then

                '            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '            cmd.ExecuteNonQuery()

                '            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '            Dtbl1 = New DataTable
                '            Da.Fill(Dtbl1)

                '        End If

                '        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '        RpDs1.Name = "DataSet1"
                '        RpDs1.Value = Dtbl1


                '        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register.rdlc"

                '    RptViewer.LocalReport.DataSources.Clear()

                '        RptViewer.LocalReport.DataSources.Add(RpDs1)

                '        RptViewer.LocalReport.Refresh()
                '        RptViewer.RefreshReport()

                '        RptViewer.Visible = True

                'Case "inward supply - registered", "inward supply - registered with partyname"

                '        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                '        RptHeading3 = ""

                '        If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '            Exit Sub
                '        End If
                '        If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '            Exit Sub
                '        End If

                '        cmd.Connection = con

                '        cmd.CommandText = "Truncate table ReportTemp"
                '        cmd.ExecuteNonQuery()
                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.Parameters.Clear()
                '        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '        RptCondt = CompCondt
                '        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '        End If

                '        If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then


                '        If Trim(cbo_Inputs2.Text) = "ALL" Then

                '            'PURCHASE 
                '            cmd.CommandText = "Insert into ReportTemp(Name7                                , Name9           , Name1                                                                              ,Meters1        ,  Date1           , Currency1       ,Name8         , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5             ,Currency6                                                        , Name5  ,Name6) " &
                '                                      " Select    a.Purchase_No +cast(a.Sl_No as varchar)  ,LH.Ledger_Name   ,(select sa.Bill_No from Purchase_Head sa Where sa.Purchase_Code = a.Purchase_Code)  ,a.for_OrderBy  ,a.Purchase_Date   ,a.Taxable_Amount ,A.HSN_Code    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount        ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount  , ''     ,''  from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                '            cmd.ExecuteNonQuery()

                '            ''PURCHASE RETURN 
                '            'cmd.CommandText = "Insert into ReportTemp(Name7                                             , Name1                  ,Name2                 , Meters1        ,Name6            ,  Date1                 , Currency1                                                          , Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5 ) " & _
                '            '                             " Select   a.Purchase_Return_No +cast(a.Sl_No as varchar)      ,  LH.ledger_GSTinNo     ,a.Purchase_Return_No  ,a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Return_Date  ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    ,sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''  from Purchase_Return_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Purchase_Return_Date, a.for_OrderBy, a.Purchase_Return_No, a.Company_IdNo"
                '            'cmd.ExecuteNonQuery()

                '        ElseIf Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then

                '            'PURCHASE 
                '            cmd.CommandText = "Insert into ReportTemp(Name7                                , Name9           , Name1                                                                              ,Meters1        ,  Date1           , Currency1       ,Name8         , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5             ,Currency6                                                        , Name5  ,Name6) " &
                '                                          " Select    a.Purchase_No +cast(a.Sl_No as varchar)  ,LH.Ledger_Name   ,(select sa.Bill_No from Purchase_Head sa Where sa.Purchase_Code = a.Purchase_Code)  ,a.for_OrderBy  ,a.Purchase_Date   ,a.Taxable_Amount ,A.HSN_Code    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount        ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount  , ''     ,''  from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate and  LH.Ledger_GSTinNo =''  Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                '            cmd.ExecuteNonQuery()

                '            ''PURCHASE RETURN 
                '            'cmd.CommandText = "Insert into ReportTemp(Name7                                             , Name1                  ,Name2                 , Meters1        ,Name6            ,  Date1                 , Currency1                                                          , Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5 ) " & _
                '            '                             " Select   a.Purchase_Return_No +cast(a.Sl_No as varchar)      ,  LH.ledger_GSTinNo     ,a.Purchase_Return_No  ,a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Return_Date  ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    ,sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''  from Purchase_Return_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Purchase_Return_Date, a.for_OrderBy, a.Purchase_Return_No, a.Company_IdNo"
                '            'cmd.ExecuteNonQuery()

                '        ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Then

                '            'PURCHASE 
                '            cmd.CommandText = "Insert into ReportTemp(Name7                                       ,Name9            ,  Name1                ,Name2                                                                               , Meters1        ,Name6            ,  Date1          , Currency1                                                          , Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5 ) " & _
                '                                              " Select   a.Purchase_No +cast(a.Sl_No as varchar)      , LH.ledger_Name  , LH.ledger_GSTinNo     ,(select sa.Bill_No from Purchase_Head sa Where sa.Purchase_Code = a.Purchase_Code)  ,a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Date  ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    ,sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''     from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()



                '                ''PURCHASE RETURN 
                '                'cmd.CommandText = "Insert into ReportTemp(Name7                                             , Name1                  ,Name2                 , Meters1        ,Name6            ,  Date1                 , Currency1                                                          , Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5 ) " & _
                '                '                             " Select   a.Purchase_Return_No +cast(a.Sl_No as varchar)      ,  LH.ledger_GSTinNo     ,a.Purchase_Return_No  ,a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Return_Date  ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    ,sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''  from Purchase_Return_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Purchase_Return_Date, a.for_OrderBy, a.Purchase_Return_No, a.Company_IdNo"
                '                'cmd.ExecuteNonQuery()

                '            End If

                '        End If


                '    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7   , Name1  ,Name2   , Meters1  ,  Date1  , Currency1 , Name3 , Name4   , Currency2 , Currency3  ,Currency4  , Currency5 ,Currency6 ,Currency7      , Name5 ,Name6 ,Name7 ,Name8 ,Name9   from reporttemp Order by Date1, Meters1 ", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '        If Dtbl1.Rows.Count = 0 Then

                '            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '            cmd.ExecuteNonQuery()

                '            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '            Dtbl1 = New DataTable
                '            Da.Fill(Dtbl1)

                '        End If

                '        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '        RpDs1.Name = "DataSet1"
                '        RpDs1.Value = Dtbl1

                '        If Trim(LCase(RptIpDet_ReportName)) = "inward supply - registered with partyname" Then

                '            If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register_With_PartyName.rdlc"
                '            Else
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Registered_Register_with_PartyName.rdlc"
                '            End If

                '        Else

                '            If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register.rdlc"
                '            Else
                '                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_registered_Register.rdlc"
                '            End If

                '        End If



                '        RptViewer.LocalReport.DataSources.Clear()

                '        RptViewer.LocalReport.DataSources.Add(RpDs1)

                '        RptViewer.LocalReport.Refresh()
                '        RptViewer.RefreshReport()

                '        RptViewer.Visible = True

                'Case "outward supply - unregistered"

                '        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                '        RptHeading3 = ""

                '        If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '            Exit Sub
                '        End If
                '        If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '            Exit Sub
                '        End If

                '        cmd.Connection = con

                '        cmd.CommandText = "Truncate table ReportTemp"
                '        cmd.ExecuteNonQuery()
                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.Parameters.Clear()
                '        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '        RptCondt = CompCondt
                '        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '        End If

                '        'Sales

                '        cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6        ) " & _
                '                                  " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  from Sales_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '        cmd.ExecuteNonQuery()

                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 ,Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 from reporttemp Order by Date1, Meters1 ", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '        If Dtbl1.Rows.Count = 0 Then

                '            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '            cmd.ExecuteNonQuery()

                '            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '            Dtbl1 = New DataTable
                '            Da.Fill(Dtbl1)

                '        End If

                '        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '        RpDs1.Name = "DataSet1"
                '        RpDs1.Value = Dtbl1


                '        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"



                '        RptViewer.LocalReport.DataSources.Clear()

                '        RptViewer.LocalReport.DataSources.Add(RpDs1)

                '        RptViewer.LocalReport.Refresh()
                '        RptViewer.RefreshReport()

                '        RptViewer.Visible = True

                'Case "outward supply - registered"

                '        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                '        RptHeading3 = ""

                '        If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '            Exit Sub
                '        End If
                '        If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '            Exit Sub
                '        End If

                '        cmd.Connection = con

                '        cmd.CommandText = "Truncate table ReportTemp"
                '        cmd.ExecuteNonQuery()
                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.Parameters.Clear()
                '        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '        RptCondt = CompCondt
                '        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '        End If

                '    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then

                '        If Trim(cbo_Inputs2.Text) = "ALL" Then

                '            cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6        ) " &
                '              " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount        from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '            cmd.ExecuteNonQuery()


                '            'Sales Return
                '            cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                 ) " &
                '                                  " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount          from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate   Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '            cmd.ExecuteNonQuery()

                '        ElseIf Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then

                '            ''Sales

                '            'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6     ,weight1         ,Name6       ) " & _
                '            '                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,sd.Noof_Items  , uh.unit_Name from Sales_GST_Tax_Details a LEFT OUTER JOIN Sales_Details sd ON a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '            'cmd.ExecuteNonQuery()

                '            ''Sales Return
                '            'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                           ,weight1         ,Name6      ) " & _
                '            '                          " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , sd.Noof_Items  , uh.unit_Name  from Sales_Return_GST_Tax_Details a LEFT OUTER JOIN SalesReturn_Details sd ON a.Sales_Return_Code = sd.SalesReturn_Code and a.HSN_Code =sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '            'cmd.ExecuteNonQuery()

                '            'Sales

                '            cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6        ) " &
                '                                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount        from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate and LH.Ledger_GSTinNo = '' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '            cmd.ExecuteNonQuery()


                '                'Sales Return
                '                cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                 ) " &
                '                                      " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount          from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()

                '            ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Then

                '                'Sales
                '                cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6        ) " &
                '                                      " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount        from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()


                '                'Sales Return
                '                cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                 ) " &
                '                                      " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount          from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()

                '            End If
                '        End If


                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 , Name5 ,Name6, Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 ,Weight1 from reporttemp Order by Date1, Meters1 ", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '        If Dtbl1.Rows.Count = 0 Then

                '            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '            cmd.ExecuteNonQuery()

                '            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '            Dtbl1 = New DataTable
                '            Da.Fill(Dtbl1)

                '        End If

                '        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '        RpDs1.Name = "DataSet1"
                '        RpDs1.Value = Dtbl1

                '        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"

                '        RptViewer.LocalReport.DataSources.Clear()

                '        RptViewer.LocalReport.DataSources.Add(RpDs1)

                '        RptViewer.LocalReport.Refresh()
                '        RptViewer.RefreshReport()

                '        RptViewer.Visible = True


                'Case "outward supply - registered with partyname"

                '        RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                '        RptHeading3 = ""

                '        If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                '            MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                '            Exit Sub
                '        End If
                '        If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                '            MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                '            If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                '            Exit Sub
                '        End If

                '        cmd.Connection = con

                '        cmd.CommandText = "Truncate table ReportTemp"
                '        cmd.ExecuteNonQuery()
                '        cmd.CommandText = "Truncate table ReportTempSub"
                '        cmd.ExecuteNonQuery()

                '        cmd.Parameters.Clear()
                '        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                '        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                '        RptCondt = CompCondt
                '        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                '            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                '        End If

                '        If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                '            If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then


                '                'Sales
                '                cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                   ,Currency1                                                           ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6      ,weight1                                                                                                                                                   ,Name6    ) " & _
                '                                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount+a.SGST_Amount + a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  ,(select sum(sd.Noof_Items) from Sales_Details sd where a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code group by  sd.Sales_CODE ,sd.HSN_Code )   ,(select top 1 uh.unit_Name from Sales_Details sd1 LEFT OUTER JOIN UNIT_HEAD UH ON sd1.unit_idno = uh.unit_idno   where a.Sales_CODE = sd1.Sales_CODE and a.HSN_Code = sd1.HSN_Code  )    from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()


                '                ''Sales
                '                'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6     ,weight1         ,Name6       ) " & _
                '                '                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,sd.Noof_Items  , uh.unit_Name from Sales_GST_Tax_Details a LEFT OUTER JOIN Sales_Details sd ON a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '                'cmd.ExecuteNonQuery()


                '                ''Sales Return
                '                'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                           ,weight1         ,Name6      ) " & _
                '                '                          " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , sd.Noof_Items  , uh.unit_Name  from Sales_Return_GST_Tax_Details a LEFT OUTER JOIN SalesReturn_Details sd ON a.Sales_Return_Code = sd.SalesReturn_Code and a.HSN_Code =sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '                'cmd.ExecuteNonQuery()

                '            ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Then

                '                ''Sales
                '                'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                                       ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6      ,weight1         ,Name6    ) " & _
                '                '                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  SUM(a.Taxable_Amount)+ SUM(a.CGST_Amount)+SUM(a.SGST_Amount) +SUM(a.IGST_Amount )   ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , SUM(a.Taxable_Amount)  , SUM(a.CGST_Amount)     ,SUM(a.SGST_Amount)     ,SUM(a.IGST_Amount)        ,SUM(sd.Noof_Items)  , uh.unit_Name  from Sales_GST_Tax_Details a  LEFT OUTER JOIN Sales_Details sd ON a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> ''  GROUP BY a.Sales_No ,a.Sl_No ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code    ,sh.State_Code ,sh.State_Name ,    a.CGST_Percentage , a.SGST_Percentage ,a.IGST_Percentage  , uh.unit_Name,a.Company_IdNo  Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '                'cmd.ExecuteNonQuery()



                '                'Sales
                '                cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                   ,Currency1                                                           ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6      ,weight1                                                                                                                                                   ,Name6    ) " & _
                '                                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount+a.SGST_Amount + a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  ,(select sum(sd.Noof_Items) from Sales_Details sd where a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code group by  sd.Sales_CODE ,sd.HSN_Code )   ,(select top 1 uh.unit_Name from Sales_Details sd1 LEFT OUTER JOIN UNIT_HEAD UH ON sd1.unit_idno = uh.unit_idno   where a.Sales_CODE = sd1.Sales_CODE and a.HSN_Code = sd1.HSN_Code  )    from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                '                cmd.ExecuteNonQuery()


                '                ''Sales Return
                '                'cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                    ,weight1         ,Name6) " & _
                '                '                          " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , sd.Noof_Items  , uh.unit_Name        from Sales_Return_GST_Tax_Details a LEFT OUTER JOIN SalesReturn_Details sd ON a.Sales_Return_Code = sd.SalesReturn_Code and a.HSN_Code =sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                '                'cmd.ExecuteNonQuery()

                '            End If
                '        End If


                '        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 , Name5 ,Name6, Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 ,Weight1 from reporttemp Order by Date1, Meters1 ", con)
                '        Dtbl1 = New DataTable
                '        Da.Fill(Dtbl1)

                '        If Dtbl1.Rows.Count = 0 Then

                '            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                '            cmd.ExecuteNonQuery()

                '            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                '            Dtbl1 = New DataTable
                '            Da.Fill(Dtbl1)

                '        End If

                '        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                '        RpDs1.Name = "DataSet1"
                '        RpDs1.Value = Dtbl1

                '        If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered with partyname" Then
                '            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_with_PartyName.rdlc"
                '        Else
                '            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"
                '        End If

                '        RptViewer.LocalReport.DataSources.Clear()

                '        RptViewer.LocalReport.DataSources.Add(RpDs1)

                '        RptViewer.LocalReport.Refresh()
                '        RptViewer.RefreshReport()

                '        RptViewer.Visible = True


                '=======GST RETURN REPORT =============

                Case "inward supply - unregistered"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If




                    cmd.CommandText = "Insert into ReportTemp(Name7                                , Name1         ,Meters1        ,  Date1           , Currency1           , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5             ,Currency6                                                        , Name5  ,Name6) " &
                                              " Select    a.Purchase_No +cast(a.Sl_No as varchar)  ,a.Purchase_No  ,a.for_OrderBy  ,a.Purchase_Date   ,a.Taxable_Amount    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount        ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount  , ''     ,''  from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate and  LH.Ledger_GSTinNo =''  Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()




                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,Meters1 , Date1  , Currency1 , Name2   , Name3  ,Name4 , Currency2 , Currency3 ,Currency4 , Currency5 ,Currency6 , Name5 ,Name6 ,Name7 from reporttemp Order by Date1, Meters1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "inward supply - registered", "inward supply - registered with partyname"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If



                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then

                        If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then

                            'PURCHASE 

                            If Common_Procedures.settings.CustomerCode = "1186" Then

                                cmd.CommandText = "Insert into ReportTemp(Name7                                , Name9           , Name1                                                                              ,Meters1        ,  Date1           , Currency1       ,Name8         , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5             ,Currency6                                                        , Name5  ,Name6   , Currency9) " &
                                                          " Select    a.Purchase_No +cast(a.Sl_No as varchar)  ,LH.Ledger_Name   ,(select sa.Bill_No from Purchase_Head sa Where sa.Purchase_Code = a.Purchase_Code)  ,a.for_OrderBy  ,a.Purchase_Date   ,a.Taxable_Amount ,A.HSN_Code    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount        ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount  , ''     ,''     , a.Sl_No from Purchase_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate and  (LH.Ledger_GSTinNo = '' or (a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount ) = 0 )  Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                                cmd.CommandText = "Insert into ReportTemp ( Name10                 , Name7            ,    Name9        ,    Name1   ,    Meters1     ,    Date1         ,     Currency1     ,   Currency8   ,   Name8  , Name2                              , Name3       ,Name4      , Currency2 , Currency3       ,Currency4      , Currency5      ,       Currency6                                                                                                                                                   , Name5  ,Name6    ,Currency9) " &
                                                         " Select    'PURCHASE-'+tA.Purchase_Code , tA.Purchase_Code  , LH.Ledger_Name  , tA.Bill_No , tA.for_OrderBy , tA.Purchase_Date , tA.Net_Amount , tA.Net_Amount     , ''       ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , 0         , tA.CGST_Amount   ,tA.SGST_Amount  ,  tA.IGST_Amount  , (CASE WHEN (tA.CGST_Amount + tA.SGST_Amount+ tA.IGST_Amount) = 0  then tA.Net_Amount else (tA.Gross_Amount + tA.CGST_Amount + tA.SGST_Amount+ tA.IGST_Amount) end),  ''     ,''  ,1   from Purchase_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 AND tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head LH ON tA.Ledger_IdNo <> 0 and LH.Ledger_IdNo = tA.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tA.Purchase_Date between @fromdate and @todate and  (LH.Ledger_GSTinNo = '' or (tA.CGST_Amount + tA.SGST_Amount+ tA.IGST_Amount ) = 0 )  and tA.Purchase_Code NOT IN (select sq1.Purchase_Code from Purchase_GST_Tax_Details sq1 )  "
                                nr = cmd.ExecuteNonQuery()

                            Else


                                cmd.CommandText = "Insert into ReportTemp ( Name10                 , Name7                                                                                        ,    Name9        ,    Name1   ,    Meters1     ,    Date1         ,     Currency1     ,   Currency8   ,   Name8         , Name2                              , Name3       ,Name4      , Currency2                                                                                                                                                            , Currency3       ,Currency4      , Currency5      ,       Currency6                                                                                                                                                   , Name5   ,Name6    ,Currency9 ) " &
                                                      " Select    'PURCHASE-'+tA.Purchase_Code , tA.Purchase_Code + (case when a.Sl_No IS NOT NULL then cast(a.Sl_No as varchar) else '' end ), LH.Ledger_Name  , tA.Bill_No , tA.for_OrderBy , tA.Purchase_Date , tA.Net_Amount , tA.Net_Amount , a.HSN_Code    ,sh.State_Code + '-'+ sh.State_Name  , 'PURCHASE'  ,'Taxable'  , (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     , a.CGST_Amount   ,a.SGST_Amount  ,  A.IGST_Amount  , (CASE WHEN (tA.CGST_Amount + tA.SGST_Amount+ tA.IGST_Amount) = 0  then tA.Net_Amount else (a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount) end)          ,  ''     ,''       , a.Sl_No  from Purchase_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 AND tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Purchase_GST_Tax_Details a ON a.Purchase_Code = tA.Purchase_Code LEFT OUTER JOIN Ledger_Head LH ON tA.Ledger_IdNo <> 0 and LH.Ledger_IdNo = tA.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tA.Purchase_Date between @fromdate and @todate and  (LH.Ledger_GSTinNo = '' or (a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount ) = 0 ) "
                                cmd.ExecuteNonQuery()

                            End If




                            'Other Purchase New

                            cmd.CommandText = "Insert into ReportTemp(Name10                                          ,  Name7                                                                ,    Name8       ,   Name1               ,   Meters1     ,   Date1                , Currency1     , Currency8     ,    Name2                              , Name4      , Currency2                                                                                                           , Currency3            ,Currency4       , Currency5       ,Currency6        ,Currency7      , Name5   ,Currency9 ) " &
                                                     " Select   'GSTOTHERPURC-'+tA.Other_GST_Entry_Reference_Code , 'GSPUR-'+a.Other_GST_Entry_Reference_Code + cast(a.Sl_No as varchar)  , LH.Ledger_Name , a.Other_GST_Entry_No  , a.for_OrderBy , a.Other_GST_Entry_Date , tA.Net_Amount , tA.Net_Amount , sh.State_Code + '-'+ sh.State_Name    ,  'Taxable' , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )           ,  a.Taxable_Amount    ,  a.CGST_Amount ,  a.SGST_Amount  ,  a.IGST_Amount  ,   0           ,''            ,a.Sl_No   from  Other_GST_Entry_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 and tA.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Other_GST_Entry_Tax_Details a ON a.Other_GST_Entry_Reference_Code = tA.Other_GST_Entry_Reference_Code LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tA.Other_GST_Entry_Date between @fromdate and @todate and  (LH.Ledger_GSTinNo = '' or (a.CGST_Amount + a.SGST_Amount+ A.IGST_Amount ) = 0 )  and tA.Other_GST_Entry_Reference_Code like 'GSPUR-%' "
                            cmd.ExecuteNonQuery()



                            'cmd.CommandText = "Insert into ReportTemp(Name7                                                       ,Name8          ,Name1                   , Meters1        ,  Date1                , Currency1                                                             , Name2                              , Name4      , Currency2                                                                                                           , Currency3            ,Currency4       , Currency5       ,Currency6        ,Currency7      , Name5 ) " & _
                            '                             " Select   'GSPUR-'+a.Other_GST_Entry_No  + cast(a.Sl_No as varchar)     ,LH.Ledger_Name ,a.Other_GST_Entry_No    ,a.for_OrderBy   ,a.Other_GST_Entry_Date ,a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount      ,sh.State_Code + '-'+ sh.State_Name    ,  'Taxable' , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )           ,  a.Taxable_Amount    ,  a.CGST_Amount ,  a.SGST_Amount  ,  a.IGST_Amount  ,   0           ,''  from  Other_GST_Entry_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo = '' and Other_GST_Entry_Reference_Code like 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                            'cmd.ExecuteNonQuery()

                        ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Then

                            'PURCHASE 

                            cmd.CommandText = "Insert into ReportTemp(Name10                      ,    Name7                                   ,    Name9       ,    Name1          ,    Name2   ,   Meters1        ,Name6            ,  Date1        ,    Currency1  ,    Currency8  ,    Name3                            , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3            ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5 , Currency9) " &
                                                          " Select   'PURCHASE-'+tA.Purchase_Code , tA.Purchase_Code +cast(a.Sl_No as varchar) , LH.ledger_Name , LH.ledger_GSTinNo , tA.Bill_No , a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Date , tA.Net_Amount , tA.Net_Amount , sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''     , a.Sl_No from Purchase_Head tA INNER JOIN Purchase_GST_Tax_Details a ON a.Purchase_Code = tA.Purchase_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                            cmd.CommandText = "Insert into ReportTemp(Name10                                        ,    Name7                                                     ,    Name9       ,    Name1          ,    Name2   ,   Meters1        ,Name6            ,  Date1               ,    Currency1  ,    Currency8  ,    Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5   , Currency9) " &
                                                          " Select   'JOBWORK-'+tA. Embroidery_Jobwork_Invoice_Code , tA.Embroidery_Jobwork_Invoice_Code +cast(a.Sl_No as varchar) , LH.ledger_Name , LH.ledger_GSTinNo , tA.Bill_No , a.for_OrderBy   , A.HSN_Code      ,a.Jobwork_Invoice_Date , tA.Net_Amount , tA.Net_Amount , sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''        , a.Sl_No  from Embroidery_Jobwork_Invoice_Head tA INNER JOIN Jobwork_Invoice_GST_Tax_Details a ON a.Jobwork_Invoice_Code = tA.Embroidery_Jobwork_Invoice_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Jobwork_Invoice_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Jobwork_Invoice_Date, a.for_OrderBy, a.Jobwork_Invoice_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                            If Common_Procedures.settings.CustomerCode = "1068" Then

                                'Other Purchase New
                                cmd.CommandText = "Insert into ReportTemp(Name10                                          ,  Name7                                                                  ,    Name1              ,Name9          , Name2                 ,  Meters1        ,  Date1                , Name3             ,  Name4                                                                         , Currency1     ,  Currency8   ,              Currency2                                                                                     ,   Currency3      ,   Currency4   ,   Currency5    ,   Currency6          Currency9) " &
                                                        " Select        'GSTOTHERPURC-'+tA.Other_GST_Entry_Reference_Code , 'GSPUR-'+ tA.Other_GST_Entry_Reference_Code  + cast(a.Sl_No as varchar) , LH.ledger_GSTinNo  ,LH.ledger_Name ,ta.Bill_no,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code                     ,(CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ),  tA.Net_Amount, tA.Net_Amount, (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )  , a.Taxable_Amount , a.CGST_Amount , a.SGST_Amount  , a.IGST_Amount ,a.Sl_No  from  Other_GST_Entry_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 and tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Other_GST_Entry_Tax_Details a ON a.Other_GST_Entry_Reference_Code = tA.Other_GST_Entry_Reference_Code LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo <> '' and tA.Other_GST_Entry_Reference_Code like 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            Else

                                'Other Purchase New
                                cmd.CommandText = "Insert into ReportTemp(Name10                                          ,  Name7                                                                        ,    Name1          ,Name9          , Name2                 ,Name3                                ,  Meters1        ,  Date1                , Name6             ,  Name4                                                                                                                , Currency1     ,  Currency8   ,              Currency2                                                                                     ,   Currency3      ,   Currency4   ,   Currency5    ,   Currency6        , Currency9) " &
                                                        " Select        'GSTOTHERPURC-'+tA.Other_GST_Entry_Reference_Code , 'GSPUR-'+ tA.Other_GST_Entry_Reference_Code  + cast(a.Sl_No as varchar)       ,LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_RefNo,sh.State_Code + '-'+ sh.State_Name   ,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  )   ,  tA.Net_Amount, tA.Net_Amount, (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )  , a.Taxable_Amount , a.CGST_Amount , a.SGST_Amount  , a.IGST_Amount  from , a.Sl_No   Other_GST_Entry_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 and tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Other_GST_Entry_Tax_Details a ON a.Other_GST_Entry_Reference_Code = tA.Other_GST_Entry_Reference_Code LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo <> '' and tA.Other_GST_Entry_Reference_Code like 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            End If

                        ElseIf Trim(cbo_Inputs2.Text) = "ALL" Then

                            'PURCHASE 
                            cmd.CommandText = "Insert into ReportTemp(Name10                      ,    Name7                                   ,    Name9       ,    Name1          ,    Name2   ,   Meters1        ,Name6            ,  Date1        ,    Currency1  ,    Currency8  ,    Name3                              , Name4                                                                                                              , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5    ,Currency9) " &
                                                          " Select   'PURCHASE-'+tA.Purchase_Code , tA.Purchase_Code +cast(a.Sl_No as varchar) , LH.ledger_Name , LH.ledger_GSTinNo , tA.Bill_No , a.for_OrderBy   , A.HSN_Code      ,a.Purchase_Date , tA.Net_Amount , tA.Net_Amount , sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''          ,a.Sl_No  from Purchase_Head tA INNER JOIN Purchase_GST_Tax_Details a ON a.Purchase_Code = tA.Purchase_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Purchase_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Purchase_Date, a.for_OrderBy, a.Purchase_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                            cmd.CommandText = "Insert into ReportTemp(Name10                                        ,    Name7                                                     ,    Name9       ,    Name1          ,    Name2   ,   Meters1        ,Name6            ,  Date1                ,    Currency1  ,    Currency8  ,    Name3                           , Name4                                                                                                                    , Currency2                                                                                                                                                             , Currency3           ,Currency4       , Currency5     ,Currency6       ,Currency7      , Name5    , Currency9) " &
                                                          " Select   'JOBWORK-'+tA. Embroidery_Jobwork_Invoice_Code , tA.Embroidery_Jobwork_Invoice_Code +cast(a.Sl_No as varchar) , LH.ledger_Name , LH.ledger_GSTinNo , tA.Bill_No , a.for_OrderBy    , A.HSN_Code       ,a.Jobwork_Invoice_Date  , tA.Net_Amount  , tA.Net_Amount  , sh.State_Code + '-'+ sh.State_Name  ,  (CASE WHEN  a.CGST_Amount <> 0 AND a.SGST_Amount <> 0 THEN 'CGST + SGST' WHEN a.IGST_Amount <> 0 THEN 'IGST' END  ), (CASE WHEN A.IGST_Percentage <> 0 THEN A.IGST_Percentage WHEN A.CGST_Percentage <> 0 AND A.SGST_Percentage <> 0 THEN A.CGST_Percentage + A.SGST_Percentage END  )     ,  a.Taxable_Amount   ,  a.CGST_Amount ,a.SGST_Amount  ,  A.IGST_Amount ,   0           ,''        ,a.Sl_No from Embroidery_Jobwork_Invoice_Head tA INNER JOIN Jobwork_Invoice_GST_Tax_Details a ON a.Jobwork_Invoice_Code = tA.Embroidery_Jobwork_Invoice_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo   LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Jobwork_Invoice_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <>'' Order by a.Jobwork_Invoice_Date, a.for_OrderBy, a.Jobwork_Invoice_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()


                            If Common_Procedures.settings.CustomerCode = "1068" Then

                                'Other Purchase New
                                cmd.CommandText = "Insert into ReportTemp(Name10                                          ,  Name7                                                                  ,    Name1              ,Name8          , Name2                 ,  Meters1        ,  Date1                , Name3             ,  Name4                                                                         , Currency1     ,  Currency8   ,              Currency2                                                                                     ,   Currency3      ,   Currency4   ,   Currency5    ,   Currency6        ,Currency9 ) " &
                                                        " Select        'GSTOTHERPURC-'+tA.Other_GST_Entry_Reference_Code , 'GSPUR-'+ tA.Other_GST_Entry_Reference_Code  + cast(a.Sl_No as varchar) , LH.ledger_GSTinNo  ,LH.ledger_Name ,ta.Bill_no,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )   ,  tA.Net_Amount, tA.Net_Amount, (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )  , a.Taxable_Amount , a.CGST_Amount , a.SGST_Amount  , a.IGST_Amount  ,a.Sl_No  from  Other_GST_Entry_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 and tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Other_GST_Entry_Tax_Details a ON a.Other_GST_Entry_Reference_Code = tA.Other_GST_Entry_Reference_Code LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo <> '' and tA.Other_GST_Entry_Reference_Code like 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            Else
                                'Other Purchase New
                                cmd.CommandText = "Insert into ReportTemp(Name10                                          ,  Name7                                                                  ,    Name1              ,Name8          , Name2                 ,  Meters1        ,  Date1                , Name3             ,  Name4                                                                         , Currency1     ,  Currency8   ,              Currency2                                                                                     ,   Currency3      ,   Currency4   ,   Currency5    ,   Currency6        ,Currency9) " &
                                                        " Select        'GSTOTHERPURC-'+tA.Other_GST_Entry_Reference_Code , 'GSPUR-'+ tA.Other_GST_Entry_Reference_Code  + cast(a.Sl_No as varchar) , LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_RefNo,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )   ,  tA.Net_Amount, tA.Net_Amount, (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )  , a.Taxable_Amount , a.CGST_Amount , a.SGST_Amount  , a.IGST_Amount  ,a.Sl_No  from  Other_GST_Entry_Head tA INNER JOIN Company_Head tZ ON tA.Company_IdNo <> 0 and tA.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Other_GST_Entry_Tax_Details a ON a.Other_GST_Entry_Reference_Code = tA.Other_GST_Entry_Reference_Code LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo <> '' and tA.Other_GST_Entry_Reference_Code like 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            End If


                        End If

                    End If



                    vEntCode = ""
                    Da = New SqlClient.SqlDataAdapter("Select * from ReportTemp Order by Date1, Meters1, Name10, Name7, Name2 ", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            If Trim(UCase(vEntCode)) = Trim(UCase(Dt1.Rows(i).Item("Name10").ToString)) Then
                                cmd.CommandText = "Update ReportTemp set Currency8 = 0  Where Name10 = '" & Trim(Dt1.Rows(i).Item("Name10").ToString) & "' and Name7 = '" & Trim(Dt1.Rows(i).Item("Name7").ToString) & "' and AutoSlNo = " & Str(Val(Dt1.Rows(i).Item("AutoSlNo").ToString))
                                cmd.ExecuteNonQuery()
                            End If

                            vEntCode = Trim(Dt1.Rows(i).Item("Name10").ToString)

                        Next i
                    End If
                    Dt1.Clear()

                    cmd.CommandText = "Update ReportTemp SET CURRENCY9 =0 where CURRENCY9 is null"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency1 = 0 where CURRENCY9 > 1"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1   , Name2   , Meters1  ,  Date1  , Currency1 , Name3 , Name4   , Currency2 , Currency3  ,Currency4  , Currency5 ,Currency6 ,Currency7, Currency8, Name5 ,Name6 ,Name7 ,Name8 ,Name9 ,Name10   from reporttemp Order by Date1, Meters1, Name10, Name7, Name2 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7   , Name1  ,Name2   , Meters1  ,  Date1  , Currency1 , Name3 , Name4   , Currency2 , Currency3  ,Currency4  , Currency5 ,Currency6 ,Currency7, Currency8, Name5 ,Name6 ,Name7 ,Name8 ,Name9 ,Name10     from reporttemp Order by Date1, Meters1, Name10, Name7 ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "inward supply - registered with partyname" Then

                        If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register_With_PartyName.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Registered_Register_with_PartyName.rdlc"
                        End If

                    Else

                        If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_Unregistered_Register.rdlc"
                        Else
                            RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR2_Inward_registered_Register.rdlc"
                        End If

                    End If



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "outward supply - unregistered"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    'Sales

                    cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6        ) " &
                                              " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  from Sales_GST_Tax_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 ,Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 from reporttemp Order by Date1, Meters1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "outward supply - registered", "outward supply - registered statewise", "outward supply - registered With partyname", "outward supply - registered with partyname"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES Not SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES Not SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    'If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                    'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " lh.State_IdNo = " & Str(Val(Common_Procedures.State_NameToIdNo(con, cbo_Inputs2.Text)))
                    'End If
                    '--HsnCodewise Total Quantity Sales

                    'cmd.CommandText = "Truncate table EntryTemp_Simple "
                    'cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into EntryTemp_Simple (Name1, Name2, Weight1) Select from Sales_Code, HSN_Code, sum(Noof_Items) Sales_Details group by Sales_Code, HSN_Code having sum(Noof_Items) <> 0"
                    'cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Truncate table EntryTempSub "
                    'cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into EntryTempSub (   Name1   , Name2 ,  Name3 ,       Weight1 ,     Currency1      ,        Currency2   ,       Currency3   ,       Currency4    ) " & _
                    '                    "          Select         a.HSN_Code,   ''  ,   ''   , sum(b.Weight1), sum(Taxable_Amount),  sum(a.CGST_Amount), sum(a.SGST_Amount), sum(a.IGST_Amount)  from Sales_GST_Tax_Details a INNER JOIN EntryTemp_Simple tE ON a.Sales_Code = tE.Name1"
                    'cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update EntryTempSub set Name2 = ( select top 1 ItemGroup_Name from ItemGroup_Head where Item_HSN_Code = EntryTempSub..Name1 ) "
                    'cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Update EntryTempSub set Name3 = ( select top 1 b.Unit_Name ItemGroup_Head a, Item_Head b, Unit_Head c where a.Item_HSN_Code = EntryTempSub..Name1 and a.ItemGroup_IdNo = b.ItemGroup_IdNo and b.Item_IdNo = c.Item_IdNo ) "
                    'cmd.ExecuteNonQuery()

                    Dim vSALE_BILLNO As String = ""

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then '---UNITED WEAVES
                        vSALE_BILLNO = "(CASE WHEN b.Electronic_Reference_No <> '' THEN b.Electronic_Reference_No  ELSE a.Sales_No END)"
                    Else
                        vSALE_BILLNO = "a.Sales_No"
                    End If

                    If (cbo_Inputs2.Visible = True) Then
                        'If (cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "") Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then

                        If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                            'If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then

                            Dim vReg_UnReg_Condt As String = ""
                            If Trim(LCase(RptIpDet_ReportName)) <> "outward supply - registered statewise" Then
                                vReg_UnReg_Condt = " and LH.Ledger_GSTinNo = ''"
                            End If

                            'Sales
                            cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2                 ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6   , Currency7   ) " &
                                                      " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount) from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate and LH.Ledger_GSTinNo = '' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            '" Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount) from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate " & vReg_UnReg_Condt & " Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()


                            'Sales Return
                            cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                    ,Currency7) " &
                                                      " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)        from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate   and LH.Ledger_GSTinNo = ''  Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            '" Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)        from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate   " & vReg_UnReg_Condt & "  Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()


                            'Other Sales New
                            cmd.CommandText = "Insert into ReportTemp(Name7                                                   ,Name1              ,Name8          , Name2                ,Meters1        ,  Date1                , Name3             ,  Name4                                                                         ,Currency1                                                           ,  Currency2                                                                                                    , Currency3          , Currency4         , Currency5        ,Currency6       , Currency7 ) " &
                                                    " Select        'GSSAL-'+a.Other_GST_Entry_No  + cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_No ,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )     , a.Taxable_Amount    , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,  (a.CGST_Amount + a.SGST_Amount + a.IGST_Amount) from Other_GST_Entry_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and Other_GST_Entry_Reference_Code like 'GSSAL-%'  and LH.Ledger_GSTinNo = '' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                            '" Select        'GSSAL-'+a.Other_GST_Entry_No  + cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_No ,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )     , a.Taxable_Amount    , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,  (a.CGST_Amount + a.SGST_Amount + a.IGST_Amount) from Other_GST_Entry_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and Other_GST_Entry_Reference_Code like 'GSSAL-%'  " & vReg_UnReg_Condt & " Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                        ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then
                            '                        ElseIf Trim(CBO_INPUTS2.Text) = "REGISTERED" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then

                            'Sales
                            cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1        , Name2                      ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6   ,    Currency7  ) " &
                                                      " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & ",a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)  from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()


                            'Sales Return
                            cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                   , Currency7 ) " &
                                                      " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,(a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)   from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                            'Other Sales New
                            cmd.CommandText = "Insert into ReportTemp(Name7                                                   ,Name1              ,Name8          , Name2                ,Meters1        ,  Date1                , Name3             ,  Name4                                                                         ,Currency1                                                           ,  Currency2                                                                                                    , Currency3          , Currency4         , Currency5        ,Currency6       ,  Currency7 ) " &
                                                    " Select        'GSSAL-'+a.Other_GST_Entry_No  + cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_No ,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )     , a.Taxable_Amount    , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a.SGST_Amount + a.IGST_Amount)  from Other_GST_Entry_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and LH.Ledger_GSTinNo <> '' and Other_GST_Entry_Reference_Code like 'GSSAL-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                            nr = cmd.ExecuteNonQuery()


                        ElseIf Trim(cbo_Inputs2.Text) = "ALL" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then
                            '                        ElseIf Trim(CBO_INPUTS2.Text) = "REGISTERED" Or Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then

                            'Sales
                            cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1        , Name2                      ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6   ,    Currency7  ) " &
                                                      " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & ",a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)       from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()


                            'Sales Return
                            cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                   , Currency7 ) " &
                                                      " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,(a.CGST_Amount + a. SGST_Amount + a.IGST_Amount)         from Sales_Return_GST_Tax_Details a   INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                            'Other Sales New
                            cmd.CommandText = "Insert into ReportTemp(Name7                                                   ,Name1              ,Name8          , Name2                ,Meters1        ,  Date1                , Name3             ,  Name4                                                                         ,Currency1                                                           ,  Currency2                                                                                                    , Currency3          , Currency4         , Currency5        ,Currency6       ,  Currency7 ) " &
                                                    " Select        'GSSAL-'+a.Other_GST_Entry_No  + cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,LH.ledger_Name ,a.Other_GST_Entry_No ,a.for_OrderBy   ,a.Other_GST_Entry_Date , a.HSN_SAC_Code    ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount +a.IGST_Amount    , (case when a.IGST_Percentage <> 0 then a.IGST_Percentage else a.CGST_Percentage + a.SGST_Percentage end )     , a.Taxable_Amount    , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount , (a.CGST_Amount + a.SGST_Amount + a.IGST_Amount)  from Other_GST_Entry_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_Idno = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and Other_GST_Entry_Reference_Code like 'GSSAL-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                            cmd.ExecuteNonQuery()

                        End If

                    End If

                    If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then

                        cmd.CommandText = "Insert into ReportTempSub(    Name4    ,   Currency2  ,    Currency3    ,  Currency4    , Currency5   , Currency6   , Currency7  ) " &
                                                             " Select   a.Name4   , a.Currency2  ,    sum(a.Currency3)  ,  sum(a. Currency4) , sum(a. Currency5), sum(a. Currency6), sum(a. Currency7)    from ReportTemp a Group By a.Name4, a.Currency2   "
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Truncate table ReportTemp"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into ReportTemp(    Name4    ,   Currency2  ,    Currency3    ,  Currency4    , Currency5   , Currency6   , Currency7  ) " &
                                                            " Select   a.Name4   , a.Currency2  ,    sum(a.Currency3)  ,  sum(a. Currency4) , sum(a. Currency5), sum(a. Currency6), sum(a. Currency7)    from ReportTempSub a Group By a.Name4, a.Currency2   "
                        cmd.ExecuteNonQuery()
                    End If

                    Dim vOrdBYFlds As String = ""
                    If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered statewise" Then
                        vOrdBYFlds = "Name4, Currency2,  "
                    End If

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 , Name5 ,Name6, Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 ,Currency7, Weight1 from reporttemp Order by " & vOrdBYFlds & " Date1, Meters1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered with partyname" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_with_PartyName.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register_Statewise.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True



                Case "outward supply - registered gstwise"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    Dim vSALE_BILLNO As String = ""

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then '---UNITED WEAVES
                        vSALE_BILLNO = "(CASE WHEN B.Electronic_Reference_No <> '' THEN B.Electronic_Reference_No  ELSE a.Sales_No END)"
                    Else
                        vSALE_BILLNO = "a.Sales_No"
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then


                            If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered gstwise" Then
                                'Sales

                                cmd.CommandText = "Insert into ReportTemp  (Name8        ,  Name7                               , Name6  , Name5          , Name1             , Name2                     ,   Meters1     ,  Date1       , Name3             ,  Name4                                                                         ,    Currency1  ,                     Currency2                                                                      , Currency3                                                                                  , Currency4                                                                                 ,       Currency5                                                                        ,    Currency6                                                                              ,  Currency7                                                                             ,     Currency8                                                                              ,                                                     Currency9                          ,             Weight1                                                      , Weight2                                                                              ,      Weight3                                                                              , Weight4                                                                       ,  Weight5                                                                              ,    Weight6                                                                        ,  Weight7                                                                                ,                                                             Weight8                  ) " &
                                                          " Select          a.Sales_Code, a.Sales_Code+cast(a.Sl_No as varchar) ,'Sales' ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  b.Net_Amount ,      (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 2.50 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 2.50 then a.SGST_Percentage end)  , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 6 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 6 then a.SGST_Percentage end)  , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 9 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 9 then a.SGST_Percentage end) , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 14 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 14 then a.SGST_Percentage end), (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 2.50 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 2.50 then a.SGST_Amount end), (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 6 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 6 then a.SGST_Amount end), (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 9 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 9 then a.SGST_Amount end),  (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 14 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 14 then a.SGST_Amount end) from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            Else

                                cmd.CommandText = "Insert into ReportTemp(Name8                         ,Name7                         ,Name5               , Name1        , Name2                       ,Meters1        ,  Date1       , Name3             ,  Name4                                                        ,    Currency1  ,    Currency7  ,                   Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6      ,weight1                                                                                                                                                   , Name6                                                                                                                  ) " &
                                                          " Select  a.Sales_Code, a.Sales_Code+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  b.Net_Amount ,  b.Net_Amount ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  ,(select sum(sd.Noof_Items) from Sales_Details sd where a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code group by  sd.Sales_CODE ,sd.HSN_Code )   ,(select top 1 uh.unit_Name from Sales_Details sd1 LEFT OUTER JOIN UNIT_HEAD UH ON sd1.unit_idno = uh.unit_idno   where a.Sales_CODE = sd1.Sales_CODE and a.HSN_Code = sd1.HSN_Code  )  from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()

                            End If

                            ''Sales
                            'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6     ,weight1         ,Name6       ) " & _
                            '                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount ,sd.Noof_Items  , uh.unit_Name from Sales_GST_Tax_Details a LEFT OUTER JOIN Sales_Details sd ON a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo ='' Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            'cmd.ExecuteNonQuery()


                            ''Sales Return
                            'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                           ,weight1         ,Name6      ) " & _
                            '                          " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , sd.Noof_Items  , uh.unit_Name  from Sales_Return_GST_Tax_Details a LEFT OUTER JOIN SalesReturn_Details sd ON a.Sales_Return_Code = sd.SalesReturn_Code and a.HSN_Code =sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo = '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            'cmd.ExecuteNonQuery()

                        ElseIf Trim(cbo_Inputs2.Text) = "REGISTERED" Then

                            ''Sales
                            'cmd.CommandText = "Insert into ReportTemp(Name7                         ,Name5               , Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                                       ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6      ,weight1         ,Name6    ) " & _
                            '                          " Select  a.Sales_No+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  SUM(a.Taxable_Amount)+ SUM(a.CGST_Amount)+SUM(a.SGST_Amount) +SUM(a.IGST_Amount )   ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , SUM(a.Taxable_Amount)  , SUM(a.CGST_Amount)     ,SUM(a.SGST_Amount)     ,SUM(a.IGST_Amount)        ,SUM(sd.Noof_Items)  , uh.unit_Name  from Sales_GST_Tax_Details a  LEFT OUTER JOIN Sales_Details sd ON a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo  LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> ''  GROUP BY a.Sales_No ,a.Sl_No ,LH.ledger_Name ,LH.ledger_GSTinNo  ,a.Sales_No ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code    ,sh.State_Code ,sh.State_Name ,    a.CGST_Percentage , a.SGST_Percentage ,a.IGST_Percentage  , uh.unit_Name,a.Company_IdNo  Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                            'cmd.ExecuteNonQuery()
                            If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered gstwise" Then


                                cmd.CommandText = "Insert into ReportTemp(Name8                         ,Name7          ,   Name5       ,   Name1           , Name2                     ,Name6   , Meters1        ,  Date1       , Name3             ,  Name4                                                    ,    Currency1  ,                     Currency2                                                                      , Currency3                                                                                  , Currency4                                                                                 ,       Currency5                                                                           ,    Currency6                                                                              ,  Currency7                                                                             ,     Currency8                                                                              ,                                                     Currency9                                        ,            Weight1                                                      , Weight2                                                                              ,      Weight3                                                                              , Weight4                                                                       ,  Weight5                                                                              ,    Weight6                                                                        ,  Weight7                                                                                ,                                                             Weight8                  ) " &
                                                          " Select  a.Sales_Code, a.Sales_Code+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,'Sales' ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end ) ,   b.Net_Amount ,      (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 2.50 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 2.50 then a.SGST_Percentage end)  , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 6 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 6 then a.SGST_Percentage end)  , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 9 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 9 then a.SGST_Percentage end) , (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 14 then a.CGST_Percentage end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 14 then a.SGST_Percentage end),(case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 2.50 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 2.50 then a.SGST_Amount end), (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 6 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 6 then a.SGST_Amount end), (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 9 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 9 then a.SGST_Amount end),  (case when a.CGST_Percentage <> 0 and a.CGST_Percentage = 14 then a.CGST_Amount end)   ,(case when a.SGST_Percentage <> 0 and a.SGST_Percentage = 14 then a.SGST_Amount end) from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()
                            Else
                                'Sales
                                cmd.CommandText = "Insert into ReportTemp(Name8                         ,Name7                         ,Name5               , Name1        , Name2                       ,Meters1        ,  Date1       , Name3             ,  Name4                                                    ,    Currency1 ,    Currency7 ,               Currency2                                                                                                                                              ,   Currency3          , Currency4         , Currency5        ,Currency6      ,weight1                                                                                                                                                   ,  Name6                                                                                                              ) " &
                                                          " Select  a.Sales_Code, a.Sales_Code+cast(a.Sl_No as varchar) ,LH.ledger_Name ,LH.ledger_GSTinNo  ," & Trim(vSALE_BILLNO) & " ,a.for_OrderBy  ,a.Sales_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end ) ,  b.Net_Amount,  b.Net_Amount,  (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  ,(select sum(sd.Noof_Items) from Sales_Details sd where a.Sales_CODE = sd.Sales_CODE and a.HSN_Code = sd.HSN_Code group by  sd.Sales_CODE ,sd.HSN_Code )   ,(select top 1 uh.unit_Name from Sales_Details sd1 LEFT OUTER JOIN UNIT_HEAD UH ON sd1.unit_idno = uh.unit_idno   where a.Sales_CODE = sd1.Sales_CODE and a.HSN_Code = sd1.HSN_Code  ) from Sales_GST_Tax_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN  Sales_Head b ON a.Sales_Code = b.Sales_Code  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> ''   Order by a.Sales_Date, a.for_OrderBy, a.Sales_No, a.Company_IdNo"
                                cmd.ExecuteNonQuery()
                            End If

                            ''Sales Return
                            'cmd.CommandText = "Insert into ReportTemp(Name7                                 ,Name5          ,Name1              , Name2     ,Meters1        ,  Date1       , Name3             ,  Name4                                                                         ,Currency1                                                         ,  Currency2                                                                                                                                                             , Currency3          , Currency4         , Currency5        ,Currency6                    ,weight1         ,Name6) " & _
                            '                          " Select  a.Sales_Return_No+cast(a.Sl_No as varchar) ,LH.ledger_Name  ,LH.ledger_GSTinNo  ,a.Sales_Return_No ,a.for_OrderBy  ,a.Sales_Return_Date  , a.HSN_Code        ,(case when sh.State_Name <>'' then sh.State_Code + '-'+ sh.State_Name end )     ,  a.Taxable_Amount+ a.CGST_Amount+a.SGST_Amount +a.IGST_Amount    ,     (case when a.CGST_Percentage <> 0 and a.SGST_Percentage <> 0 then a.CGST_Percentage + a.SGST_Percentage  when a.IGST_Percentage <> 0 then a.IGST_Percentage end )   , a.Taxable_Amount  , a.CGST_Amount     ,a.SGST_Amount     ,a.IGST_Amount  , sd.Noof_Items  , uh.unit_Name        from Sales_Return_GST_Tax_Details a LEFT OUTER JOIN SalesReturn_Details sd ON a.Sales_Return_Code = sd.SalesReturn_Code and a.HSN_Code =sd.HSN_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.State_IdNo = SH.State_IdNo LEFT OUTER JOIN UNIT_HEAD UH ON sd.unit_idno = uh.unit_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Return_Date between @fromdate and @todate  and LH.Ledger_GSTinNo <> '' Order by a.Sales_Return_Date, a.for_OrderBy, a.Sales_Return_No, a.Company_IdNo"
                            'cmd.ExecuteNonQuery()

                        End If
                    End If



                    vEntCode = ""
                    Da = New SqlClient.SqlDataAdapter("Select * from ReportTemp Order by Date1, Meters1, Name8, Name7, Name2 ", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1

                            If Trim(UCase(vEntCode)) = Trim(UCase(Dt1.Rows(i).Item("Name8").ToString)) Then
                                cmd.CommandText = "Update ReportTemp set Currency7 = 0  Where Name8 = '" & Trim(Dt1.Rows(i).Item("Name8").ToString) & "' and Name7 = '" & Trim(Dt1.Rows(i).Item("Name7").ToString) & "' and AutoSlNo = " & Str(Val(Dt1.Rows(i).Item("AutoSlNo").ToString))
                                cmd.ExecuteNonQuery()
                            End If

                            vEntCode = Trim(Dt1.Rows(i).Item("Name8").ToString)

                        Next i
                    End If
                    Dt1.Clear()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name7 ,Name1 , Name2 ,Meters1 ,  Date1 , Name3    ,  Name4 , Name5 , Name6, Name8,   Currency1 ,  Currency2 , Currency3 , Currency4 , Currency5 ,Currency6 ,Weight1, Currency7 ,Currency8 ,Currency9,Weight1, Weight2,      Weight3, Weight4,  Weight5,    Weight6,  Weight7,Weight8 from reporttemp Order by Date1, Meters1, Name8, Name7, Name2 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered with partyname" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_with_PartyName.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "outward supply - registered gstwise" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_with_PartyName_GstWise.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_Outward_Unregistered_Register.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "credit or debit note registered"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & IIf(Trim(cbo_Inputs2.Text) = "REGISTERED", "LH.Ledger_GSTinNo <> '' ", "LH.Ledger_GSTinNo = ''")
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & IIf(Trim(cbo_Inputs3.Text) = "CREDIT", "A.Other_GST_Entry_Type = 'CRNT' ", "A.Other_GST_Entry_Type = 'DRNT' ")
                    End If

                    state_str = ""
                    If Trim(cbo_Inputs2.Text) = "REGISTERED" Then
                        state_str = "(case when sh.State_Code <> '33' then 'Inter State' else 'Intra State' end )"
                    ElseIf Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then
                        state_str = "'Intra State'"
                    Else
                        state_str = "(case when LH.Ledger_GSTinNo <> '' then (case when sh.State_Code <> '33' then 'Inter State' else 'Intra State' end )  when LH.Ledger_GSTinNo = '' then 'Intra State' end   )"
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Name1                           ,Name2                                                                                                                      , Name3           ,Name4                ,Date1                    , Name5          ,Date2         ,     Name6                                                                                                                      , Currency1                                                                           , Name7                 ,Name8                          ,Name9 , Name10) " &
                                                  " Select   'GSCRN-'+ a.Other_GST_Entry_No   , (CASE WHEN Lh.Ledger_GSTinNo <> '' THEN Lh.Ledger_GSTinNo WHEN OH.Unregister_Type <> '' THEN OH.Unregister_Type END)      , Lh.Ledger_Name  ,a.Other_GST_Entry_No ,a.Other_GST_Entry_Date   ,oh.Bill_No      , oh.Bill_Date , (case when a.Other_GST_Entry_Type = 'CRNT' then 'CREDIT'  when a.Other_GST_Entry_Type = 'DRNT' then 'DEBIT' end  )         ,  a.Taxable_Amount + a.CGST_Amount + a.SGST_Amount + a.IGST_Amount + a.Chess_Amount      ," & state_str & "      ,Oh.Reason_For_Issuing_Note     , 'NO'     , OH.Unregister_Type            from Other_GST_Entry_Tax_Details  a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Other_GST_Entry_Head OH ON a.Other_GST_Entry_Reference_Code = OH.Other_GST_Entry_Reference_Code  LEFT OUTER JOIN Ledger_Head LH on A.Ledger_IdNo = LH.Ledger_IdNo LEFT OUTER JOIN State_Head SH ON LH.Ledger_State_IdNo = SH.State_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and (a.Other_GST_Entry_Reference_Code LIKE 'GSCRN-%' OR a.Other_GST_Entry_Reference_Code LIKE 'GSDBN-%' ) Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()




                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,Name2  , Name3 ,Name4  ,Date1  , Name5   ,Date2 , Name6 , Currency1 , Name7 ,Name8  ,Name9 ,Name10 from reporttemp Order by Date1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(cbo_Inputs2.Text) = "UNREGISTERED" Then

                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_CDNUR_Register.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_GSTR1_CDNR_Register.rdlc"

                    End If



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "item stock - age wise"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()


                    cmd.Parameters.Clear()
                    ' cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@uptodate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_Idno = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    cmd.CommandText = "Insert into EntryTemp(Name1   ,int4         , Date1              ,Int3       , Int1                                                  , Int2 ) " &
                                              " Select          ih.Item_Name ,a.Item_Idno  ,a.Reference_Date    ,a.Quantity , (case when a.Quantity > 0 then abs(a.Quantity) end)   , (case when a.Quantity < 0 then abs(a.Quantity) end)   FROM Item_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Item_Head IH ON a.Item_IdNo = IH.Item_IdNo  WHERE " & RptCondt & IIf(RptCondt <> "", " and ", "") & " Reference_Date <= @uptodate "
                    cmd.ExecuteNonQuery()


                    Dim Temp1_Stk As Integer = 0
                    Dim Temp2_Stk As Integer = 0
                    Dim Bill_No As String = ""

                    Da = New SqlClient.SqlDataAdapter("select Int4 as  item_Idno , sum(Int3) as item_stock from EntryTemp group by Int4", con)
                    Dt = New DataTable
                    Da.Fill(Dt)
                    If Dt.Rows.Count > 0 Then
                        For i = 0 To Dt.Rows.Count - 1

                            Temp1_Stk = Val(Dt.Rows(i).Item("item_stock"))

                            Da1 = New SqlClient.SqlDataAdapter("select * FROM Item_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Item_Head IH ON a.Item_IdNo = IH.Item_IdNo   WHERE a.Item_IdNo =  " & Val(Dt.Rows(i).Item("item_Idno").ToString) & "  and a.Quantity > 0 ORDER BY  A.Reference_Date desc", con)
                            Dt1 = New DataTable
                            Da1.Fill(Dt1)
                            If Dt1.Rows.Count > 0 Then
                                For J = 0 To Dt1.Rows.Count - 1

                                    If Val(Dt.Rows(i).Item("item_stock").ToString) > 0 Then

                                        If Temp1_Stk <> 0 Then

                                            If Temp1_Stk > Val(Dt1.Rows(J).Item("Quantity").ToString) Then

                                                Temp1_Stk = Val(Temp1_Stk) - Val(Dt1.Rows(J).Item("Quantity").ToString)
                                                Temp2_Stk = Val(Dt1.Rows(J).Item("Quantity").ToString)
                                            Else
                                                Temp2_Stk = Temp1_Stk
                                                Temp1_Stk = 0
                                            End If

                                            cmd.Parameters.Clear()
                                            cmd.Parameters.AddWithValue("@purchasedate", Convert.ToDateTime(Dt1.Rows(J).Item("Reference_Date").ToString))
                                            cmd.Parameters.AddWithValue("@uptodate", dtp_ToDate.Value.Date)



                                            If InStr(Trim(Dt1.Rows(J).Item("Reference_Code").ToString), "PUR") > 0 Then
                                                Da2 = New SqlClient.SqlDataAdapter("select Bill_No FROM Purchase_Head where  Purchase_Code like '" & Microsoft.VisualBasic.Right(Trim(Dt1.Rows(J).Item("Reference_Code").ToString), Microsoft.VisualBasic.Len(Trim(Dt1.Rows(J).Item("Reference_Code").ToString)) - 6) & "' ", con)
                                                Dt2 = New DataTable
                                                Da2.Fill(Dt2)
                                                If Dt2.Rows.Count > 0 Then
                                                    Bill_No = Trim(Dt2.Rows(0).Item("Bill_No").ToString)
                                                End If
                                            End If


                                            If InStr(Trim(Dt1.Rows(J).Item("Reference_Code").ToString), "GPUR") > 0 Then
                                                Da2 = New SqlClient.SqlDataAdapter("select Bill_No FROM Purchase_Head where  Purchase_Code like '" & Trim(Dt1.Rows(J).Item("Reference_Code").ToString) & "' ", con)
                                                Dt2 = New DataTable
                                                Da2.Fill(Dt2)
                                                If Dt2.Rows.Count > 0 Then
                                                    Bill_No = Trim(Dt2.Rows(0).Item("Bill_No").ToString)
                                                End If
                                            End If


                                            cmd.CommandText = "Insert into ReportTemp(Name1                                                       ,Name2 ,Name3                                                     , Name4                         ,  Date1          , Int1                                     , Int2                                         , Meters1                    , Currency1  )  " &
                                                                                    " Values( '" & Trim(Dt1.Rows(J).Item("item_name").ToString) & "'  ,''    ,'" & Trim(Dt1.Rows(J).Item("Reference_No").ToString) & "' ,'" & Trim(Bill_No) & "'        ,  @purchasedate ,   datediff (day,@purchasedate,@uptodate) ,  datediff (month,@purchasedate,@uptodate)    ,   " & Val(Temp2_Stk) & "   , " & Val(Temp2_Stk) * Val(Dt1.Rows(J).Item("Cost_Rate").ToString) & "   )"
                                            cmd.ExecuteNonQuery()
                                        End If


                                    End If
                                Next
                            End If
                            Dt1.Clear()
                            Dt1.Dispose()
                            Da1.Dispose()

                        Next

                    End If
                    Dt.Clear()
                    Dt.Dispose()
                    Da.Dispose()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,Name2 , Name3 ,Name4 , Date1 , Int1   , Int2   , Meters1 , Currency1  from reporttemp Order by Date1, Meters1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_ItemStock_AgeWise.rdlc"

                RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "partywise price list"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""


                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    'RptCondt = CompCondt
                    'If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                    '    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    'End If

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    cmd.CommandText = "Insert into ReportTemp( Name1          , Name2        , Name3        , Meters1  ) " &
                                                          " Select LH.Ledger_Name ,IH.Item_Name  ,Sh.Size_NAme  ,a.Rate     from Price_List_Details a  LEFT OUTER JOIN Price_List_Head B ON A.Price_List_IdNo = B.Price_List_IdNo LEFT OUTER JOIN Ledger_Head LH On B.Ledger_IdNo =LH.Ledger_IdNo  LEFT OUTER JOIN Item_Head IH ON a.Item_IdNo = IH.Item_IdNo  LEFT OUTER JOIN Size_Head Sh ON a.Size_IdNo = sh.Size_IdNo " & IIf(RptCondt <> "", " where ", "") & RptCondt & ""
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,  Name1 , Name2 , Name3 , Meters1  from reporttemp Order by Name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_PriceList_Register.rdlc"



                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "token register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Vehicle_No = '" & Trim(cbo_Inputs2.Text) & "'"
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Tocken_No = '" & Trim(cbo_Inputs3.Text) & "'"
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Tocken_Type = '" & Trim(cbo_Inputs4.Text) & "'"
                    Else

                    End If

                    Dim ColCondt As String = ""
                    ColCondt = "a.Tocken_Type"
                    If Trim(cbo_Inputs4.Text) <> "" Then
                        ColCondt = "'[HIDDEN]'"
                    End If

                    cmd.CommandText = "Insert into ReportTemp (Date1     ,Name9                 ,  Name2       ,Name3        , Date2         , Date3    , Date4         , Meters1    , Meters2     , Currency1 ,Name6 ,Name7 , Name8 ) " &
                                                "     Select  a.Tocken_Date  ," & Trim(ColCondt) & ", a.Tocken_No ,a.Vehicle_No ,a.InDateTime   ,a.OutTime , a.OutDateTime ,a.Total_Hrs ,a.Total_Days ,a.Amount   , (CASE WHEN tP.Ledger_Name <> '' then tP.Ledger_Name else a.Party_Name end  ) ,(CASE WHEN tP.Ledger_Address1 <> '' then tP.Ledger_Address1 + ',' + tP.Ledger_Address2 +','+ tP.Ledger_Address3+',' +tP.Ledger_Address4 else  a.Address1 + ',' + a.Address2 + ',' + a.Address3 + ',' + Address4 end  ) ,(case when tP.Ledger_PhoneNo <> '' then tP.Ledger_PhoneNo else a.Mobile_No end)  from Tocken_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Tocken_Date between @fromdate and @todate Order by a.Tocken_Date, a.for_OrderBy, a.Tocken_Code, a.Tocken_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1     , Name9 ,Name2 ,Name3  , Name4 , Date2 ,Date3 ,Date4 , Name5  , Meters1 , Meters2 , Currency1 ,Name6 ,Name7 , Name8 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Tocken_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "monthly token register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Vehicle_No = '" & Trim(cbo_Inputs2.Text) & "'"
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Token_Monthly_No = '" & Trim(cbo_Inputs3.Text) & "'"
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Close_Status = " & IIf(Trim(cbo_Inputs4.Text) = "CLOSED", 1, 0) & ""
                    End If
                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & IIf(Trim(cbo_Inputs5.Text) = "PAID", "a.Amount <> 0 ", "a.Amount = 0") & ""
                    End If

                    cmd.CommandText = "Insert into ReportTemp (Date1            , Name1              , Int1           ,      Name2        , Date2        , Date3     , Meters1     , Currency1   , Name3                                                                        , Name4                                                                                                                                                                                                                                         ,Name5                               ) " &
                                                "     Select  a.Token_Monthly_Date  , a.Token_Monthly_No , a.Close_Status ,  a.Vehicle_No  ,a.StartDate   ,a.EndDate  ,a.Total_Days ,a.Amount     , (CASE WHEN tP.Ledger_Name <> '' then tP.Ledger_Name else a.Party_Name end  ) ,(CASE WHEN tP.Ledger_Address1 <> '' then tP.Ledger_Address1 + ',' + tP.Ledger_Address2 +','+ tP.Ledger_Address3+',' +tP.Ledger_Address4 else  a.Party_Address1 + ',' + a.Party_Address2 + ',' + a.Party_Address3 + ',' + Party_Address4 end  ) ,(case when tP.Ledger_PhoneNo <> '' then tP.Ledger_PhoneNo else a.Party_MobileNo end)  from Token_Monthly_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ledger_idno = tP.ledger_idno  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Token_Monthly_Date between @fromdate and @todate Order by a.Token_Monthly_Date, a.for_OrderBy, a.Token_Monthly_Code, a.Token_Monthly_No"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1  , Name1  ,Int1 , Name2   , Date2   , Date3     , Meters1     , Currency1   , Name3   , Name4   ,Name5 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1


                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Monthly_Token_Register.rdlc"


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "production register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Machine_IdNo = " & Str(Val(Common_Procedures.Machine_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.SHIFT = '" & cbo_Inputs4.Text & "'"
                    End If

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.JOB_NO = '" & cbo_Inputs5.Text & "'"
                    End If

                    If cbo_Inputs6.Visible = True And Trim(cbo_Inputs6.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.OrderCode_forSelection = '" & cbo_Inputs6.Text & "'"
                    End If

                    If cbo_Inputs7.Visible = True And Trim(cbo_Inputs7.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Incharge_IdNo = " & Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs7.Text)
                    End If

                    If cbo_Inputs8.Visible = True And Trim(cbo_Inputs8.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Operator_IdNo = " & Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs8.Text)
                    End If

                    If cbo_Inputs9.Visible = True And Trim(cbo_Inputs9.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Framer_IdNo = " & Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs9.Text)
                    End If

                    cmd.CommandText = " Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2        ,  weight1    ,       date1           ,   Name3     ,   Name4  ,        Name5  ,                 Name6       ,       Name7                 ,         Name8            ,              Name9        ,      Name10          ,   Name11          , Meters1    ,   Meters2   ,   Meters3 , Currency1,   Currency2  ,Name12) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Production_Code , a.Company_IdNo , a.Production_No   , a.for_OrderBy, a.Production_Date   , tP.Ledger_Name, a.Shift,  mh.Machine_Name, FEM.Employee_Name as Framer, OEM.Employee_Name as Operator, b.OrderCode_ForSelection,             b.design     ,    ch.colour_name    ,   sh.size_name ,     B.Head     ,   B.Stiches , B.Pieces  , B.Rate   ,B.Amount ,IEM.Employee_Name" &
                                      " from Production_Head a INNER JOIN Production_Details b on a.Production_Code = b.Production_Code Inner Join Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON B.Ledger_IdNo = tP.Ledger_IdNo INNER JOIN Machine_Head MH ON a.Machine_IdNo = mh.Machine_IdNo INNER JOIN Payroll_Employee_Head FEM ON a.Framer_IdNo = FEM.Employee_IdNo INNER JOIN Payroll_Employee_Head OEM ON a.Operator_IdNo = OEM.Employee_IdNo  INNER JOIN Payroll_Employee_Head IEM ON a.Incharge_IdNo = IEM.Employee_IdNo " &
                                      " Inner Join Colour_Head CH On CH.Colour_IdNo = b.Colour_IdNo Inner Join Size_Head SH On SH.Size_IdNo = b.Size_IdNo " &
                                      " Where " & RptCondt & IIf(RptCondt <> "", " And ", "") & " a.Production_Date between @fromdate And @todate Order by a.Production_Code ,a.Production_Date, a.for_OrderBy, a.Production_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency1= (Select Production_Cost from Production_Cost where UID = Name8) where (Currency1 Is null Or currency1 =0); Update ReportTemp set Currency2 = (Currency1 * Meters3)  "
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Production_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

            Case "order details", "order details - a"

                '---------------------------------------------------------------------------------------------------------------------------

                If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Order_Program_Date between @fromdate And @todate "

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " A.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If (cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "") And (cbo_Inputs3.Visible = False Or Trim(cbo_Inputs3.Text) = "") Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") &
                                    " J.ORDERJOBNO_NAME IN  (SELECT JN.ORDERJOBNO_NAME FROM ORDERJOBNO_HEAD JN WHERE JN.ORDERNO_NAME = '" & cbo_Inputs4.Text & "') AND J.ORDERNO_NAME = '" & cbo_Inputs4.Text & "'"
                    ElseIf (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And (cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "") Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") &
                                    " A.ORDERCODE_FORSELECTION IN (SELECT OJN.ORDERNO_NAME FROM ORDERJOBNO_HEAD OJN WHERE OJN.ORDERJOBNO_NAME = '" & cbo_Inputs3.Text & "') AND J.ORDERJOBNO_NAME = '" & cbo_Inputs3.Text & "'"
                    End If

                cmd.CommandText = "INSERT INTO REPORTTEMP (INT1,INT2,NAME1,NAME5,DATE1,NAME3,NAME10) SELECT 1,A.ORDER_PROGRAM_NO, J.ORDERNO_NAME, J.ORDERJOBNO_NAME,A.ORDER_PROGRAM_DATE,tP.LEDGER_NAME,'TOTAL' FROM ORDERJOBNO_HEAD J INNER JOIN ORDER_PROGRAM_HEAD A ON  " &
                                      " A.ORDERCODE_FORSELECTION = J.ORDERNO_NAME INNER JOIN COMPANY_HEAD tZ ON A.COMPANY_IDNO = tZ.COMPANY_IDNO INNER JOIN LEDGER_HEAD tP ON A.LEDGER_IDNO = tP.LEDGER_IDNO WHERE " & RptCondt
                cmd.ExecuteNonQuery()


                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS1 = (SELECT SUM(PIECES) FROM Order_Program_Head WHERE Ordercode_forSelection = NAME1)"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS2 = (SELECT SUM(Quantity) FROM Simple_Receipt_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS3 = (SELECT SUM(PIECES) FROM Production_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS4 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS8 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5 AND DELIVERY_PURPOSE = 'Good')"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "UPDATE REPORTTEMP SET METERS5 = (SELECT SUM(Quantity) FROM Sales_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5 )"
                    cmd.ExecuteNonQuery()

AB:

                    'cmd.CommandText = "Insert into ReportTempSub(    Name1        ,  Meters7                ,       Meters6               ,Meters5                    ,   Meters4                 ,    Meters3                    ,  Meters2                    ,  Meters1                  ,   Meters8                ,name5) " &
                    '                                          " Select   a.Name1 , SUM(ISNULL(a.Meters7,0)), SUM(ISNULL(a.Meters6,0))    , SUM(ISNULL(a.Meters5,0))  , SUM(ISNULL(a.Meters4,0))  ,   SUM(ISNULL(a.Meters3,0))    ,  SUM(ISNULL(a.Meters2 ,0))  , SUM( ISNULL(a.Meters1,0)) ,  SUM(ISNULL(a.Meters8,0)),NAME5     from ReportTemp a Group By a.Name1,a.NAME5 "
                    'cmd.ExecuteNonQuery()


                    'If Len(Trim(cbo_Inputs3.Text)) > 0 Then
                    '    cmd.CommandText = "UPDATE REPORTTEMPSUB Set NAME5 = '" & cbo_Inputs3.Text & "'"
                    '    cmd.ExecuteNonQuery()
                    'End If

                    'cmd.CommandText = "Truncate table ReportTemp"
                    'cmd.ExecuteNonQuery()

                    'If Len(Trim(cbo_Inputs3.Text)) > 0 Then

                    '    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1               ,       Int1     ,   Int2                            ,  weight1     ,       date1            ,   Name3        ,   Name4                  ,    Meters1    ,Currency1 , Meters2   , Meters3  , Meters4  , Meters5 , Meters6   , Meters7  ,Meters8    ,    Name5) " &
                    '                  " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Order_Program_Code       , a.Company_IdNo ,CONVERT(INT, a.Order_Program_No )  , a.for_OrderBy, a.Order_Program_Date   , tP.Ledger_Name       , a.OrderCode_ForSelection ,    R.Meters1  , A.Amount , r.Meters2 ,r.Meters3 , r.Meters4,r.Meters5 , r.Meters6  , r.Meters7, r.Meters8 ,R.NAME5" &
                    '                  " from Order_Program_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo " &
                    '                  " INNER JOIN ReportTempsub R ON a.Ordercode_forSelection = R.Name1 AND R.NAME5 = '" & cbo_Inputs3.Text & "' AND " &
                    '                   RptCondt & IIf(RptCondt <> "", " And ", "") & " a.Order_Program_Date between @fromdate And @todate  Order by a.Order_Program_Code ,a.Order_Program_Date, a.for_OrderBy, a.Order_Program_No, a.Company_IdNo"

                    '    'R.Name5 = '" & cbo_Inputs3.Text & "'

                    'Else

                    '    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1               ,       Int1     ,   Int2                            ,  weight1     ,       date1            ,   Name3        ,   Name4                  ,    Meters1    ,Currency1 , Meters2   , Meters3  , Meters4  , Meters5 , Meters6   , Meters7  ,Meters8    ,    Name5) " &
                    '                  " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Order_Program_Code       , a.Company_IdNo ,CONVERT(INT, a.Order_Program_No )  , a.for_OrderBy, a.Order_Program_Date   , tP.Ledger_Name       , a.OrderCode_ForSelection ,    R.Meters1  , A.Amount , r.Meters2 ,r.Meters3 , r.Meters4,r.Meters5 , r.Meters6  , r.Meters7, r.Meters8 ,O.OrderJobNo_Name" &
                    '                  " from Order_Program_Head a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo Inner Join OrderJobNo_Head O on a.OrderCode_forSelection = O.OrderNo_Name  INNER JOIN ORDERJOBNO_HEAD J on A.ORDERCODE_FORSELECTION = J.ORDERNO_NAME LEFT OUTER JOIN ReportTempsub R ON a.Ordercode_forSelection = R.Name1 Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Order_Program_Date between @fromdate and @todate Order by a.Order_Program_Code ,a.Order_Program_Date, a.for_OrderBy, a.Order_Program_No, a.Company_IdNo"

                    'End If

                    cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "',     Report_Heading1   = '" & Trim(RptHeading1) & "',    Report_Heading2   = '" & Trim(RptHeading2) & "', Report_Heading3   = '" & Trim(RptHeading3) & "'     "
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Int2,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  weight1,weight2,weight3,weight4,weight5,   date1,date2,date3,  Currency1, Meters1,Meters2,Meters3,Meters4 ,Meters5,Meters6,Meters8 from reporttemp   ", con)

                    'End If

                    Dtbl1 = New DataTable

                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                If Trim(LCase(RptIpDet_ReportName)) = "order details" Then
                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Order_Details_Register_ByDate.rdlc"
                ElseIf Trim(LCase(RptIpDet_ReportName)) = "order details - a" Then
                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Order_Details_Register.rdlc"
                End If


                RptViewer.LocalReport.DataSources.Clear()

                RptViewer.LocalReport.DataSources.Add(RpDs1)

                RptViewer.LocalReport.Refresh()
                RptViewer.RefreshReport()

                RptViewer.Visible = True

            Case "order details by colour", "order details by colour - a"

                '---------------------------------------------------------------------------------------------------------------------------

                If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                    MessageBox.Show("Invalid From Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                    Exit Sub
                End If
                If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                    MessageBox.Show("Invalid To Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                    Exit Sub
                End If

                cmd.Connection = con

                cmd.CommandText = "Truncate table ReportTemp"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "Truncate table ReportTempSub"
                cmd.ExecuteNonQuery()

                cmd.Parameters.Clear()
                cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                RptCondt = CompCondt

                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Order_Program_Date between @fromdate And @todate "

                If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                End If

                If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " A.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                End If

                If (cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "") And (cbo_Inputs3.Visible = False Or Trim(cbo_Inputs3.Text) = "") Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") &
                                " J.ORDERJOBNO_NAME IN  (SELECT JN.ORDERJOBNO_NAME FROM ORDERJOBNO_HEAD JN WHERE JN.ORDERNO_NAME = '" & cbo_Inputs4.Text & "') AND J.ORDERNO_NAME = '" & cbo_Inputs4.Text & "'"
                ElseIf (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And (cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "") Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") &
                                " A.ORDERCODE_FORSELECTION IN (SELECT OJN.ORDERNO_NAME FROM ORDERJOBNO_HEAD OJN WHERE OJN.ORDERJOBNO_NAME = '" & cbo_Inputs3.Text & "') AND J.ORDERJOBNO_NAME = '" & cbo_Inputs3.Text & "'"
                End If

                cmd.CommandText = "INSERT INTO REPORTTEMP (INT1,INT2,NAME1,NAME5,DATE1,NAME3,NAME10) SELECT 1,A.ORDER_PROGRAM_NO, J.ORDERNO_NAME, J.ORDERJOBNO_NAME,A.ORDER_PROGRAM_DATE,tP.LEDGER_NAME,'TOTAL' FROM ORDERJOBNO_HEAD J INNER JOIN ORDER_PROGRAM_HEAD A ON  " &
                                      " A.ORDERCODE_FORSELECTION = J.ORDERNO_NAME INNER JOIN COMPANY_HEAD tZ ON A.COMPANY_IDNO = tZ.COMPANY_IDNO INNER JOIN LEDGER_HEAD tP ON A.LEDGER_IDNO = tP.LEDGER_IDNO WHERE " & RptCondt
                cmd.ExecuteNonQuery()


                cmd.CommandText = "UPDATE REPORTTEMP SET METERS1 = (SELECT SUM(PIECES) FROM Order_Program_Head WHERE Ordercode_forSelection = NAME1)"
                cmd.ExecuteNonQuery()


                cmd.CommandText = "UPDATE REPORTTEMP SET METERS2 = (SELECT SUM(Quantity) FROM Simple_Receipt_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE REPORTTEMP SET METERS3 = (SELECT SUM(PIECES) FROM Production_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE REPORTTEMP SET METERS4 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5)"
                cmd.ExecuteNonQuery()


                cmd.CommandText = "UPDATE REPORTTEMP SET METERS8 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5 AND DELIVERY_PURPOSE = 'Good')"
                cmd.ExecuteNonQuery()


                cmd.CommandText = "UPDATE REPORTTEMP SET METERS5 = (SELECT SUM(Quantity) FROM Sales_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5 )"
                cmd.ExecuteNonQuery()



                cmd.CommandText = "UPDATE REPORTTEMP SET INT3 = ISNULL(METERS6,0)-ISNULL(METERS7,0);UPDATE REPORTTEMP SET INT4 = ISNULL(METERS2,0)-ISNULL(METERS3,0)-ISNULL(METERS6,0);" &
                                  "UPDATE REPORTTEMP SET INT5 = ISNULL(METERS2,0)-ISNULL(METERS4,0);UPDATE REPORTTEMP SET INT6 = ISNULL(METERS8,0)-ISNULL(METERS5,0);"
                cmd.ExecuteNonQuery()

AC:

                cmd.CommandText = " INSERT INTO REPORTTEMP (INT1,INT2,NAME1,NAME5,DATE1,NAME3,NAME10,INT10) SELECT DISTINCT 2,A.ORDER_PROGRAM_NO, J.ORDERNO_NAME, J.ORDERJOBNO_NAME,A.ORDER_PROGRAM_DATE,tP.LEDGER_NAME,C.COLOUR_NAME,S.COLOUR_IDNO " &
                                  " FROM ORDERJOBNO_HEAD J INNER JOIN ORDER_PROGRAM_HEAD A ON A.ORDERCODE_FORSELECTION = J.ORDERNO_NAME INNER JOIN " &
                                  " SIMPLE_RECEIPT_DETAILS S ON A.ORDERCODE_FORSELECTION = S.Ordercode_forSelection  AND J.ORDERJOBNO_NAME = S.JOB_NO INNER JOIN COLOUR_HEAD C ON S.COLOUR_IDNO = C.COLOUR_IDNO " &
                                  " INNER JOIN COMPANY_HEAD tZ ON A.COMPANY_IDNO = tZ.COMPANY_IDNO INNER JOIN LEDGER_HEAD tP ON A.LEDGER_IDNO = tP.LEDGER_IDNO WHERE " & RptCondt
                cmd.ExecuteNonQuery()

                'cmd.CommandText = "UPDATE REPORTTEMP SET METERS1 = (SELECT SUM(PIECES) FROM Order_Program_Head WHERE Ordercode_forSelection = NAME1)"
                'cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE REPORTTEMP SET METERS2 = (SELECT SUM(Quantity) FROM Simple_Receipt_Details WHERE Ordercode_forSelection = NAME1 And JOB_NO = NAME5 AND COLOUR_IDNO = INT10) WHERE INT1 =2"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE REPORTTEMP SET METERS3 = (SELECT SUM(PIECES) FROM Production_Details WHERE Ordercode_forSelection = NAME1 And JOB_NO = NAME5 AND COLOUR_IDNO = INT10) WHERE INT1 =2 "
                cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE REPORTTEMP SET METERS4 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 And JOB_NO = NAME5 AND COLOUR_IDNO = INT10) WHERE INT1 =2"
                cmd.ExecuteNonQuery()


                cmd.CommandText = "UPDATE REPORTTEMP SET METERS8 = (SELECT SUM(Quantity) FROM Sales_Delivery_Details WHERE Ordercode_forSelection = NAME1 And JOB_NO = NAME5 And DELIVERY_PURPOSE = 'Good'  AND COLOUR_IDNO = INT10) WHERE INT1 =2"
                cmd.ExecuteNonQuery()

                'cmd.CommandText = "UPDATE REPORTTEMP SET METERS5 = (SELECT SUM(Quantity) FROM Sales_Details WHERE Ordercode_forSelection = NAME1 AND JOB_NO = NAME5 )"
                'cmd.ExecuteNonQuery()

                cmd.CommandText = "Update ReportTemp set Company_Name = '" & Trim(CompName) & "', Company_Address1 = '" & Trim(CompAdd1) & "', Company_Address2 = '" & Trim(CompAdd2) & "',     Report_Heading1   = '" & Trim(RptHeading1) & "',    Report_Heading2   = '" & Trim(RptHeading2) & "', Report_Heading3   = '" & Trim(RptHeading3) & "'     "
                cmd.ExecuteNonQuery()

                Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Int2,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  weight1,weight2,weight3,weight4,weight5,   date1,date2,date3,  Currency1, Meters1,Meters2,Meters3,Meters4 ,Meters5,Meters6,Meters7,Meters8,Int1,NAME10,INT10,Int3,Int4,Int5,Int6 from reporttemp   ", con)

                'End If

                Dtbl1 = New DataTable

                Da.Fill(Dtbl1)

                If Dtbl1.Rows.Count = 0 Then

                    cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                End If

                RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                RpDs1.Name = "DataSet1"
                RpDs1.Value = Dtbl1

                If Trim(LCase(RptIpDet_ReportName)) = "order details by colour" Then
                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Order_Details_Register_ByDate_ByColour.rdlc"
                ElseIf Trim(LCase(RptIpDet_ReportName)) = "order details by colour - a" Then
                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Order_Details_Register_ByColour.rdlc"
                End If


                RptViewer.LocalReport.DataSources.Clear()

                RptViewer.LocalReport.DataSources.Add(RpDs1)

                RptViewer.LocalReport.Refresh()
                RptViewer.RefreshReport()

                RptViewer.Visible = True

            Case "embroidery invoice register", "embroidery invoice register - 1"


                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SD.Sales_Code Like 'GINVE-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tZ.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SD.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                    If (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SD.JOB_NO = '" & cbo_Inputs3.Text & "'"
                    End If

                    If (cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SD.JOB_NO = '" & cbo_Inputs3.Text & "'" & " AND SD.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                    If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                        If cbo_Inputs5.Text = "DIRECT" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SH.IsDirect = 1"
                        End If
                        If cbo_Inputs5.Text = "ORDER" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " isnull(SH.IsDirect,0) <> 1"
                        End If
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name  ,    Company_Address1       ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2      ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2      ,  weight1      ,       date1     ,   Name3          , Name4                                                               , Name5         ,    Name6     ,  Currency1          ,  Meters1         ,Currency2     ,  Meters2  ,  Currency3    ,Currency4 , Currency5   ,  Currency6                        ,Currency7                     ,        Currency8             , Currency9     , Int2         ,Name7                    ,Name8            ) " &
                                          " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,SD.Sales_Code    , SD.Company_IdNo    ,SD.Sales_No   , SD.for_OrderBy, SD.Sales_Date   , tP.Ledger_Name , isnull(SD.OrderCode_forSelection,'') + '(' + SD.Details_Design +')' , c.colour_name ,s.size_name   ,  sd.Rate_1000Stitches , sd. NoOf_Items ,sd.Rate       , sd.Quantity,  sd.Amount  ,sd.Tax_Perc, sh.Total_Qty,sh.Assessable_Value  , sh.CGST_Amount+sh.SGST_Amount+sh.IGST_Amount,               sh.round_off  , sh.Net_Amount , Sl_No    ,sd.OrderCode_forSelection,sd.Job_No" &
                                          " from Sales_Details Sd Inner Join Company_Head tZ ON SD.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON SD.Ledger_IdNo = tP.Ledger_IdNo Inner Join Sales_Head SH on sd.Sales_Code = sh.sales_code Left Outer Join Colour_Head C On C.Colour_IdNo = SD.Colour_IdNo Left Outer Join Size_Head S On S.Size_IdNo = SD.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " SD.Sales_Date between @fromdate and @todate AND SD.SALES_CODE LIKE 'GINVE-%' Order by SD.Sales_Code ,SD.Sales_Date, SD.for_OrderBy, SD.Sales_No, SD.Company_IdNo"

                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp Set Currency5 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency6 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency7 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency8 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency9 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery invoice register" Then
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1,convert(int,name2), name1 ", con)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "embroidery invoice register - 1" Then
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by convert(int,name2),Date1, name1 ", con)
                    End If

                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Invoice_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery jobwork invoice register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " EJID.Embroidery_Jobwork_Invoice_Code Like 'GINEJ-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1       ,     Report_Heading2      ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2      ,  weight1      ,       date1     ,   Name3          , Name4                                                               , Name5         ,    Name6     ,  Currency1          ,  Meters1         ,Currency2     ,  Meters2  ,  Currency3    ,Currency4 , Currency5   ,  Currency6                        ,Currency7                     ,        Currency8             , Currency9     , Int2) " &
                                          " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,EJID.Embroidery_Jobwork_Invoice_Code    , EJID.Company_IdNo    ,EJID.Embroidery_Jobwork_Invoice_No   , EJID.for_OrderBy, EJID.Embroidery_Jobwork_Invoice_Date   , tP.Ledger_Name , isnull(EJID.OrderCode_forSelection,'') + '(' + EJID.Details_Design +')' , c.colour_name ,s.size_name   ,  EJID.Rate_1000Stitches , EJID. NoOf_Items ,EJID.Rate       , EJID.Quantity,  EJID.Amount  ,EJID.Tax_Perc, EJIH.Total_Qty,EJIH.Assessable_Value  , EJIH.CGST_Amount+EJIH.SGST_Amount+EJIH.IGST_Amount,               EJIH.round_off  , EJIH.Net_Amount , Sl_No  " &
                                          " from Embroidery_Jobwork_Invoice_Details EJID Inner Join Company_Head tZ ON EJID.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON EJID.Ledger_IdNo = tP.Ledger_IdNo Inner Join Embroidery_Jobwork_Invoice_Head EJIH on EJID.Embroidery_Jobwork_Invoice_Code = EJIH.Embroidery_Jobwork_Invoice_code Left Outer Join Colour_Head C On C.Colour_IdNo = EJID.Colour_IdNo Left Outer Join Size_Head S On S.Size_IdNo = EJID.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " EJID.Embroidery_Jobwork_Invoice_Date between @fromdate and @todate Order by EJID.Embroidery_Jobwork_Invoice_Code ,EJID.Embroidery_Jobwork_Invoice_Date, EJID.for_OrderBy, EJID.Embroidery_Jobwork_Invoice_No, EJID.Company_IdNo"

                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp Set Currency5 = Null where not Int2 = (Select Min(sl_no) from Embroidery_Jobwork_Invoice_details where Embroidery_Jobwork_Invoice_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency6 = Null where not Int2 = (Select Min(sl_no) from Embroidery_Jobwork_Invoice_details where Embroidery_Jobwork_Invoice_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency7 = Null where not Int2 = (Select Min(sl_no) from Embroidery_Jobwork_Invoice_details where Embroidery_Jobwork_Invoice_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency8 = Null where not Int2 = (Select Min(sl_no) from Embroidery_Jobwork_Invoice_details where Embroidery_Jobwork_Invoice_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency9 = Null where not Int2 = (Select Min(sl_no) from Embroidery_Jobwork_Invoice_details where Embroidery_Jobwork_Invoice_code = Name1)"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Jobwork_Invoice_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery design invoice register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()


                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " SD.Sales_Code Like 'GEIVD-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1       ,     Report_Heading2      ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2      ,  weight1      ,       date1     ,   Name3          , Name4              , Name5         ,    Name6     ,  Currency1          ,  Meters1         ,Currency2     ,  Meters2  ,  Currency3    ,Currency4 , Currency5   ,  Currency6                        ,Currency7                     ,        Currency8             , Currency9     , Int2      ) " &
                                          " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,SD.Sales_Code    , SD.Company_IdNo    ,SD.Sales_No   , SD.for_OrderBy, SD.Sales_Date   , tP.Ledger_Name ,  SD.Details_Design , c.colour_name ,s.size_name   ,  sd.Rate_1000Stitches , sd. NoOf_Items ,sd.Rate       , sd.Quantity,  sd.Amount  ,sd.Tax_Perc, sh.Total_Qty,sh.Assessable_Value  , sh.CGST_Amount+sh.SGST_Amount+sh.IGST_Amount,               sh.round_off  , sh.Net_Amount , Sl_No " &
                                          " from Sales_Details Sd Inner Join Company_Head tZ ON SD.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON SD.Ledger_IdNo = tP.Ledger_IdNo Inner Join Sales_Head SH on sd.Sales_Code = sh.sales_code Left Outer Join Colour_Head C On C.Colour_IdNo = SD.Colour_IdNo Left Outer Join Size_Head S On S.Size_IdNo = SD.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " SD.Sales_Date between @fromdate and @todate Order by SD.Sales_Code ,SD.Sales_Date, SD.for_OrderBy, SD.Sales_No, SD.Company_IdNo"

                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Update ReportTemp Set Currency5 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency6 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency7 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency8 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp Set Currency9 = Null where not Int2 = (Select Min(sl_no) from sales_details where sales_code = Name1)"
                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Design_Invoice_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery inward register", "embroidery inward register - 1"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                If (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.JOB_NO = '" & cbo_Inputs3.Text & "'"
                End If

                If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Colour_IdNo = " & Common_Procedures.Colour_NameToIdNo(con, cbo_Inputs5.Text).ToString
                End If

                If cbo_Inputs6.Visible = True And Trim(cbo_Inputs6.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.Size_IdNo = " & Common_Procedures.Size_NameToIdNo(con, cbo_Inputs6.Text).ToString
                End If

                cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2               ,  weight1    ,       date1           ,   Name3           ,   Name4  ,        Name5           , Name6       ,       Name7   ,  Meters1    ,   Meters2   ,   Meters3                ,Int2  ,Name8) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Simple_Receipt_Code , a.Company_IdNo , a.Simple_Receipt_No   , a.for_OrderBy, a.Simple_Receipt_Date   , tP.Ledger_Name,  a.OrderCode_ForSelection  ,a.Item_Description  ,c.Colour_Name   ,d.Size_Name    ,a.Quantity  , a.Rate,     a.Amount   , Sl_No ,a.Job_No " &
                                            " from Simple_Receipt_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo  LEFT OUTER JOIN Colour_Head c ON a.Colour_IdNo = c.Colour_IdNo LEFT OUTER JOIN Size_Head d ON a.Size_IdNo = d.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Simple_Receipt_Date between @fromdate and @todate Order by a.Simple_Receipt_Code ,a.Simple_Receipt_Date, a.for_OrderBy, a.Simple_Receipt_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery inward register" Then
                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,Name8,  weight1,   date1, Meters1,Meters2,Meters3,Meters4 from reporttemp Order by Date1, name2, name1 ", con)
                    Else
                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,Name8,  weight1,   date1, Meters1,Meters2,Meters3,Meters4 from reporttemp Order by convert(int, name2), name1 ", con)
                    End If

                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Inward_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery jobwork inward register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.ORDERCODE_FORSELECTION = '" & cbo_Inputs3.Text & "'"
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1       ,       Int1         ,   Name2               ,  weight1    ,       date1           ,   Name3           ,   Name4  ,        Name5           , Name6       ,       Name7   ,  Meters1    ,   Meters2   ,   Meters3        ) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Embroidery_Jobwork_Receipt_Code , a.Company_IdNo , a.Embroidery_Jobwork_Receipt_No   , a.for_OrderBy, a.Embroidery_Jobwork_Receipt_Date   , tP.Ledger_Name,  a.OrderCode_ForSelection  ,a.Item_Description  ,c.Colour_Name   ,d.Size_Name    ,a.Quantity  , a.Rate,     a.Amount  " &
                                            " from Embroidery_Jobwork_Receipt_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo  LEFT OUTER JOIN Colour_Head c ON a.Colour_IdNo = c.Colour_IdNo LEFT OUTER JOIN Size_Head d ON a.Size_IdNo = d.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Embroidery_Jobwork_Receipt_Date between @fromdate and @todate Order by a.Embroidery_Jobwork_Receipt_Code ,a.Embroidery_Jobwork_Receipt_Date, a.for_OrderBy, a.Embroidery_Jobwork_Receipt_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  weight1,   date1, Meters1,Meters2,Meters3,Meters4 from reporttemp Order by Date1, name2, name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Inward_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery delivery register", "embroidery delivery register - 1"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Sales_Delivery_Code like 'EMDEL-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                    If (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.JOB_NO = '" & cbo_Inputs3.Text & "'"
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1            ,       Int1         ,   Name2               ,  weight1    ,       date1             ,   Name3           ,   Name4                 ,        Name5           , Name6       ,       Name7   ,  Meters1    ,   Meters2   ,   Meters3    ,Int2       , Name8) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Sales_Delivery_Code , a.Company_IdNo , a.Sales_Delivery_No      , a.for_OrderBy, a.Sales_Delivery_Date   , tP.Ledger_Name   ,  a.OrderCode_ForSelection  ,a.Item_Description  ,c.Colour_Name   ,d.Size_Name    ,a.Quantity  , a.Rate    ,     a.Amount    , Sl_No,A.Job_No " &
                                            " from Sales_Delivery_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo  LEFT OUTER JOIN Colour_Head c ON a.Colour_IdNo = c.Colour_IdNo LEFT OUTER JOIN Size_Head d ON a.Size_IdNo = d.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    'Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Name1, Date1, Name2 ", con)
                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery delivery register" Then
                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,* from reporttemp Order by Date1, name2, name1 ", con)
                    Else
                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,* from reporttemp Order by  convert(int,name2), name1 ", con)
                    End If

                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery jobwork delivery register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " A.ORDERCODE_FORSELECTION = '" & cbo_Inputs3.Text & "'"
                    End If


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1            ,       Int1         ,   Name2               ,  weight1    ,       date1             ,   Name3           ,   Name4                 ,        Name5           , Name6       ,       Name7   ,  Meters1    ,   Meters2   ,   Meters3        ) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,a.Embroidery_Jobwork_Delivery_Code , a.Company_IdNo , a.Embroidery_Jobwork_Delivery_No      , a.for_OrderBy, a.Embroidery_Jobwork_Delivery_Date   , tP.Ledger_Name   ,  a.OrderCode_ForSelection  ,a.Item_Description  ,c.Colour_Name   ,d.Size_Name    ,a.Quantity  , a.Rate    ,     a.Amount  " &
                                            " from Embroidery_Jobwork_Delivery_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON a.Ledger_IdNo = tP.Ledger_IdNo  LEFT OUTER JOIN Colour_Head c ON a.Colour_IdNo = c.Colour_IdNo LEFT OUTER JOIN Size_Head d ON a.Size_IdNo = d.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Embroidery_Jobwork_Delivery_Date between @fromdate and @todate Order by a.Embroidery_Jobwork_Delivery_Code ,a.Embroidery_Jobwork_Delivery_Date, a.for_OrderBy, a.Embroidery_Jobwork_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  weight1,   date1, Meters1,Meters2,Meters3,Meters4 from reporttemp Order by Date1, name2, name1 ", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Jobwork_Delivery_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery expense register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If


                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    'RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " eed.Expense_IdNo = " & Str(Val(Common_Procedures.Expense_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    cmd.CommandText = " Insert into ReportTemp (Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3                      ,  Name1                         ,    Meters1              ,            Meters2           ,         Meters3            ,         Meters4             ,   Currency1    ,    Currency2       ,     Date1          ,  Int1) " &
                                          " Select                  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'   ,eh.expense_name                 ,    eed.First_Shift      ,        eed.Second_Shift      ,      eed.Third_Shift       ,         eed.total_shift     ,   eed.rate     ,   eed.amount       , eed.Expense_date  , eed.sl_no" &
                                          " from Embroidery_Expense_Details eed INNER JOIN Expense_Head EH ON eed.Expense_IdNo <> 0 and eh.Expense_IdNo = eed.Expense_IdNo where eed.Expense_Date between @fromdate and @todate " & IIf(Len(Trim(RptCondt)) > 0, " and " & RptCondt, "")
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, Int1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1,Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Expense_Register_1.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "embroidery earning expense comparision register", "embroidery earning expense comparision register1"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    'cmd.CommandText = "Truncate table EntryTemp"
                    'cmd.ExecuteNonQuery()

                    '---Purchase

                    cmd.CommandText = " Insert into ReportTemp (Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3                      , Name1                         ,       Name2              ,    Name3               ,  Name4         ,     Currency1    ,  Meters1         ,Currency2          ,Date1            ,           Name7 ,   Int2) " &
                                          " Select                 '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'    ,a.Ordercode_forSelection        ,       a.Design           ,   C.Colour_Name        , S.Size_Name     ,     A.Rate     ,  A.Pieces     ,A.Amount          ,a.production_date   ,  'Earning'            ,   a.sl_no" &
                                          " from Production_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo inner join Colour_Head C On a.Colour_IdNo =  C.Colour_IdNo " &
                                          "  inner join Size_Head S On a.Size_IdNo =  S.Size_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Production_Date between @fromdate and @todate"

                    cmd.ExecuteNonQuery()

                    cmd.CommandText = " Insert into ReportTemp (Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3                      ,  Name6                         ,    Meters2              ,            Meters3           ,         Meters4            ,         Meters5             ,   Currency3    ,    Currency4       ,     Date1         , Name7           ,  Int2) " &
                                          " Select                  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'   ,eh.expense_name                 ,    eed.First_Shift      ,        eed.Second_Shift      ,      eed.Third_Shift       ,         eed.total_shift     ,   eed.rate     ,   eed.amount       , eed.Expense_date  , 'Expense'    , eed.sl_no" &
                                          " from Embroidery_Expense_Details eed INNER JOIN Expense_Head EH ON eed.Expense_IdNo <> 0 and eh.Expense_IdNo = eed.Expense_IdNo where eed.Expense_Date between @fromdate and @todate"

                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, Int2,Int3", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1,Name7, Int2,Int3", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1
                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery earning expense comparision register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Earnings_Expenses_Tally - A.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Earnings_Expenses_Comparision.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery delivery pending register", "embroidery delivery pending register1"

                    Dim delQty As Single = 0
                    Dim recQty As Single = 0
                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempsub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                    If (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.JOB_NO = '" & cbo_Inputs3.Text & "'"
                    End If

                If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.Colour_IdNo = " & Common_Procedures.Colour_NameToIdNo(con, cbo_Inputs5.Text).ToString
                End If

                If cbo_Inputs6.Visible = True And Trim(cbo_Inputs6.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.Size_IdNo = " & Common_Procedures.Size_NameToIdNo(con, cbo_Inputs6.Text).ToString
                End If

                cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,      Int1                  ,   Name2          ,  weight1     ,       date1                ,           Name3           ,        Name4      ,      Name5      ,  Meters1  , meters5,   Name10                ,Name9     , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'    , a.Company_IdNo         , a.Simple_Receipt_No   , a.for_OrderBy, a.Simple_Receipt_Date   ,   b.Item_Description     , c.Colour_Name     ,  d.Size_Name   ,  b.Quantity ,0      , b.OrderCode_ForSelection,b.Job_No  ,   1    from Simple_Receipt_Head a  INNER JOIN Simple_Receipt_Details b ON a.Simple_Receipt_Code = b.Simple_Receipt_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Simple_Receipt_Date between @fromdate and @todate Order by a.Simple_Receipt_Code ,a.Simple_Receipt_Date, a.for_OrderBy, a.Simple_Receipt_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                ,            Name3       ,   Name7      ,      Name8      ,  Meters2  , meters5,           Name10            ,Name9      , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Sales_Delivery_No   , a.for_OrderBy, a.Sales_Delivery_Date      ,   b.Item_Description  , c.Colour_Name  ,  d.Size_Name   ,  b.Quantity ,0     , b.OrderCode_ForSelection,b.Job_No   ,2 from Sales_Delivery_Head a  INNER JOIN Sales_Delivery_Details b ON a.Sales_Delivery_Code = b.Sales_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  b.delivery_PURPOSE = 'Good' AND  a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                ,            Name3       ,   Name7      ,      Name8      ,  Meters3  , meters5,           Name10            ,Name9      , Int2) " &
                    '                  " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Sales_Delivery_No   , a.for_OrderBy, a.Sales_Delivery_Date      ,   b.Item_Description  , c.Colour_Name  ,  d.Size_Name   ,  b.Quantity ,0     , b.OrderCode_ForSelection,b.Job_No   ,3 from Sales_Delivery_Head a  INNER JOIN Sales_Delivery_Details b ON a.Sales_Delivery_Code = b.Sales_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " NOT b.delivery_PURPOSE = 'Good' AND a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update ReportTemp set Meters3 = (select ISNULL(sum(quantity),0) from sales_delivery_details where company_idno = int1 and sales_delivery_no = Name6 and " &
                                      " sales_delivery_date = date1 And item_description = Name3 And Colour_idno = (select colour_idno from colour_head where colour_name = name7) " &
                                      " and  Size_idno = (select Size_idno from Size_head where Size_name = name8) and not delivery_PURPOSE = 'Good')  "
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery delivery pending register1" Then

                        cmd.CommandText = "DELETE FROM REPORTTEMPSUB"
                        cmd.ExecuteNonQuery()

                        Dim Dtbl2 As New DataTable
                        Dim Dtbl3 As New DataTable
                        Dim Dtbl4 As New DataTable

                        Da = New SqlClient.SqlDataAdapter("select INT3 from reporttempsub", con)
                        Da.Fill(Dtbl1)

                        Dtbl1 = New DataTable
                        Dtbl2 = New DataTable
                        Dtbl3 = New DataTable

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 = 1 order by name9,name10,date1,weight1", con)
                        Da.Fill(Dtbl2)

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 >1  order by name9,name10,date1,weight1", con)
                        Da.Fill(Dtbl3)

                        'Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 = 3 order by date1,weight1", con)
                        'Da.Fill(Dtbl4)

                        Dim RCnt As String = Dtbl2.Rows.Count

                        If Dtbl3.Rows.Count > RCnt Then
                            RCnt = Dtbl3.Rows.Count
                        End If

                        'If Dtbl4.Rows.Count > RCnt Then
                        '    RCnt = Dtbl4.Rows.Count
                        'End If

                        Dim JobNo As String = ""
                        Dim OrdNo As String = ""

                        For j As Integer = 0 To RCnt - 1

                            Dim inserted As Boolean = False

                            If j < Dtbl2.Rows.Count Then

                                cmd.CommandText = "Insert into ReportTempSub(  Int1                                       , Name2                                             ,  weight1                                     ,       date1                                                    ,           Name3                                ,        Name4                                       ,      Name5                                        ,  Meters1                                           , meters5,   Name10                                          ,Name9                                             , Int2 ,Int3) " &
                                      " values                        (" & Dtbl2.Rows(j).Item("Int1").ToString & "   , '" & Dtbl2.Rows(j).Item("Name2").ToString & "'   , " & Dtbl2.Rows(j).Item("Weight1").ToString & ", '" & Format(Dtbl2.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "'   , '" & Dtbl2.Rows(j).Item("Name2").ToString & "'  ,  '" & Dtbl2.Rows(j).Item("Name4").ToString & "'   ,  '" & Dtbl2.Rows(j).Item("Name5").ToString & "'   ,   " & Dtbl2.Rows(j).Item("Meters1").ToString & "   ,0       ,  '" & Dtbl2.Rows(j).Item("Name10").ToString & "'  , '" & Dtbl2.Rows(j).Item("Name9").ToString & "'    ,   1      ," & j.ToString & ")"
                                'MsgBox(cmd.CommandText)
                                cmd.ExecuteNonQuery()
                                JobNo = Dtbl2.Rows(j).Item("Name9").ToString
                                OrdNo = Dtbl2.Rows(j).Item("Name10").ToString
                                inserted = True

                            End If

                            If j < Dtbl3.Rows.Count Then

                                If Not inserted Or JobNo <> Dtbl3.Rows(j).Item("Name9").ToString Or OrdNo <> Dtbl3.Rows(j).Item("Name10").ToString Then
                                    cmd.CommandText = "Insert into ReportTempSub(  Int1                                  , Name6                                             ,  weight1                                     ,       date2                                                    ,           Name3                                ,        Name7                                       ,      Name8                                        ,  Meters2                                           ,Meters3                                        , meters5,   Name10                                          ,Name9                                             , Int2     ,Int3) " &
                                      " values                        (" & Dtbl3.Rows(j).Item("Int1").ToString & "   , '" & Dtbl3.Rows(j).Item("Name6").ToString & "'   , " & Dtbl3.Rows(j).Item("Weight1").ToString & ", '" & Format(Dtbl3.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "'   , '" & Dtbl3.Rows(j).Item("Name2").ToString & "'  ,  '" & Dtbl3.Rows(j).Item("Name7").ToString & "'   ,  '" & Dtbl3.Rows(j).Item("Name8").ToString & "'   ,   " & Dtbl3.Rows(j).Item("Meters2").ToString & "       ,  " & Dtbl3.Rows(j).Item("Meters3").ToString & ",     0       ,  '" & Dtbl3.Rows(j).Item("Name10").ToString & "'  , '" & Dtbl3.Rows(j).Item("Name9").ToString & "'    ,   1," & j.ToString & " )"
                                    cmd.ExecuteNonQuery()
                                    inserted = True
                                Else
                                    cmd.CommandText = "Update ReportTempSub set  Name6      = '" & Dtbl3.Rows(j).Item("Name6").ToString & "'  ,  Name7      = '" & Dtbl3.Rows(j).Item("Name7").ToString & "'  ,  Name8      = '" & Dtbl3.Rows(j).Item("Name8").ToString & "'  ," &
                                                      " date2     =  '" & Format(Dtbl3.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "' ,  Meters2    = " & Dtbl3.Rows(j).Item("Meters2").ToString & " ,          Meters3   = " & Dtbl3.Rows(j).Item("Meters3").ToString & "  where int3 = " & j.ToString
                                    cmd.ExecuteNonQuery()
                                End If

                            End If


                        Next

                        cmd.CommandText = "delete from reporttemp"
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3           ,      Int1                  ,   Name2            , name6       , weight1     ,       date1                ,    date2        ,           Name3           ,        Name4      ,      Name5      ,  Meters1            , meters2             , meters3            ,      meters4                                ,   Name10                ,Name9     , Int2        ,Int3    , Name7    ,Name8) " &
                                          " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "'  , '" & Trim(RptHeading3) & "'   ,      Int1                  ,   Name2            , name6       , weight1     ,       date1                ,    date2        ,           Name3           ,        Name4      ,      Name5      ,  isnull(Meters1,0)  , isnull(meters2,0)   , isnull(meters3,0)  ,      isnull(meters2,0) + isnull(meters3,0)  ,   Name10                ,Name9     , Int2        ,Int3     ,Name7    ,Name8 from reporttempsub"
                        cmd.ExecuteNonQuery()

                    End If

                    'Da = New SqlClient.SqlDataAdapter("Select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  Date2,   date1, Meters1,Meters2,name8,meters4,meters5 from reporttemp Order by Date1, name2, name1 ", con)
                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery delivery pending register" Then
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ORDER BY NAME10,NAME3,DATE1,INT2,NAME2,NAME6", con)
                    Else
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ORDER BY NAME9, NAME10, INT3", con)
                    End If

                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ORDER BY NAME10,NAME3,DATE1,INT2,NAME2,NAME6", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register.rdlc"
                    'MsgBox(RptViewer.LocalReport.ReportPath)

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery delivery pending register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Quantity_Tally.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register 1.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery delivery pending register detailed", "embroidery delivery pending register detailed wo orderno"

                    Dim delQty As Single = 0
                    Dim recQty As Single = 0
                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempsub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.ORDERCODE_FORSELECTION = '" & cbo_Inputs4.Text & "'"
                    End If

                    If (cbo_Inputs4.Visible = False Or Trim(cbo_Inputs4.Text) = "") And cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.JOB_NO = '" & cbo_Inputs3.Text & "'"
                    End If

                If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.Colour_IdNo = " & Common_Procedures.Colour_NameToIdNo(con, cbo_Inputs5.Text).ToString
                End If

                If cbo_Inputs6.Visible = True And Trim(cbo_Inputs6.Text) <> "" Then
                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " B.Size_IdNo = " & Common_Procedures.Size_NameToIdNo(con, cbo_Inputs6.Text).ToString
                End If

                cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()
                    ' b.Item_Description
                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,      Int1                  ,   Name2                  ,  weight1       ,       date1                ,           Name3           ,        Name4      ,      Name5      ,  Meters1  , meters5,   Name10                ,Name9     , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'    , a.Company_IdNo         , a.Simple_Receipt_No   , a.for_OrderBy  , a.Simple_Receipt_Date      ,  ''                       , c.Colour_Name     ,  d.Size_Name   ,  b.Quantity ,0      , b.OrderCode_ForSelection,b.Job_No  ,   1    from Simple_Receipt_Head a  INNER JOIN Simple_Receipt_Details b ON a.Simple_Receipt_Code = b.Simple_Receipt_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Simple_Receipt_Date between @fromdate and @todate Order by a.Simple_Receipt_Code ,a.Simple_Receipt_Date, a.for_OrderBy, a.Simple_Receipt_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                    ,            Name3       ,   Name4      ,      Name5      ,  Meters2  , meters5,           Name10            ,Name9      , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Sales_Delivery_No   , a.for_OrderBy, a.Sales_Delivery_Date      ,   ''                   , c.Colour_Name  ,  d.Size_Name   ,  b.Quantity ,0     , b.OrderCode_ForSelection,b.Job_No   ,2 from Sales_Delivery_Head a  INNER JOIN Sales_Delivery_Details b ON a.Sales_Delivery_Code = b.Sales_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  b.delivery_PURPOSE = 'Good' AND  a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                ,            Name3       ,   Name4      ,      Name5      ,  Meters3  , meters6,           Name10            ,Name9      , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Sales_Delivery_No   , a.for_OrderBy, a.Sales_Delivery_Date      ,   b.Item_Description  , c.Colour_Name  ,  d.Size_Name   ,  b.Quantity ,0     , b.OrderCode_ForSelection,b.Job_No   ,3 from Sales_Delivery_Head a  INNER JOIN Sales_Delivery_Details b ON a.Sales_Delivery_Code = b.Sales_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " b.delivery_PURPOSE = 'Mistake' AND a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                    ,            Name3      ,   Name4        ,      Name5      ,  Meters4   , meters7,           Name10            ,Name9      , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Sales_Delivery_No   , a.for_OrderBy, a.Sales_Delivery_Date      ,   b.Item_Description  , c.Colour_Name  ,  d.Size_Name    ,  b.Quantity ,0     , b.OrderCode_ForSelection,b.Job_No   ,4 from Sales_Delivery_Head a  INNER JOIN Sales_Delivery_Details b ON a.Sales_Delivery_Code = b.Sales_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " b.delivery_PURPOSE = 'UnEmb' AND a.Sales_Delivery_Date between @fromdate and @todate Order by a.Sales_Delivery_Code ,a.Sales_Delivery_Date, a.for_OrderBy, a.Sales_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    'And item_description = Name3

                    'cmd.CommandText = "Update ReportTemp set Meters3 = (select ISNULL(sum(quantity),0) from sales_delivery_details where company_idno = int1 and sales_delivery_no = Name6 and " &
                    '                  " sales_delivery_date = date1  And Colour_idno = (select colour_idno from colour_head where colour_name = name4) " &
                    '                  " and  Size_idno = (select Size_idno from Size_head where Size_name = name5) and delivery_PURPOSE = 'Mistake') WHERE INT2 = 2 "
                    'cmd.ExecuteNonQuery()

                    ''And item_description = Name3

                    'cmd.CommandText = "Update ReportTemp set Meters4 = (select ISNULL(sum(quantity),0) from sales_delivery_details where company_idno = int1 and sales_delivery_no = Name6 and " &
                    '                  " sales_delivery_date = date1  And Colour_idno = (select colour_idno from colour_head where colour_name = name4) " &
                    '                  " and  Size_idno = (select Size_idno from Size_head where Size_name = name5) and delivery_PURPOSE = 'UnEmb') WHERE INT2 = 2  "
                    'cmd.ExecuteNonQuery()

                    cmd.CommandText = "DELETE FROM REPORTTEMPSUB"
                    cmd.ExecuteNonQuery()

                    Dim Dtbl2 As New DataTable
                    Dim Dtbl3 As New DataTable
                    Dim Dtbl4 As New DataTable

                    Da = New SqlClient.SqlDataAdapter("select INT3 from reporttempsub", con)
                    Da.Fill(Dtbl1)

                    Dtbl1 = New DataTable
                    Dtbl2 = New DataTable
                    Dtbl3 = New DataTable

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 = 1 order by name9,name10,name4,name5,date1,weight1", con)
                    Da.Fill(Dtbl2)

                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 > 1  order by name9,name10,name4,name5,date1,weight1", con)
                    Da.Fill(Dtbl3)

                    'Da = New SqlClient.SqlDataAdapter("select * from reporttemp where int2 = 3 order by date1,weight1", con)
                    'Da.Fill(Dtbl4)

                    Dim RCnt As String = Dtbl2.Rows.Count

                    If Dtbl3.Rows.Count > RCnt Then
                        RCnt = Dtbl3.Rows.Count
                    End If

                    'If Dtbl4.Rows.Count > RCnt Then
                    '    RCnt = Dtbl4.Rows.Count
                    'End If

                    Dim JobNo As String = ""
                    Dim OrdNo As String = ""
                    Dim ColName As String = ""
                    Dim SizName As String = ""
                    Dim Sno As Integer = 0

                    For j As Integer = 0 To RCnt - 1

                        Dim inserted As Boolean = False

                        If j < Dtbl2.Rows.Count Then

                            Sno = Sno + 1
                            cmd.CommandText = "Insert into ReportTempSub(  Int1                                       , Name2                                             ,  weight1                                     ,       date1                                                    ,           Name3                                ,        Name4                                       ,      Name5                                        ,  Meters1                                           , meters5,   Name10                                          ,Name9                                             , Int2 ,Int3) " &
                                      " values                          (" & Dtbl2.Rows(j).Item("Int1").ToString & "   , '" & Dtbl2.Rows(j).Item("Name2").ToString & "'   , " & Dtbl2.Rows(j).Item("Weight1").ToString & ", '" & Format(Dtbl2.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "'   , ''                                            ,  '" & Dtbl2.Rows(j).Item("Name4").ToString & "'   ,  '" & Dtbl2.Rows(j).Item("Name5").ToString & "'   ,   " & Dtbl2.Rows(j).Item("Meters1").ToString & "   ,0       ,  '" & Dtbl2.Rows(j).Item("Name10").ToString & "'  , '" & Dtbl2.Rows(j).Item("Name9").ToString & "'    ,   1      ," & Sno.ToString & ")"
                            'MsgBox(cmd.CommandText)
                            cmd.ExecuteNonQuery()

                            JobNo = Dtbl2.Rows(j).Item("Name9").ToString
                            OrdNo = Dtbl2.Rows(j).Item("Name10").ToString
                            ColName = Dtbl2.Rows(j).Item("Name4").ToString
                            SizName = Dtbl2.Rows(j).Item("Name5").ToString

                            inserted = True

                    End If

                        If j < Dtbl3.Rows.Count Then

                            If Not inserted Or JobNo <> Dtbl3.Rows(j).Item("Name9").ToString Or OrdNo <> Dtbl3.Rows(j).Item("Name10").ToString Or ColName <> Dtbl3.Rows(j).Item("Name4").ToString Or SizName <> Dtbl3.Rows(j).Item("Name5").ToString Then
                                Sno = Sno + 1
                                cmd.CommandText = "Insert into ReportTempSub(  Int1                                  , Name6                                             ,  weight1                                     ,       date2                                                    ,           Name3                                ,        Name4                                       ,        Name5                                       ,      Name8                                        ,  Meters2                                           ,Meters3                                            ,Meters4                                            , meters5,   Name10                                          ,Name9                                             , Int2     ,Int3) " &
                                      " values                        (" & Dtbl3.Rows(j).Item("Int1").ToString & "   , '" & Dtbl3.Rows(j).Item("Name6").ToString & "'   , " & Dtbl3.Rows(j).Item("Weight1").ToString & ", '" & Format(Dtbl3.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "'   , ' '                                            ,  '" & Dtbl3.Rows(j).Item("Name4").ToString & "'   ,  '" & Dtbl3.Rows(j).Item("Name5").ToString & "'    ,  '" & Dtbl3.Rows(j).Item("Name8").ToString & "'   ,   " & Dtbl3.Rows(j).Item("Meters2").ToString & "   ,  " & Dtbl3.Rows(j).Item("Meters3").ToString & "  ,  " & Dtbl3.Rows(j).Item("Meters4").ToString & ",     0       ,  '" & Dtbl3.Rows(j).Item("Name10").ToString & "'  , '" & Dtbl3.Rows(j).Item("Name9").ToString & "'    ,   1," & Sno.ToString & " )"
                                cmd.ExecuteNonQuery()
                                inserted = True

                            Else
                                cmd.CommandText = "Update ReportTempSub set  Name6      = '" & Dtbl3.Rows(j).Item("Name6").ToString & "'  , " &
                                                      " date2     =  '" & Format(Dtbl3.Rows(j).Item("Date1"), "dd-MMM-yyyy") & "' ,  Meters2    = " & Dtbl3.Rows(j).Item("Meters2").ToString & " ,    " &
                                                      " Meters3   = " & Dtbl3.Rows(j).Item("Meters3").ToString & " ,  Meters4   = " & Dtbl3.Rows(j).Item("Meters4").ToString & "  where int3 = " & Sno.ToString
                                cmd.ExecuteNonQuery()
                            End If

                        End If


                    Next

                    cmd.CommandText = "delete from reporttemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3           ,      Int1                  ,   Name2            , name6       , weight1     ,       date1                ,    date2        ,           Name3           ,        Name4      ,      Name5      ,  Meters1            , meters2             , meters3            ,      meters4                  ,Meters5                                               ,   Name10                ,Name9     , Int2        ,Int3    , Name7    ,Name8) " &
                                          " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "'  , '" & Trim(RptHeading3) & "'   ,      Int1                  ,   Name2            , name6       , weight1     ,       date1                ,    date2        ,           Name3           ,        Name4      ,      Name5      ,  isnull(Meters1,0)  , isnull(meters2,0)   , isnull(meters3,0)  ,      isnull(meters4,0)    , isnull(meters2,0)+isnull(meters3,0)+isnull(meters4,0) , Name10                ,Name9     , Int2        ,Int3     ,Name7    ,Name8 from reporttempsub"
                    cmd.ExecuteNonQuery()


                    cmd.CommandText = "UPDATE REPORTTEMP SET DATE3 = DATE1 WHERE NOT DATE1 IS NULL"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "UPDATE REPORTTEMP SET DATE3 = DATE2 WHERE DATE1 IS NULL"
                    cmd.ExecuteNonQuery()


                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    Da = New SqlClient.SqlDataAdapter("select Distinct Int1,Name10,Name9 from reporttemp order by int1,Name10,Name9", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    Dim RepEntCnt As Integer = 0
                    Dim InvCnt As Integer = 0

                    For I As Integer = 0 To Dtbl1.Rows.Count - 1

                        Da = New SqlClient.SqlDataAdapter("select Sales_Code,Sales_No,sales_Date,Sum(Quantity) from Sales_Details Where " &
                                                          " OrderCode_forSelection= '" & Dtbl1.Rows(I).Item(1) & "' and Job_No = '" & Dtbl1.Rows(I).Item(2) & "' and Company_IdNo =  " & Dtbl1.Rows(I).Item(0).ToString & " group by  Sales_Code,Sales_No,sales_Date", con)

                        Dtbl2 = New DataTable
                        Da.Fill(Dtbl2)

                        If Dtbl2.Rows.Count = 0 Then
                            GoTo b
                        Else
                            InvCnt = Dtbl2.Rows.Count
                        End If

                        Da = New SqlClient.SqlDataAdapter("select distinct int3 from reporttemp where " &
                                                          "Name10 = '" & Dtbl1.Rows(I).Item(1) & "' and  Name9 = '" & Dtbl1.Rows(I).Item(2) & "' order by int3 ", con)

                        Dtbl3 = New DataTable
                        Da.Fill(Dtbl3)

                        RepEntCnt = Dtbl3.Rows.Count

                        For K = 1 To InvCnt
                            If K <= RepEntCnt Then
                                cmd.CommandText = "Update ReportTemp set Date4 = '" & Format(Dtbl2.Rows(K - 1).Item(2), "dd-MMM-yyyy") & "',Name3 = '" & Dtbl2.Rows(K - 1).Item(1) & "'," &
                                                  " Meters6 = " & Dtbl2.Rows(K - 1).Item(3).ToString & " Where Int3 = " & Dtbl3.Rows(K - 1).Item(0).ToString

                            Else
                            cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1                        ,Name10                                          ,    Name9                                      ,      date4                                                  ,    Name3                         ,Meters6                                    , Int3) " &
                                     " values(  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'               , " & Dtbl1.Rows(I).Item(0).ToString & ", '" & Dtbl1.Rows(I).Item("Name10").ToString & "', '" & Dtbl1.Rows(I).Item("Name9").ToString & "','" & Format(Dtbl2.Rows(K - 1).Item(2), "dd-MMM-yyyy") & "'  ,'" & Dtbl2.Rows(K - 1).Item(1) & "'," & Dtbl2.Rows(K - 1).Item(3).ToString & ",(Select Isnull(Max(int3),0)+1 from reporttemp))"
                            cmd.ExecuteNonQuery()
                            End If
                            cmd.ExecuteNonQuery()
                        Next

b:

                        Dtbl2 = Nothing
                        Dtbl3 = Nothing

                    Next

                    Dtbl1.Dispose()
                    'Dtbl2.Dispose()
                    'Dtbl3.Dispose()



                    Da = New SqlClient.SqlDataAdapter("Select * from reporttemp ORDER BY name9, name4, NAME10, NAME5, DATE3, Convert(Int, name1), date2, Convert(Int, name6)", con)


                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("Select * from reporttemp ORDER BY NAME10,NAME3,DATE1,INT2,NAME2,NAME6", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register.rdlc"
                    'MsgBox(RptViewer.LocalReport.ReportPath)

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery delivery pending register detailed" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register_Detailed.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register_Detailed_WO_OrderNo.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery jobwork receipt pending register", "embroidery jobwork receipt pending register1"

                    Dim delQty As Single = 0
                    Dim recQty As Single = 0
                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES Not SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTempsub"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " And ", "") & " b.OrderCode_ForSelection = '" & cbo_Inputs3.Text & "'"
                    End If


                    cmd.CommandText = "Truncate table EntryTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1             ,       Int1                  ,   Name2          ,  weight1     ,       date1                ,           Name3           ,        Name4      ,      Name5      ,  Meters1  , meters5,   Name10            , Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'    ,a.Electronic_Reference_No , a.Company_IdNo         , a.Embroidery_Jobwork_Receipt_No   , a.for_OrderBy, a.Embroidery_Jobwork_Receipt_Date   ,   b.Item_Description     , c.Colour_Name     ,  d.Size_Name   ,  b.Quantity ,0      , b.OrderCode_ForSelection,1    from Embroidery_Jobwork_Receipt_Head a  INNER JOIN Embroidery_Jobwork_Receipt_Details b ON a.Embroidery_Jobwork_Receipt_Code = b.Embroidery_Jobwork_Receipt_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Embroidery_Jobwork_Receipt_Date between @fromdate and @todate Order by a.Embroidery_Jobwork_Receipt_Code ,a.Embroidery_Jobwork_Receipt_Date, a.for_OrderBy, a.Embroidery_Jobwork_Receipt_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,           Int1         ,   Name6               ,  weight1     ,       date1                ,            Name3       ,   Name4      ,      Name5      ,  Meters2  , meters5,           Name10       ,Int2) " &
                                      " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "'     , a.Company_IdNo           , a.Embroidery_Jobwork_Delivery_No   , a.for_OrderBy, a.Embroidery_Jobwork_Delivery_Date      ,   b.Item_Description  , c.Colour_Name  ,  d.Size_Name   ,  b.Quantity ,0     , b.OrderCode_ForSelection,2 from Embroidery_Jobwork_Delivery_Head a  INNER JOIN Embroidery_Jobwork_Delivery_Details b ON a.Embroidery_Jobwork_Delivery_Code = b.Embroidery_Jobwork_Delivery_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo  LEFT OUTER JOIN Colour_Head C ON c.Colour_IdNo <> 0 and c.Colour_IdNo = b.Colour_IdNo  LEFT OUTER JOIN Size_Head D ON d.Size_IdNo <> 0 and d.Size_IdNo = b.Size_IdNo  Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Embroidery_Jobwork_Delivery_Date between @fromdate and @todate Order by a.Embroidery_Jobwork_Delivery_Code ,a.Embroidery_Jobwork_Delivery_Date, a.for_OrderBy, a.Embroidery_Jobwork_Delivery_No, a.Company_IdNo"
                    cmd.ExecuteNonQuery()


                    'Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,Name1 ,Name2,Name3,Name4,Name5,Name6,Name7,  Date2,   date1, Meters1,Meters2,name8,meters4,meters5 from reporttemp Order by Date1, name2, name1 ", con)
                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp ORDER BY NAME10,NAME3,DATE1,INT2,NAME2,NAME6", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        'Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1, Name2, Meters1, Date1, Name3, Weight1, Currency1 , Name4 from reporttemp Order by Date1, meters1, name2, name1", con)

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp ORDER BY NAME10,NAME3,DATE1,INT2,NAME2,NAME6", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    'RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Delivery_Pending_Register.rdlc"
                    'MsgBox(RptViewer.LocalReport.ReportPath)

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery jobwork receipt pending register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Jobwork_Quantity_Tally.rdlc"
                    Else
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Jobwork_Receipt_Pending_Register.rdlc"
                    End If

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "embroidery quotation register", "embroidery quotation register - 1", "embroidery quotation register - 2"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt


                    RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.Sales_Quotation_Code like 'GEQUO-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If


                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.UID = '" & cbo_Inputs3.Text & "'"
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" And UCase(Trim(cbo_Inputs4.Text)) <> "ALL" Then

                        If UCase(Trim(cbo_Inputs4.Text)) = "RATE CONFIRMED" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.FINALISED_RATE > 0"
                        ElseIf UCase(Trim(cbo_Inputs4.Text)) = "RATE NOT CONFIRMED" Then
                            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " (QH.FINALISED_RATE = 0 OR FINALISED_RATE IS NULL)"
                        End If

                    End If

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3         ,     Name1              ,     Date1               ,  Meters1        ,  Name2         , Currency1    ,   Name3    ,   Name4     ,   Name5      ,  Meters2    ,   Meters3    ,  Currency2    ,Currency3       ,Currency4    ,Currency5       , Name6             ,Currency6      ,Name7               ,Int5) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,QH.Sales_Quotation_Code , QH.Sales_Quotation_Date ,  Total_Qty      ,tp.Ledger_Name  , Net_Amount   , QH.Order_No   ,   Design1   , Design2      , Stitches1   ,  Stitches2   ,Rate_Applique  ,Rate_Embroidery ,Rate_Stitches,Rate_Pasting, Sales_Quotation_No,Finalised_Rate ,qh.UID              ,O.Order_Program_No" &
                                            " from Sales_Quotation_Head QH INNER JOIN Company_Head tZ ON QH.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON QH.Ledger_IdNo = tP.Ledger_IdNo Inner Join Order_Program_Head O on O.OrderCode_forSelection = qh.UID Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " Sales_Quotation_Date between @fromdate and @todate Order by Sales_Quotation_Code ,Sales_Quotation_Date, Sales_Quotation_No, QH.Company_IdNo"
                    cmd.ExecuteNonQuery()

                    If Trim(LCase(RptIpDet_ReportName)) = "embroidery quotation register" Then
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "embroidery quotation register - 1" Then
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by convert(int,name6) , Date1, name2, name1 ", con)
                    Else
                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by INT5, Date1, name2, name1 ", con)
                    End If

                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Quotation_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "embroidery pending quotation register"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt


                    'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.Sales_Quotation_Code like 'GEQUO-%'"

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " O.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " O.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    'If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                    'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.UID = '" & cbo_Inputs3.Text & "'"
                    'End If

                    'If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" And UCase(Trim(cbo_Inputs4.Text)) <> "ALL" Then

                    '    If UCase(Trim(cbo_Inputs4.Text)) = "RATE CONFIRMED" Then
                    '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " QH.FINALISED_RATE > 0"
                    '    ElseIf UCase(Trim(cbo_Inputs4.Text)) = "RATE NOT CONFIRMED" Then
                    '        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " (QH.FINALISED_RATE = 0 OR FINALISED_RATE IS NULL)"
                    '    End If

                    'End If

                    cmd.CommandText = "Insert into ReportTemp(Company_Name,    Company_Address1     ,   Company_Address2      ,    Report_Heading1         ,     Report_Heading2        ,     Report_Heading3             ,Name1                   ,   Int1             ,Name2             ,   Date1               , Name3      ) " &
                                            " Select  '" & Trim(CompName) & "', '" & Trim(CompAdd1) & "', '" & Trim(CompAdd2) & "', '" & Trim(RptHeading1) & "', '" & Trim(RptHeading2) & "', '" & Trim(RptHeading3) & "' ,O.OrderCode_forSelection, O.Order_Program_No ,tP.Ledger_Name    ,  O.Order_Program_Date ,O.Design " &
                                            " from Order_Program_Head O INNER JOIN Company_Head tZ ON O.Company_IdNo = tZ.Company_IdNo  INNER JOIN Ledger_Head tP ON O.Ledger_IdNo = tP.Ledger_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") &
                                            " Order_Program_Date between @fromdate and @todate  AND NOT OrderCode_forSelection IN (SELECT UID FROM SALES_QUOTATION_HEAD WHERE NOT UID IS NULL) Order by  O.Order_Program_No"

                    cmd.ExecuteNonQuery()


                    Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by INT1 ", con)


                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select * from reporttemp Order by Date1, name2, name1 ", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Embroidery_Quotation_Pending_Register.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True


                Case "general other purchase gst register", "general other sales gst register", "general other credit note gst register", "general other debit note gst register", "advance payment gst register"

                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "" And Trim(RptHeading3) <> "", vbCrLf, "") & RptHeading3
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Unit_IdNo = " & Str(Val(Common_Procedures.Unit_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If


                    If Trim(LCase(RptIpDet_ReportName)) = "general other purchase gst register" Then
                        cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1                ,   Name2        ,   meters1    ,        Date1                     ,  Name3        , Name4       ,   Date2       ,      Name6         ,   Name7     ,   meters2  ,   Meters3   ,   Meters4     ,     Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11       ) " &
                                               " Select 'GSPUR-'+ a.Other_GST_Entry_Reference_Code, a.Company_IdNo, a.Other_GST_Entry_No, a.for_OrderBy, a.Other_GST_Entry_Date,c.Ledger_Name  ,a.Bill_No       , a.Bill_Date,   b.Item_Particulars, d.Unit_NAme , b.Gst_Perc ,  b.Quantity,b.Rate            , b.Amount     , a.Gross_Amount,a.Taxable_Value  , a.CGST_Amount,a.SGST_Amount    ,a.IGST_Amount           , a.Net_Amount     ,a.Bill_Amount,0             ,     0         ,     0        ,   0         ,      0      , 0      ,  0   from Other_GST_Entry_Head a INNER JOIN Other_GST_Entry_Details b ON a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_Idno = c.Ledger_IdNo INNER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSPUR-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Select sum(z.Gross_Amount), sum(z.Taxable_Value), sum(z.CGST_Amount), sum(z.SGST_Amount), sum(z.IGST_Amount), sum(z.Net_Amount),sum(z.Bill_Amount)  from Other_GST_Entry_Head z where z.Other_GST_Entry_Reference_Code IN (Select a.Other_GST_Entry_Reference_Code from Other_GST_Entry_Head a LEFT OUTER JOIN Other_GST_Entry_Details b ON a.Company_IdNo = b.Company_IdNo and a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo  LEFT OUTER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSPUR-%') "
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other sales gst register" Then
                        cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1                ,   Name2        ,   meters1    ,        Date1                     ,  Name3        , Name4       ,   Date2       ,      Name6         ,   Name7     ,   meters2  ,   Meters3   ,   Meters4     ,     Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11       ) " &
                                               " Select 'GSSAL-'+ a.Other_GST_Entry_Reference_Code, a.Company_IdNo, a.Other_GST_Entry_No, a.for_OrderBy, a.Other_GST_Entry_Date,c.Ledger_Name  ,a.Bill_No       , a.Bill_Date,   b.Item_Particulars, d.Unit_NAme , b.Gst_Perc ,  b.Quantity,b.Rate            , b.Amount     , a.Gross_Amount,a.Taxable_Value  , a.CGST_Amount,a.SGST_Amount    ,a.IGST_Amount           , a.Net_Amount     ,a.Bill_Amount,0             ,     0         ,     0        ,   0         ,      0      , 0      ,  0   from Other_GST_Entry_Head a INNER JOIN Other_GST_Entry_Details b ON a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_Idno = c.Ledger_IdNo INNER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSSAL-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Select sum(z.Gross_Amount), sum(z.Taxable_Value), sum(z.CGST_Amount), sum(z.SGST_Amount), sum(z.IGST_Amount), sum(z.Net_Amount),sum(z.Bill_Amount)  from Other_GST_Entry_Head z where z.Other_GST_Entry_Reference_Code IN (Select a.Other_GST_Entry_Reference_Code from Other_GST_Entry_Head a LEFT OUTER JOIN Other_GST_Entry_Details b ON a.Company_IdNo = b.Company_IdNo and a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo  LEFT OUTER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSSAL-%') "
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other credit note gst register" Then
                        cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1                ,   Name2        ,   meters1    ,        Date1                     ,  Name3        , Name4       ,   Date2       ,      Name6         ,   Name7     ,   meters2  ,   Meters3   ,   Meters4     ,     Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11       ) " &
                                               " Select 'GSCRN-'+ a.Other_GST_Entry_Reference_Code, a.Company_IdNo, a.Other_GST_Entry_No, a.for_OrderBy, a.Other_GST_Entry_Date,c.Ledger_Name  ,a.Bill_No       , a.Bill_Date,   b.Item_Particulars, d.Unit_NAme , b.Gst_Perc ,  b.Quantity,b.Rate            , b.Amount     , a.Gross_Amount,a.Taxable_Value  , a.CGST_Amount,a.SGST_Amount    ,a.IGST_Amount           , a.Net_Amount     ,a.Bill_Amount,0             ,     0         ,     0        ,   0         ,      0      , 0      ,  0   from Other_GST_Entry_Head a INNER JOIN Other_GST_Entry_Details b ON a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_Idno = c.Ledger_IdNo INNER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSCRN-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Select sum(z.Gross_Amount), sum(z.Taxable_Value), sum(z.CGST_Amount), sum(z.SGST_Amount), sum(z.IGST_Amount), sum(z.Net_Amount),sum(z.Bill_Amount)  from Other_GST_Entry_Head z where z.Other_GST_Entry_Reference_Code IN (Select a.Other_GST_Entry_Reference_Code from Other_GST_Entry_Head a LEFT OUTER JOIN Other_GST_Entry_Details b ON a.Company_IdNo = b.Company_IdNo and a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo  LEFT OUTER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSCRN-%') "
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other debit note gst register" Then
                        cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1                ,   Name2        ,   meters1    ,        Date1                     ,  Name3        , Name4       ,   Date2       ,      Name6         ,   Name7     ,   meters2  ,   Meters3   ,   Meters4     ,     Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11       ) " &
                                               " Select 'GSDBN-'+ a.Other_GST_Entry_Reference_Code, a.Company_IdNo, a.Other_GST_Entry_No, a.for_OrderBy, a.Other_GST_Entry_Date,c.Ledger_Name  ,a.Bill_No       , a.Bill_Date,   b.Item_Particulars, d.Unit_NAme , b.Gst_Perc ,  b.Quantity,b.Rate            , b.Amount     , a.Gross_Amount,a.Taxable_Value  , a.CGST_Amount,a.SGST_Amount    ,a.IGST_Amount           , a.Net_Amount     ,a.Bill_Amount,0             ,     0         ,     0        ,   0         ,      0      , 0      ,  0   from Other_GST_Entry_Head a INNER JOIN Other_GST_Entry_Details b ON a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_Idno = c.Ledger_IdNo INNER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate  and a.Other_GST_Entry_Reference_Code LIKE 'GSDBN-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Select sum(z.Gross_Amount), sum(z.Taxable_Value), sum(z.CGST_Amount), sum(z.SGST_Amount), sum(z.IGST_Amount), sum(z.Net_Amount),sum(z.Bill_Amount)  from Other_GST_Entry_Head z where z.Other_GST_Entry_Reference_Code IN (Select a.Other_GST_Entry_Reference_Code from Other_GST_Entry_Head a LEFT OUTER JOIN Other_GST_Entry_Details b ON a.Company_IdNo = b.Company_IdNo and a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo  LEFT OUTER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GSDBN-%') "
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "advance payment gst register" Then
                        cmd.CommandText = "Insert into ReportTemp(Name1 ,   Int1                ,   Name2        ,   meters1    ,        Date1                     ,  Name3        , Name4       ,   Date2       ,      Name6         ,   Name7     ,   meters2  ,   Meters3   ,   Meters4     ,     Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11       ) " &
                                               " Select 'GADVP-'+ a.Other_GST_Entry_Reference_Code, a.Company_IdNo, a.Other_GST_Entry_No, a.for_OrderBy, a.Other_GST_Entry_Date,c.Ledger_Name  ,a.Bill_No       , a.Bill_Date,   b.Item_Particulars, d.Unit_NAme , b.Gst_Perc ,  b.Quantity,b.Rate            , b.Amount     , a.Gross_Amount,a.Taxable_Value  , a.CGST_Amount,a.SGST_Amount    ,a.IGST_Amount           , a.Net_Amount     ,a.Bill_Amount,0             ,     0         ,     0        ,   0         ,      0      , 0      ,  0   from Other_GST_Entry_Head a INNER JOIN Other_GST_Entry_Details b ON a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_Idno = c.Ledger_IdNo INNER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo   Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GADVP-%' Order by a.Other_GST_Entry_Date, a.for_OrderBy, a.Other_GST_Entry_No, a.Company_IdNo"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Select sum(z.Gross_Amount), sum(z.Taxable_Value), sum(z.CGST_Amount), sum(z.SGST_Amount), sum(z.IGST_Amount), sum(z.Net_Amount),sum(z.Bill_Amount)  from Other_GST_Entry_Head z where z.Other_GST_Entry_Reference_Code IN (Select a.Other_GST_Entry_Reference_Code from Other_GST_Entry_Head a LEFT OUTER JOIN Other_GST_Entry_Details b ON a.Company_IdNo = b.Company_IdNo and a.Other_GST_Entry_Reference_Code = b.Other_GST_Entry_Reference_Code INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo  LEFT OUTER JOIN Unit_Head d ON b.Unit_IdNo = d.Unit_IdNo INNER JOIN Company_Head f ON a.Company_IdNo = f.Company_IdNo  where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Other_GST_Entry_Date between @fromdate and @todate and a.Other_GST_Entry_Reference_Code LIKE 'GADVP-%') "
                        Da = New SqlClient.SqlDataAdapter(cmd)
                        Dt = New DataTable
                        Da.Fill(Dt)
                    End If


                    If Dt.Rows.Count > 0 Then
                        If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters5 = " & Str(Val((Dt.Rows(0)(0).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        If IsDBNull(Dt.Rows(0)(1).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters6 = " & Str(Val((Dt.Rows(0)(1).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        If IsDBNull(Dt.Rows(0)(2).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters7 = " & Str(Val((Dt.Rows(0)(2).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        If IsDBNull(Dt.Rows(0)(3).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters8 = " & Str(Val((Dt.Rows(0)(3).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        If IsDBNull(Dt.Rows(0)(4).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters9 = " & Str(Val((Dt.Rows(0)(4).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        If IsDBNull(Dt.Rows(0)(5).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters10 = " & Str(Val((Dt.Rows(0)(5).ToString)))
                            cmd.ExecuteNonQuery()
                        End If

                        If IsDBNull(Dt.Rows(0)(6).ToString) = False Then
                            cmd.CommandText = "Update ReportTemp set Meters11 = " & Str(Val((Dt.Rows(0)(6).ToString)))
                            cmd.ExecuteNonQuery()
                        End If
                        '    If IsDBNull(Dt.Rows(0)(7).ToString) = False Then
                        '        cmd.CommandText = "Update ReportTemp set Meters8 = " & Str(Val((Dt.Rows(0)(7).ToString)))
                        '        cmd.ExecuteNonQuery()
                        '    End If
                    End If

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1    ,Currency3    ,   Name2          ,   meters1    ,        Date1          , Date2   ,  Meters2,Meters3,Meters4,Name3,  Name4    ,   Name5      ,   Name6 ,Name7,   Currency1  , Currency2   , Currency3        , Currency4     ,   Currency5      ,   Currency6          ,   Currency7     ,  Currency8   ,  Meters5      ,   Meters6   ,   Meters7    ,  Meters8    ,  Meters9   ,Meters10 ,  Meters11   from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Name1 ,   Int1  ,Currency3      ,   Name2          ,   meters1    ,        Date1          ,   Int2,   Int3 ,   Weight1,    Name4    ,   Name5      ,   Name6    ,   Name7    ,WEIGHT2   , WEIGHT3      ,  name8 , name9  ,  Currency1  from reporttemp Order by Date1, Meters1, name2, name1, Int1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    If Trim(LCase(RptIpDet_ReportName)) = "general other purchase gst register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_General_Other_Purchase_GST_Register.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other sales gst register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_General_Other_Sales_GST_Register.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other credit note gst register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_General_Other_Credit_Note_GST_Register.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "general other debit note gst register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_General_Other_Credit_Note_GST_Register.rdlc"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "advance payment gst register" Then
                        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Advance_Payment_GST_Register.rdlc"

                    End If


                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

                Case "voucher register - general filter"

                    VouCond = ""
                    If Trim(LCase(RptIpDet_ReportName)) = "voucher register - contra" Then
                        VouCond = "(a.Voucher_Type = 'Cntr')"
                        ReportHd = "CONTRA REGISTER"
                    ElseIf Trim(LCase(RptIpDet_ReportName)) = "voucher register - journal" Then
                        VouCond = "(a.Voucher_Type = 'Jrnl')"
                        ReportHd = "JOURNAL REGISTER"
                    End If

                    RptHeading1 = Trim(ReportHd)
                    RptHeading2 = Trim(RptHeading2) & IIf(Trim(RptHeading2) <> "", "   -   ", "") & Trim(RptHeading3)
                    RptHeading3 = ""

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt

                    If Trim(VouCond) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & Trim(VouCond)
                    End If

                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = False Or Trim(cbo_Inputs2.Text) = "" Then
                        MsgBox("Credit Ledger HAS to be selected")
                        Exit Sub
                        'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Ledger_Idno = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text)))
                    End If

                    If cbo_Inputs3.Visible = False Or Trim(cbo_Inputs3.Text) = "" Then
                        MsgBox("Credit Ledger HAS to be selected")
                        Exit Sub
                        'RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " b.Ledger_Idno = " & Str(Val(Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    cmd.CommandText = "Truncate table ReportTempSub"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = " insert into reporttempsub (Date1       ,       Meters1     ,Name1          ,Name2      ,Name3     ,Currency1        ,Name4)" &
                                        " select  a.voucher_date,a.voucher_no       , a.voucher_code,b.Ledger_Name,''      ,-1*Voucher_Amount,Narration from " &
                                        " voucher_details a inner join ledger_head b on a.Ledger_IdNo = b.Ledger_IdNo Where a.Voucher_Date  between @fromdate and @todate " &
                                        " and Voucher_Amount < 0 and a.Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs3.Text) & " And " &
                                        " a.voucher_code in ( select voucher_code from voucher_details where Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text) &
                                        " and Voucher_Date  between @fromdate and @todate and voucher_amount >0)"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update reporttempsub set Name3 = (Select Ledger_Name from Ledger_Head Where Ledger_IdNo = (Select top 1 Ledger_IdNo from voucher_details where " &
                                      " voucher_code = name1 and voucher_amount >0 ))"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = " insert into reporttemp (Date1       ,       Meters1     ,Name1          ,Name2      ,Name3     ,Currency1        ,Name4)" &
                                      " select Date1       ,       Meters1     ,Name1          ,Name2      ,Name3     ,Currency1        ,Name4 from reporttempsub"
                    cmd.ExecuteNonQuery()

                    'cmd.CommandText = "Insert into ReportTemp ( Name1 ,     Int1        ,    Name2     ,   meters1    ,   Date1       ,   Name3      ,                                            Currency1                             ,                                            Currency2                             ,   Name4          ) " & _
                    '                   " Select         a.Voucher_Code,   a.Company_IdNo,  a.Voucher_No, a.for_OrderBy, a.Voucher_Date, c.Ledger_Name, (case When b.Voucher_Amount < 0 then abs(b.Voucher_Amount) else 0 end ) as Db_Amt, (case When b.Voucher_Amount > 0 then abs(b.Voucher_Amount) else 0 end ) as Cr_Amt, a.Narration from Voucher_Head a INNER JOIN Voucher_Details b ON a.Company_IdNo = b.Company_IdNo and a.Voucher_Code = b.Voucher_Code INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head c ON b.Ledger_Idno = c.Ledger_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate"


                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, * from reporttemp Order by Date1, Meters1, Int1, name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, * from reporttemp Order by Date1, Meters1, Int1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Voucher_Register_Filter.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    RptViewer.LocalReport.Refresh()

                    RptViewer.RefreshReport()

                    RptViewer.Visible = True

            End Select


        'Catch ex As Exception

        '    MessageBox.Show(ex.Message, "DOES NOT SHOW REPORT....", MessageBoxButtons.OK, MessageBoxIcon.Error)

        'End Try

    End Sub
    Private Sub Attendance_Register_MonthWise()
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String
        'Dim CompCondt As String
        Dim CntNm As String
        'Dim EdsCntNm As String
        Dim BmClNm As String = ""
        Dim BgClNm As String = ""
        Dim CnClNm As String = ""
        Dim BgCnCondt As String = ""
        Dim dttm1 As Date, dttm2 As Date
        Dim Mth_ID As Integer


        If dtp_FromDate.Visible = True Then
            If IsDate(dtp_FromDate.Text) = False Then
                MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                Exit Sub
            End If
        End If
        If dtp_ToDate.Visible = True Then
            If IsDate(dtp_ToDate.Text) = False Then
                MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                Exit Sub
            End If
        End If
        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) = "" Then
            MessageBox.Show("Invalid Month ", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
            Exit Sub
        End If

        Mth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)

        dttm1 = New DateTime(IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate)), Mth_ID, 1)
        'Dt1 = "01/" & Trim(Mth_ID) & "/" & IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate))
        dtp_FromDate.Text = dttm1

        dttm2 = DateAdd("M", 1, dttm1)
        dttm2 = DateAdd("d", -1, dttm2)
        dtp_ToDate.Text = dttm2

        cmd.Connection = con



        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

        RptCondt = ""

        cmd.CommandText = "Truncate table ReportTempSub"
        cmd.ExecuteNonQuery()

        Dim currentDate As Date = dttm1
        While currentDate <= dttm2

            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
            cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
            cmd.Parameters.AddWithValue("@currentDate", currentDate.Date)

            cmd.CommandText = "Insert into ReportTempSub ( name1, Date1, name2, weight1 ,int1 ) Select b.Employee_Name, @currentDate, '" & Trim(Val(Format(currentDate, "d"))) & " " & Format(currentDate, "ddd") & "',  0  ,(case when  b.Week_Off = '" & Format(currentDate, "dddd") & "' then 10 else 0  end ) from PayRoll_Employee_Head b  Where b.Join_DateTime <= @fromdate and (b.Date_Status = 0 or (b.Date_Status = 1 and b.Releave_DateTime >= @fromdate ) ) "
            cmd.ExecuteNonQuery()

            currentDate = currentDate.AddDays(1)

        End While

        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

        cmd.CommandText = "Insert into ReportTempSub(name1, Date1, name2, weight1 ,weight2 ,Int1) Select b.Employee_Name, a.Employee_Attendance_Date, datename(d, a.Employee_Attendance_Date)  + ' ' +  left(datename(dw, a.Employee_Attendance_Date),3), a.No_Of_Shift ,(CASE WHEN a.No_Of_Shift = 0 THEN 1 WHEN a.No_Of_Shift < 1 THEN 0.5  ELSE 0 END ) ,(CASE WHEN a.No_Of_Shift = 0 THEN 1  ELSE 2 END )   from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo=b.Employee_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date between @fromdate and @todate"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Truncate table ReportTemp"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into ReportTemp ( name1, Date1, name2, weight1 ,weight2 , int1) Select name1, Date1, name2, sum(weight1) ,sum(weight2) ,int1 from ReportTempSub group by name1, Date1, name2,int1"
        cmd.ExecuteNonQuery()

        CntNm = ""
        Da = New SqlClient.SqlDataAdapter("select distinct(name2) from reporttemp where name2 <> '' and name2 is Not Null Order by name2", con)
        Dt = New DataTable
        Da.Fill(Dt)

        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0).Item("name2").ToString) = False Then
                CntNm = Trim(Dt.Rows(0).Item("name2").ToString)
            End If
        End If
        Dt.Clear()

        If Trim(CntNm) <> "" Then
            cmd.CommandText = "Update reporttemp set name2 = '" & Trim(CntNm) & "' where name2 is Null or name2 = ''"
            cmd.ExecuteNonQuery()
        End If



        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,name1, Date1, name2, weight1,weight2 ,Int1 from reporttemp where name1 <> '' and name2 <> '' Order by Date1,name1, name2", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
            cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,name1, Date1, name2, weight1 from reporttemp  Order by name1,date1, name2", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Attendance_MonthWise_Register.rdlc"

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        'Debug.Print(Now)
        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True
        'Debug.Print(Now)

    End Sub

    Private Sub Stock_Report()

        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String, Condt1 As String
        Dim CompCondt As String
        Dim HavingCondt As String = ""
        Dim IpColVal1 As String

        Try

            CompCondt = ""
            If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                CompCondt = "(Company_Type <> 'UNACCOUNT')"
            End If

            Select Case Trim(LCase(RptIpDet_ReportName))



                Case "stock summary details"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid Up Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con


                    cmd.Parameters.Clear()

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " CH.Cetegory_IdNo = " & Str(Val(Common_Procedures.Cetegory_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If


                    Condt1 = ""
                    If Trim(LCase(Common_Procedures.RptInputDet.ReportName)) = "minimum stock level" Then
                        cmd.Parameters.AddWithValue("@uptodate", Date.Today)

                        Condt1 = "(sum(a.Quantity) < b.Minimum_Stock)"

                    Else
                        cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)

                    End If

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp ( name1, name2,  weight1, meters1, currency1, Weight2  ) Select b.item_name , c.Unit_Name ,  sum(a.Quantity), b.Cost_Rate, (sum(a.Quantity) * b.Cost_Rate) as stockvalue, b.Minimum_Stock from Item_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Item_Head b ON a.item_idno = b.item_idno LEFT OUTER JOIN Unit_Head c ON C.Unit_idno = B.Unit_idno LEFT OUTER JOIN  ItemGroup_Head IG ON B.ItemGroup_IdNo = IG.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON  CH.Cetegory_IdNo <> 0  AND IG.Cetegory_IdNo = CH.Cetegory_IdNo Where " & Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Reference_Date <= @uptodate group by b.item_name , c.Unit_Name  , b.Cost_Rate, b.Minimum_Stock " & IIf(Trim(Condt1) <> "", " Having ", "") & Condt1 & " order by b.item_name"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int1, name1, name2, weight1, meters1, currency1 from reporttemp Order by name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int1, name1, weight1, meters1, currency1 from reporttemp Order by name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_StockSummaryDetails.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    Debug.Print(Now)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                    Debug.Print(Now)



                Case "stock details simple"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid From Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If
                    If dtp_ToDate.Visible = True And IsDate(dtp_ToDate.Text) = False Then
                        MessageBox.Show("Invalid To Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                        Exit Sub
                    End If
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) = "" Then
                        MessageBox.Show("Invalid ItemName", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Inputs1.Enabled Then cbo_Inputs1.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con

                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.Parameters.Clear()
                    cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
                    cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If
                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Item_IdNo = " & Str(Val(Common_Procedures.Item_NameToIdNo(con, cbo_Inputs2.Text)))
                    End If
                    If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Ledger_IdNo = " & Str(Val(Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs3.Text)))
                    End If

                    If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
                        HavingCondt = ""
                        If Trim(cbo_Inputs4.Text) = "PAID" Then
                            HavingCondt = " HAVING sum(sh.Balance_Amount) = 0 "
                        ElseIf Trim(cbo_Inputs4.Text) = "UNPAID" Then
                            HavingCondt = " HAVING sum(sh.Balance_Amount) <> 0 "
                        End If
                    End If


                    'cmd.CommandText = "Insert into reporttemp( Date1            , name2          ,   name3        ,Name4        ,Name5        ,  Int3                , Currency1) " & _
                    '                              "Select      a.Sales_Date,  a.Sales_No    , b.Ledger_Name  ,IH.Item_Code ,IH.Item_Name , sum(abs(a.Noof_Items)) , sum(A.Amount)          from Sales_Details a  INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head b ON a.  Ledger_IdNo = b.Ledger_IdNo LEFT OUTER JOIN Item_Head IH ON a.Item_Idno = IH.item_Idno  Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by a.Sales_Date,  a.Sales_No, b.Ledger_Name  ,IH.Item_Code ,IH.Item_Name"
                    'cmd.ExecuteNonQuery()



                    cmd.CommandText = "Insert into reporttemp( Date1            , name2          ,   name3        ,Name4        ,Name5        ,  Int3                , Currency1              ,Currency2              , Currency3      ,Currency4                                                         ,Currency5               ,Currency6             ,Currency7 ) " &
                                                  "Select      a.Sales_Date,  a.Sales_No    , b.Ledger_Name  ,IH.Item_Code ,IH.Item_Name , sum(abs(a.Noof_Items)) , sum(Sh.Assessable_Value)  ,sum(Sh.CGst_Amount),sum(Sh.SGst_Amount) ,sum(Sh.Assessable_Value)  +sum(Sh.CGst_Amount)+sum(Sh.SGst_Amount),sum(sh.Advance_Amount)  ,sum(sh.Receipt_Amount),sum(sh.Balance_Amount)          from Sales_Head sh INNER JOIN  Sales_Details a on SH.Sales_Code = a.Sales_Code INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head b ON a.  Ledger_IdNo = b.Ledger_IdNo LEFT OUTER JOIN Item_Head IH ON a.Item_Idno = IH.item_Idno  Where " & RptCondt & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Sales_Date between @fromdate and @todate group by a.Sales_Date,  a.Sales_No, b.Ledger_Name  ,IH.Item_Code ,IH.Item_Name" & HavingCondt
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, Date1 , name2 , name3 ,Name4 ,Name5 , Int3  , Currency1 ,Currency2 , Currency3 ,Currency4 ,Currency5,Currency6,Currency7  from reporttemp w Order by Date1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)



                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int5, Date1, name1, name2, meters1, name3, weight1, weight2, Weight3 from reporttemp Order by Date1, Int1, name2, name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_StockDetails_Simple.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    'Debug.Print(Now)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                'Debug.Print(Now)

                Case "stock summary details hsncode wise"

                    If dtp_FromDate.Visible = True And IsDate(dtp_FromDate.Text) = False Then
                        MessageBox.Show("Invalid Up Date", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                        Exit Sub
                    End If

                    cmd.Connection = con


                    cmd.Parameters.Clear()

                    RptCondt = CompCondt
                    If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
                    End If

                    If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
                        RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " IG.Item_HSN_Code ='" & Trim(cbo_Inputs2.Text) & "'"
                    End If


                    Condt1 = ""
                    If Trim(LCase(Common_Procedures.RptInputDet.ReportName)) = "minimum stock level" Then
                        cmd.Parameters.AddWithValue("@uptodate", Date.Today)

                        Condt1 = "(sum(a.Quantity) < b.Minimum_Stock)"

                    Else
                        cmd.Parameters.AddWithValue("@uptodate", dtp_FromDate.Value.Date)

                    End If

                    Dim IpColNm1 As String = ""
                    If cbo_Inputs2.Visible And Trim(cbo_Inputs2.Text) <> "" Then
                        IpColNm1 = "'[HIDDEN]'"
                    Else
                        IpColNm1 = "''"
                    End If


                    cmd.CommandText = "Truncate table ReportTemp"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert into reporttemp ( name1, name2,Name3,Name4,  weight1, meters1, currency1, Weight2  ) Select b.item_name , c.Unit_Name ,IG.Item_HSN_Code ," & IpColNm1 & ",  sum(a.Quantity), b.Cost_Rate, (sum(a.Quantity) * b.Cost_Rate) as stockvalue, b.Minimum_Stock from Item_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Item_Head b ON a.item_idno = b.item_idno LEFT OUTER JOIN Unit_Head c ON C.Unit_idno = B.Unit_idno LEFT OUTER JOIN  ItemGroup_Head IG ON B.ItemGroup_IdNo = IG.ItemGroup_IdNo LEFT OUTER JOIN Cetegory_Head CH ON  CH.Cetegory_IdNo <> 0  AND IG.Cetegory_IdNo = CH.Cetegory_IdNo Where " & Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " a.Reference_Date <= @uptodate group by b.item_name , c.Unit_Name ,IG.Item_HSN_Code , b.Cost_Rate, b.Minimum_Stock " & IIf(Trim(Condt1) <> "", " Having ", "") & Condt1 & " order by b.item_name"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int1, name1, name2,name3,Name4, weight1, meters1, currency1 from reporttemp Order by name2, name1", con)
                    Dtbl1 = New DataTable
                    Da.Fill(Dtbl1)

                    If Dtbl1.Rows.Count = 0 Then

                        cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int1, name1, weight1, meters1, currency1 from reporttemp Order by name1", con)
                        Dtbl1 = New DataTable
                        Da.Fill(Dtbl1)

                    End If

                    RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
                    RpDs1.Name = "DataSet1"
                    RpDs1.Value = Dtbl1

                    RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_StockSummaryDetails_hsncode_wise.rdlc"

                    RptViewer.LocalReport.DataSources.Clear()

                    RptViewer.LocalReport.DataSources.Add(RpDs1)

                    Debug.Print(Now)
                    RptViewer.LocalReport.Refresh()
                    RptViewer.RefreshReport()

                    RptViewer.Visible = True
                    Debug.Print(Now)


            End Select


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT SHOW REPORT....", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub


    Private Sub pnl_ReportDetails_Paint(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PaintEventArgs)

    End Sub

    Private Sub Payroll_OT_Hours_Register_DateWise()
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String
        'Dim CompCondt As String
        Dim CntNm As String
        'Dim EdsCntNm As String
        Dim BmClNm As String = ""
        Dim BgClNm As String = ""
        Dim CnClNm As String = ""
        Dim BgCnCondt As String = ""
        Dim dttm1 As Date, dttm2 As Date
        Dim Mth_ID As Integer
        Dim currentDate1 As Date = dttm1
        Dim currentDate2 As Date = dttm2
        Dim Nr As Integer = 0


        If dtp_FromDate.Visible = True Then
            If IsDate(dtp_FromDate.Text) = False Then
                MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                Exit Sub
            End If
        End If
        If dtp_ToDate.Visible = True Then
            If IsDate(dtp_ToDate.Text) = False Then
                MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                Exit Sub
            End If
        End If


        RptCondt = ""
        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
            If RptCboDet(1).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs1.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(1).MultiSelectedIdNos_ForInQuery) <> "" Then
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " te.Company_IdNo IN " & RptCboDet(1).MultiSelectedIdNos_ForInQuery
            Else
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " te.Company_IdNo = " & Str(Val(Common_Procedures.Company_ShortNameToIdNo(con, cbo_Inputs1.Text)))
            End If
        End If
        If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
            If RptCboDet(3).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs3.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(3).MultiSelectedIdNos_ForInQuery) <> "" Then
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tCT.Category_IdNo IN " & RptCboDet(3).MultiSelectedIdNos_ForInQuery
            Else
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tCT.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
            End If
        End If
        If cbo_Inputs4.Visible = True And Trim(cbo_Inputs4.Text) <> "" Then
            If RptCboDet(4).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs4.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(4).MultiSelectedIdNos_ForInQuery) <> "" Then
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tE.Employee_IdNo IN " & RptCboDet(4).MultiSelectedIdNos_ForInQuery
            Else
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tE.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs4.Text)))
            End If
        End If
        If cbo_Inputs5.Visible = True And Trim(cbo_Inputs5.Text) <> "" Then
            If RptCboDet(5).MultiSelection_Status = True And InStr(1, Trim(UCase(cbo_Inputs5.Text)), "ITEMS SELECTED") > 0 And Trim(RptCboDet(5).MultiSelectedIdNos_ForInQuery) <> "" Then
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " te.ESI_PF_Group_IdNo IN " & RptCboDet(5).MultiSelectedIdNos_ForInQuery
            Else
                RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " te.ESI_PF_Group_IdNo = " & Str(Val(Common_Procedures.Esi_Pf_Group_NameToIdNo(con, cbo_Inputs5.Text)))
            End If
        End If

        If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then

            Mth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)

            dttm1 = New DateTime(IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate)), Mth_ID, 1)
            dtp_FromDate.Text = dttm1

            dttm2 = DateAdd("M", 1, dttm1)
            dttm2 = DateAdd("d", -1, dttm2)

            currentDate1 = dttm1
            currentDate2 = dttm2

            dtp_FromDate.Text = currentDate1
            dtp_ToDate.Text = currentDate2

        Else

            currentDate1 = dtp_FromDate.Text
            currentDate2 = dtp_ToDate.Text

        End If


        cmd.Connection = con

        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)



        cmd.CommandText = "Truncate table ReportTempSub"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Truncate table EntryTemp"
        cmd.ExecuteNonQuery()

        '---Day Name from Previous Month To Next Month

        cmd.CommandText = "Truncate table ReportTemp_Simple"
        cmd.ExecuteNonQuery()

        Dim dtc As Date
        dtc = dtp_FromDate.Value.Date.AddMonths(-1)

        Do While (dtc <= dtp_ToDate.Value.Date.AddMonths(1))
            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@Date", dtc)
            cmd.CommandText = ("Insert into ReportTemp_Simple(Date1, name1) values (@Date, '" & Trim(UCase(Format(dtc, "dddd"))) & "')")

            cmd.ExecuteNonQuery()
            dtc = Format(dtc.AddDays(1), "dd/MM/yyyy")
        Loop

        Dim Count As Integer = 0

        While currentDate1 <= currentDate2

            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
            cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
            cmd.Parameters.AddWithValue("@currentDate", currentDate1.Date)

            cmd.CommandText = "Insert into ReportTempSub (       Int1         ,    name1        ,  Date1      ,                      name2                                                         , weight1, weight2 , weight3        ) " &
                                                      "Select tE.Employee_IdNo, tE.Employee_Name, @currentDate, '" & Trim(Val(Format(currentDate1, "d"))) & "-" & Trim(Val(Format(currentDate1, "MM"))) & "    " & Format(currentDate1, "ddd") & "' ,  0     ,   0     ,   0                     from PayRoll_Employee_Head tE LEFT OUTER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo Where  " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tE.Join_DateTime <= @fromdate and (tE.Date_Status = 0 or (tE.Date_Status = 1 and tE.Releave_DateTime >= @fromdate ) ) "
            cmd.ExecuteNonQuery()

            currentDate1 = currentDate1.AddDays(1)

        End While


        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)



        '----  Getting OT Timing Details
        cmd.CommandText = "Insert into ReportTempSub(    Int1          ,    name1         ,   Date1                ,                Name2                                                                                                                                                             ,       weight1     , weight2 , weight3  ) " &
                            " Select                  tE.Employee_IdNo , tE.Employee_Name , a.Timing_OverTime_Date , cast(DATEPART(DAY, a.Timing_OverTime_Date)  as varchar) + '-' + cast(DATEPART(MONTH, a.Timing_OverTime_Date) as varchar) + '    ' +  left(datename(dw, a.Timing_OverTime_Date),3) , sum(a.OT_Minutes) ,    0    ,   0        from Payroll_Employee_OverTime_Details a INNER JOIN PayRoll_Employee_Head tE ON a.Employee_IdNo = tE.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Timing_OverTime_Date Between @fromdate and @todate Group by tE.Employee_IdNo , tE.Employee_Name, a.Timing_OverTime_Date having sum(a.OT_Minutes) <> 0 "
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into ReportTempSub(    Int1          ,    name1         ,   Date1                    ,                Name2                                                                                                                                                                          ,       weight1     , weight2 , weight3  ) " &
                            " Select                  tE.Employee_IdNo , tE.Employee_Name , a.Employee_Attendance_Date , cast(DATEPART(DAY, a.Employee_Attendance_Date)  as varchar) + '-' + cast(DATEPART(MONTH, a.Employee_Attendance_Date) as varchar) + '    ' +  left(datename(dw, a.Employee_Attendance_Date),3) , sum(a.OT_Minutes) ,    0    ,   0        from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head tE ON a.Employee_IdNo = tE.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.Employee_Attendance_Date Between @fromdate and @todate Group by tE.Employee_IdNo , tE.Employee_Name, a.Employee_Attendance_Date having sum(a.OT_Minutes) <> 0 "
        cmd.ExecuteNonQuery()

        '----  Getting WorkingDays IN WeekOff
        cmd.CommandText = "Insert into ReportTempSub(    Int1          ,    name1         ,   Date1                    ,                Name2                                                                                                                                                                          ,       weight1               , weight2 , weight3  ) " &
                            " Select                  tE.Employee_IdNo , tE.Employee_Name , a.Employee_Attendance_Date , cast(DATEPART(DAY, a.Employee_Attendance_Date)  as varchar) + '-' + cast(DATEPART(MONTH, a.Employee_Attendance_Date) as varchar) + '    ' +  left(datename(dw, a.Employee_Attendance_Date),3) , (count(*)*480) as OtMinutes ,    0    ,   0        from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head tE ON a.Employee_IdNo = tE.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo INNER JOIN ReportTemp_Simple d ON a.Employee_Attendance_Date = d.Date1 Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date Between @fromdate and @todate and tCT.Week_Attendance_OT = 1 and tE.Week_Off = d.Name1 and a.No_Of_Shift > 0 Group by tE.Employee_IdNo , tE.Employee_Name, a.Employee_Attendance_Date Having count(*) <> 0"
        cmd.ExecuteNonQuery()

        '----  Getting WorkingDays IN National Holidays for labours
        cmd.CommandText = "Insert into ReportTempSub(    Int1          ,    name1         ,   Date1                    ,                Name2                                                                                                                                                                          ,       weight1               , weight2 , weight3  ) " &
                            " Select                  tE.Employee_IdNo , tE.Employee_Name , a.Employee_Attendance_Date , cast(DATEPART(DAY, a.Employee_Attendance_Date)  as varchar) + '-' + cast(DATEPART(MONTH, a.Employee_Attendance_Date) as varchar) + '    ' +  left(datename(dw, a.Employee_Attendance_Date),3) , (sum(a.No_Of_Shift)*480) as OtMinutes ,    0    ,   0        from PayRoll_Employee_Attendance_Details a INNER JOIN PayRoll_Employee_Head tE ON a.Employee_IdNo = tE.Employee_IdNo INNER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo INNER JOIN Holiday_Details d ON a.Employee_Attendance_Date = d.HolidayDateTime Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Attendance_Date Between @fromdate and @todate and tCT.Festival_Holidays_OT_Salary = 1 and a.No_Of_Shift > 0 Group by tE.Employee_IdNo , tE.Employee_Name, a.Employee_Attendance_Date Having sum(a.No_Of_Shift) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Truncate table EntryTempSub"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into EntryTempSub(Int1, name1, Currency1) Select tE.Employee_IdNo, tE.Employee_Name, (SELECT TOP 1 O_T from PayRoll_Employee_Salary_Details a Where a.Employee_IdNo = tE.Employee_IdNo and ( ( @FromDate < (select min(y.From_DateTime) from PayRoll_Employee_Salary_Details y where y.employee_idno = a.employee_idno )) or (@FromDate BETWEEN a.From_DateTime and a.To_DateTime) or ( @FromDate >= (select max(z.From_DateTime) from PayRoll_Employee_Salary_Details z where z.employee_idno = a.employee_idno ))) order by a.From_DateTime desc) as OT_Salary_Day from PayRoll_Employee_Head tE LEFT OUTER JOIN PayRoll_Category_Head tCT ON tE.Category_IdNo = tCT.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tE.Join_DateTime <= @fromdate and (tE.Date_Status = 0 or (tE.Date_Status = 1 and tE.Releave_DateTime >= @fromdate ) ) "
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Truncate table ReportTemp"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into ReportTemp ( Int1, name1, Date1, name2, weight1, weight2, Currency1, Currency2 ) Select A.Int1, a.name1, a.Date1, a.name2, sum(a.weight1), 0, b.Currency1, (sum(a.weight1) * (b.Currency1/480)) from ReportTempSub a LEFT OUTER JOIN EntryTempSub b ON A.INT1 = b.INT1 group by a.int1, a.name1, a.Date1, a.name2, b.Currency1 Having sum(a.weight1) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Update ReportTemp set weight2= CAST( CAST((weight1) AS int) / 60 AS varchar) + '.'  + right('0' + CAST(CAST((weight1) AS int) % 60 AS varchar(2)),2) "
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Truncate table ReportTempSub"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into ReportTempSub ( Int1, name1, weight1) Select a.Int1, a.name1, sum(a.weight1) from ReportTemp a group by a.Int1, a.name1"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update ReportTemp set weight3 = b.weight1 from ReportTemp a, ReportTempSub b where a.int1 = b.Int1"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update ReportTemp set weight4 = CAST( CAST((weight3) AS int) / 60 AS varchar) + '.'  + right('0' + CAST(CAST((weight3) AS int) % 60 AS varchar(2)),2) "
        cmd.ExecuteNonQuery()

        CntNm = ""
        Dim Cnt As Integer = 0

        Da = New SqlClient.SqlDataAdapter("select distinct(name2) from reporttemp where name2 <> '' and name2 is Not Null", con)
        Dt = New DataTable
        Da.Fill(Dt)

        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0).Item("name2").ToString) = False Then
                CntNm = Trim(Dt.Rows(0).Item("name2").ToString)
            End If
        End If
        Dt.Clear()

        If Trim(CntNm) <> "" Then
            Cnt = Cnt + 1
            cmd.CommandText = "Update reporttemp set name2 = '" & Trim(CntNm) & "' where name2 is Null or name2 = ''"
            cmd.ExecuteNonQuery()
        End If

        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3, int1, name1, Date1, name2, weight1 ,Weight2 ,Weight3, weight4, currency1, currency2 from reporttemp where name1 <> '' and name2 <> '' Order by name1 ,name3", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
            cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,name1, Date1, name2, weight1,Weight2 ,Weight3, weight4, currency1, currency2  from reporttemp  Order by name1,date1, name2", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_OT_Hours_Register_DateWise.rdlc"

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        'Debug.Print(Now)
        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True
        'Debug.Print(Now)

    End Sub

    Private Sub Advance_Register_MonthWise()

        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim RpDs1 As New Microsoft.Reporting.WinForms.ReportDataSource
        Dim RptCondt As String
        'Dim CompCondt As String
        Dim CntNm As String
        'Dim EdsCntNm As String
        Dim BmClNm As String = ""
        Dim BgClNm As String = ""
        Dim CnClNm As String = ""
        Dim BgCnCondt As String = ""
        Dim dttm1 As Date, dttm2 As Date
        Dim Mth_ID As Integer
        Dim currentDate1 As Date = dttm1
        Dim currentDate2 As Date = dttm2
        Dim Nr As Integer = 0


        If dtp_FromDate.Visible = True Then
            If IsDate(dtp_FromDate.Text) = False Then
                MessageBox.Show("Invalid From Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_FromDate.Enabled Then dtp_FromDate.Focus()
                Exit Sub
            End If
        End If
        If dtp_ToDate.Visible = True Then
            If IsDate(dtp_ToDate.Text) = False Then
                MessageBox.Show("Invalid To Date", "DOES NOT SHOW REPORT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dtp_ToDate.Enabled Then dtp_ToDate.Focus()
                Exit Sub
            End If
        End If


        RptCondt = ""
        If cbo_Inputs1.Visible = True And Trim(cbo_Inputs1.Text) <> "" Then
            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " tE.Employee_IdNo = " & Str(Val(Common_Procedures.Employee_NameToIdNo(con, cbo_Inputs1.Text)))
        End If
        If cbo_Inputs3.Visible = True And Trim(cbo_Inputs3.Text) <> "" Then
            RptCondt = Trim(RptCondt) & IIf(Trim(RptCondt) <> "", " and ", "") & " ca.Category_IdNo = " & Str(Val(Common_Procedures.Category_NameToIdNo(con, cbo_Inputs3.Text)))
        End If

        If cbo_Inputs2.Visible = True And Trim(cbo_Inputs2.Text) <> "" Then
            'MessageBox.Show("Invalid Month ", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            'If cbo_Inputs2.Enabled Then cbo_Inputs2.Focus()
            'Exit Sub

            Mth_ID = Common_Procedures.Month_NameToIdNo(con, cbo_Inputs2.Text)

            dttm1 = New DateTime(IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate)), Mth_ID, 1)
            'Dt1 = "01/" & Trim(Mth_ID) & "/" & IIf(Mth_ID >= 4, Year(Common_Procedures.Company_FromDate), Year(Common_Procedures.Company_ToDate))
            dtp_FromDate.Text = dttm1

            dttm2 = DateAdd("M", 1, dttm1)
            dttm2 = DateAdd("d", -1, dttm2)

            currentDate1 = dttm1
            currentDate2 = dttm2

            currentDate1 = currentDate1.AddDays(9)
            currentDate2 = currentDate2.AddDays(9)

            dtp_FromDate.Text = currentDate1
            dtp_ToDate.Text = currentDate2
        Else

            currentDate1 = dtp_FromDate.Text
            currentDate2 = dtp_ToDate.Text

        End If


        cmd.Connection = con

        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)



        cmd.CommandText = "Truncate table ReportTempSub"
        cmd.ExecuteNonQuery()


        Dim Count As Integer = 0

        While currentDate1 <= currentDate2

            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
            cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)
            cmd.Parameters.AddWithValue("@currentDate", currentDate1.Date)




            cmd.CommandText = "Insert into ReportTempSub (       name1       , Date1       , name2                                                                            , weight1 ,weight2 ,weight3        ) " &
                                                      "Select tE.Employee_Name, @currentDate, '" & Trim(Val(Format(currentDate1, "d"))) & " " & Format(currentDate1, "ddd") & "' ,  0      ,0     , 0   from PayRoll_Employee_Head tE LEFT OUTER JOIN PayRoll_Category_Head ca ON tE.Category_IdNo = ca.Category_IdNo Where  " & RptCondt & IIf(RptCondt <> "", " and ", "") & " tE.Join_DateTime <= @fromdate and (tE.Date_Status = 0 or (tE.Date_Status = 1 and tE.Releave_DateTime >= @fromdate ) ) "
            cmd.ExecuteNonQuery()


            currentDate1 = currentDate1.AddDays(1)

        End While



        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@fromdate", dtp_FromDate.Value.Date)
        cmd.Parameters.AddWithValue("@todate", dtp_ToDate.Value.Date)

        'OPENING
        cmd.CommandText = "Insert into ReportTempSub(name1      , Date1              , name2   ,       weight1                                                                                              , weight2 , weight3  ) " &
                                      "Select tE.Employee_Name   , a.Voucher_Date     , ''     , (case when sum(a.voucher_amount) > 0 then -1 * sum(a.voucher_amount) else abs(sum(a.voucher_amount)) end)  ,    0    ,   0        from voucher_details a INNER JOIN PayRoll_Employee_Head tE ON a.Ledger_IdNo = tE.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON tE.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.voucher_date < @fromdate  and (a.Voucher_Code NOT LIKE 'EMSAD-%' and a.Voucher_Code NOT LIKE 'ESLPY-%' ) Group by tE.Employee_Name, a.Voucher_Date  having sum(a.voucher_amount) <> 0   "
        cmd.ExecuteNonQuery()
        'cmd.CommandText = "Insert into ReportTempSub(name1      , Date1              , name2  ,       weight1           , weight2 , weight3  ) " & _
        '                              "Select b.Employee_Name   , a.Voucher_Date     , ''     , sum(a.voucher_amount)  ,    0    ,   0        from voucher_details a INNER JOIN PayRoll_Employee_Head b ON a.Ledger_IdNo = b.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON b.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.voucher_date < @fromdate and (a.Voucher_Code LIKE 'ADVOP-%' or a.Voucher_Code LIKE 'EADPY-%' or a.Voucher_Code LIKE 'ADVLS-%' or a.Voucher_Code LIKE 'ESAPY-%' or a.Voucher_Code LIKE 'AVLSD-%') Group by b.Employee_Name, a.Voucher_Date  having sum(a.voucher_amount) <> 0   "
        'cmd.ExecuteNonQuery()
        'cmd.CommandText = "Insert into ReportTempSub(name1      , Date1              , name2  ,       weight1           , weight2 , weight3  ) " & _
        '                              "Select b.Employee_Name   , a.Voucher_Date     , ''     , sum(a.voucher_amount)  ,    0    ,   0        from voucher_details a INNER JOIN PayRoll_Employee_Head b ON a.Ledger_IdNo = b.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON b.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  a.voucher_date < @fromdate and (a.Voucher_Code NOT LIKE 'ADVOP-%' and a.Voucher_Code NOT LIKE 'EADPY-%' and a.Voucher_Code NOT LIKE 'ADVLS-%' and a.Voucher_Code NOT LIKE 'ESAPY-%' and a.Voucher_Code NOT LIKE 'AVLSD-%')  Group by b.Employee_Name, a.Voucher_Date  having sum(a.voucher_amount) <> 0   "
        'cmd.ExecuteNonQuery()


        'cmd.CommandText = "Insert into ReportTempSub(name1      , Date1                       , name2  , weight1 ,weight2 ,weight3  ) " & _
        '                              "Select b.Employee_Name   , a.Employee_Payment_Date     , ''     , a.Amount  ,0     ,0        from PayRoll_Employee_Payment_Head a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo=b.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON b.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Payment_Date < @fromdate and a.Amount <> 0 "
        'cmd.ExecuteNonQuery()

        ' opening from voucher details

        'cmd.CommandText = "Insert into ReportTempSub(name1      , Date1                    , name2  , weight1           ,weight2 ,weight3  ) " & _
        '                              "Select a.Employee_Name   , b.Voucher_Date           , ''     , b.Voucher_Amount  ,0       ,0      from Voucher_Details b INNER JOIN PayRoll_Employee_Head a ON b.Ledger_Idno =a.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON a.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & "  b.entry_identification like 'OPENI-%'  and b.Voucher_Date < @fromdate"
        'cmd.ExecuteNonQuery()


        'CURRENT
        cmd.CommandText = "Insert into ReportTempSub(name1      , Date1                    , name2                                                                                             , weight1      , weight2   ,weight3    ) " &
                                        "Select tE.Employee_Name, a.Employee_Payment_Date   , datename(d, a.Employee_Payment_Date)  + ' ' +  left(datename(dw, a.Employee_Payment_Date),3)      , 0            , a.Amount  ,0         from PayRoll_Employee_Payment_Head a INNER JOIN PayRoll_Employee_Head tE ON a.Employee_IdNo = tE.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON tE.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Employee_Payment_Date between @fromdate and @todate and a.Advance_Salary <> 'SALARY'"
        cmd.ExecuteNonQuery()


        ''ADVANCE LESS
        'cmd.CommandText = "Insert into ReportTempSub(name1      , Date1          , name2  , weight1      , weight2 ,weight3          ) " & _
        '                                "Select b.Employee_Name, a.Salary_Date   , ''     , 0            ,   0     ,(case when (a.Minus_Advance  ) <> 0 then a.Minus_Advance    else 0 end  )           from PayRoll_Salary_Details a INNER JOIN PayRoll_Employee_Head b ON a.Employee_IdNo=b.Employee_IdNo LEFT OUTER JOIN PayRoll_Category_Head ca ON b.Category_IdNo = ca.Category_IdNo Where " & RptCondt & IIf(RptCondt <> "", " and ", "") & " a.Salary_Date < @fromdate "
        'cmd.ExecuteNonQuery()


        cmd.CommandText = "Truncate table ReportTemp"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into ReportTemp ( name1, Date1, name2, weight1 ,weight2 ,weight3 ) Select name1, Date1, name2, (sum(weight1)), sum(weight2), sum(weight3)  from ReportTempSub group by name1, Date1, name2 "
        cmd.ExecuteNonQuery()

        CntNm = ""
        Dim Cnt As Integer = 0

        Da = New SqlClient.SqlDataAdapter("select distinct(name2) from reporttemp where name2 <> '' and name2 is Not Null", con)
        Dt = New DataTable
        Da.Fill(Dt)

        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0).Item("name2").ToString) = False Then
                CntNm = Trim(Dt.Rows(0).Item("name2").ToString)
            End If
        End If
        Dt.Clear()



        If Trim(CntNm) <> "" Then
            Cnt = Cnt + 1
            cmd.CommandText = "Update reporttemp set name3 ='" & Cnt & "' , name2 = '" & Trim(CntNm) & "' where name2 is Null or name2 = ''"
            cmd.ExecuteNonQuery()
        End If



        Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,name1, Date1, name2, weight1 ,Weight2 ,Weight3 from reporttemp where name1 <> '' and name2 <> '' Order by name1 ,name3", con)
        Dtbl1 = New DataTable
        Da.Fill(Dtbl1)

        If Dtbl1.Rows.Count = 0 Then

            cmd.CommandText = "Insert into reporttemp(Currency12) values (-9999)"
            cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select '" & Trim(CompName) & "' as Company_Name, '" & Trim(CompAdd1) & "' as Company_Address1, '" & Trim(CompAdd2) & "' as Company_Address2, '" & Trim(RptHeading1) & "' as Report_Heading1, '" & Trim(RptHeading2) & "' as Report_Heading2, '" & Trim(RptHeading3) & "' as Report_Heading3,name1, Date1, name2, weight1 from reporttemp  Order by name1,date1, name2", con)
            Dtbl1 = New DataTable
            Da.Fill(Dtbl1)

        End If

        RpDs1 = New Microsoft.Reporting.WinForms.ReportDataSource
        RpDs1.Name = "DataSet1"
        RpDs1.Value = Dtbl1

        RptViewer.LocalReport.ReportPath = Trim(Common_Procedures.AppPath) & "\Reports\Report_Payroll_Advance_Register.rdlc"

        RptViewer.LocalReport.DataSources.Clear()

        RptViewer.LocalReport.DataSources.Add(RpDs1)

        'Debug.Print(Now)
        RptViewer.LocalReport.Refresh()
        RptViewer.RefreshReport()

        RptViewer.Visible = True
        'Debug.Print(Now)

    End Sub


    Private Sub dtp_ToDate_KeyDown(sender As Object, e As KeyEventArgs) Handles dtp_ToDate.KeyDown

        If e.KeyCode = 38 Then e.Handled = True : e.SuppressKeyPress = True : SendKeys.Send("+{TAB}")
        If e.KeyValue = 40 Or (e.Control = True And e.KeyValue = 40) Then
            e.Handled = True : e.SuppressKeyPress = True
            If cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                cbo_Inputs1.Focus()
            ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                cbo_Inputs2.Focus()
            ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                cbo_Inputs3.Focus()
            ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs4.Focus()
            ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                cbo_Inputs5.Focus()
            ElseIf cbo_Inputs6.Visible And cbo_Inputs6.Enabled Then
                cbo_Inputs6.Focus()
            ElseIf cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                cbo_Inputs7.Focus()
            ElseIf cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                cbo_Inputs8.Focus()
            ElseIf cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                cbo_Inputs9.Focus()
            Else
                btn_Show.Focus()
                Show_Report()
            End If
        End If

    End Sub

    Private Sub dtp_FromDate_ValueChanged(sender As Object, e As EventArgs) Handles dtp_FromDate.ValueChanged

    End Sub

    Private Sub dtp_FromDate_KeyDown(sender As Object, e As KeyEventArgs) Handles dtp_FromDate.KeyDown

        If e.KeyValue = 38 Or (e.Control = True And e.KeyValue = 40) Then
            e.Handled = True : e.SuppressKeyPress = True
            If cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                cbo_Inputs9.Focus()
            ElseIf cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                cbo_Inputs8.Focus()
            ElseIf cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                cbo_Inputs7.Focus()
            ElseIf cbo_Inputs6.Visible And cbo_Inputs6.Enabled Then
                cbo_Inputs6.Focus()
            ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                cbo_Inputs5.Focus()
            ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs4.Focus()
            ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                cbo_Inputs3.Focus()
            ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                cbo_Inputs2.Focus()
            ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                cbo_Inputs1.Focus()
            ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                dtp_ToDate.Focus()
            Else
                btn_Show.Focus()
            End If
        End If
        If e.KeyValue = 40 Or (e.Control = True And e.KeyValue = 40) Then
            e.Handled = True : e.SuppressKeyPress = True
            If dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                dtp_ToDate.Focus()
            ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                cbo_Inputs1.Focus()
            ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                cbo_Inputs2.Focus()
            ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                cbo_Inputs3.Focus()
            ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                cbo_Inputs4.Focus()
            ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                cbo_Inputs5.Focus()
            Else
                btn_Show.Focus()
                Show_Report()
            End If
        End If
    End Sub

    Private Sub cbo_Inputs7_KeyDown(sender As Object, e As KeyEventArgs) Handles cbo_Inputs7.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs7, Nothing, Nothing, RptCboDet(7).TableName, RptCboDet(7).Selection_FieldName, RptCboDet(7).Condition, RptCboDet(7).BlankFieldCondition)

            With cbo_Inputs7
                If (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs6.Visible And cbo_Inputs6.Enabled Then
                        cbo_Inputs6.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                        cbo_Inputs8.Focus()
                    ElseIf cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                        cbo_Inputs9.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                End If

            End With

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs7_KeyPress(sender As Object, e As KeyPressEventArgs) Handles cbo_Inputs7.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs7, Nothing, RptCboDet(7).TableName, RptCboDet(7).Selection_FieldName, RptCboDet(7).Condition, RptCboDet(7).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                e.Handled = True
                If cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                    cbo_Inputs8.Focus()
                ElseIf cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                    cbo_Inputs9.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception

            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs7_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Inputs7.GotFocus

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(7).TableName, RptCboDet(7).Selection_FieldName, RptCboDet(7).Condition, RptCboDet(7).BlankFieldCondition)

    End Sub

    Private Sub cbo_Inputs6_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Inputs6.GotFocus




    End Sub

    Private Sub cbo_Inputs6_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs6.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs6, Nothing, Nothing, RptCboDet(6).TableName, RptCboDet(6).Selection_FieldName, RptCboDet(6).Condition, RptCboDet(6).BlankFieldCondition)

            With cbo_Inputs6
                If (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                        cbo_Inputs7.Focus()
                    ElseIf cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                        cbo_Inputs8.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                End If

            End With

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs6_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs6.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs6, Nothing, RptCboDet(6).TableName, RptCboDet(6).Selection_FieldName, RptCboDet(6).Condition, RptCboDet(6).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                e.Handled = True
                If cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                    cbo_Inputs7.Focus()
                ElseIf cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                    cbo_Inputs8.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs8_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Inputs8.GotFocus

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(8).TableName, RptCboDet(8).Selection_FieldName, RptCboDet(8).Condition, RptCboDet(8).BlankFieldCondition)

    End Sub

    Private Sub cbo_Inputs8_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs8.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs8, Nothing, Nothing, RptCboDet(8).TableName, RptCboDet(8).Selection_FieldName, RptCboDet(8).Condition, RptCboDet(8).BlankFieldCondition)

            With cbo_Inputs8
                If (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                        cbo_Inputs7.Focus()
                    ElseIf cbo_Inputs6.Visible And cbo_Inputs6.Enabled Then
                        cbo_Inputs6.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    If cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                        cbo_Inputs9.Focus()
                    Else
                        btn_Show.Focus()
                        Show_Report()
                    End If

                End If

            End With

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs8_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs8.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs8, Nothing, RptCboDet(8).TableName, RptCboDet(8).Selection_FieldName, RptCboDet(8).Condition, RptCboDet(8).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                e.Handled = True
                If cbo_Inputs9.Visible And cbo_Inputs9.Enabled Then
                    cbo_Inputs9.Focus()
                Else
                    btn_Show.Focus()
                    Show_Report()
                End If
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs9_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Inputs9.GotFocus

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(9).TableName, RptCboDet(9).Selection_FieldName, RptCboDet(9).Condition, RptCboDet(9).BlankFieldCondition)

    End Sub

    Private Sub cbo_Inputs9_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Inputs9.KeyDown

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Inputs9, Nothing, Nothing, RptCboDet(9).TableName, RptCboDet(9).Selection_FieldName, RptCboDet(9).Condition, RptCboDet(9).BlankFieldCondition)

            With cbo_Inputs9
                If (e.KeyValue = 38 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                    e.Handled = True
                    If cbo_Inputs8.Visible And cbo_Inputs8.Enabled Then
                        cbo_Inputs8.Focus()
                    ElseIf cbo_Inputs7.Visible And cbo_Inputs7.Enabled Then
                        cbo_Inputs7.Focus()
                    ElseIf cbo_Inputs6.Visible And cbo_Inputs6.Enabled Then
                        cbo_Inputs6.Focus()
                    ElseIf cbo_Inputs5.Visible And cbo_Inputs5.Enabled Then
                        cbo_Inputs5.Focus()
                    ElseIf cbo_Inputs4.Visible And cbo_Inputs4.Enabled Then
                        cbo_Inputs4.Focus()
                    ElseIf cbo_Inputs3.Visible And cbo_Inputs3.Enabled Then
                        cbo_Inputs3.Focus()
                    ElseIf cbo_Inputs2.Visible And cbo_Inputs2.Enabled Then
                        cbo_Inputs2.Focus()
                    ElseIf cbo_Inputs1.Visible And cbo_Inputs1.Enabled Then
                        cbo_Inputs1.Focus()
                    ElseIf dtp_ToDate.Visible And dtp_ToDate.Enabled Then
                        dtp_ToDate.Focus()
                    ElseIf dtp_FromDate.Visible And dtp_FromDate.Enabled Then
                        dtp_FromDate.Focus()
                    End If

                ElseIf (e.KeyValue = 40 And .DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                    e.Handled = True
                    btn_Show.Focus()
                    Show_Report()

                End If

            End With

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Inputs9_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Inputs9.KeyPress

        Try

            Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Inputs9, Nothing, RptCboDet(9).TableName, RptCboDet(9).Selection_FieldName, RptCboDet(9).Condition, RptCboDet(9).BlankFieldCondition)

            If Asc(e.KeyChar) = 13 Then
                e.Handled = True
                btn_Show.Focus()
                Show_Report()
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SELECT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub btn_Show_Click_1(sender As Object, e As EventArgs) Handles btn_Show.Click

    End Sub

    Private Sub cbo_Inputs3_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles cbo_Inputs3.SelectedIndexChanged

    End Sub

    Private Sub cbo_Inputs2_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles cbo_Inputs2.SelectedIndexChanged

    End Sub

    Private Sub cbo_Inputs4_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles cbo_Inputs4.SelectedIndexChanged

    End Sub

    Private Sub cbo_Inputs1_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs1.Enter
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(1).TableName, RptCboDet(1).Selection_FieldName, RptCboDet(1).Condition, RptCboDet(1).BlankFieldCondition)
    End Sub

    Private Sub cbo_Inputs2_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs2.Enter

        'Dim Selection_Condition As String = RptCboDet(2).Condition

        'If RptCboDet(2).Filter_Based_On_Prev_Col Then

        '    If Len(Trim(RptCboDet(2).Prev_Id_Column)) = 0 Then

        '        If Len(Trim(Selection_Condition)) > 0 Then
        '            Selection_Condition = Selection_Condition + " and " + RptCboDet(2).Selection_FieldName & " in (Select " & RptCboDet(2).Selection_FieldName & " from " &
        '                                      RptCboDet(1).TableName & " Where " & RptCboDet(2).Selection_FieldName & " = '" & cbo_Inputs1.Text & "')"
        '        Else
        '            Selection_Condition = RptCboDet(2).Selection_FieldName & " in (Select " & RptCboDet(2).Selection_FieldName & " from " &
        '                                     RptCboDet(1).TableName & " Where " & RptCboDet(2).Selection_FieldName & " = '" & cbo_Inputs1.Text & "')"
        '        End If

        '    Else

        '        If Len(Trim(Selection_Condition)) > 0 Then
        '            Selection_Condition = Selection_Condition + " and " + RptCboDet(2).Selection_FieldName & " in (Select " & RptCboDet(2).Selection_FieldName & " from " &
        '                                     RptCboDet(1).TableName & " Where " & RptCboDet(2).Prev_Id_Column & " = (Select RptCboDet(2).Prev_Id_Column " &
        '                                     " from " & RptCboDet(1).TableName & " where " & RptCboDet(1).Selection_FieldName & " = '" & cbo_Inputs1.Text & "'))"
        '        Else
        '            Selection_Condition = RptCboDet(2).Selection_FieldName & " in (Select " & RptCboDet(2).Selection_FieldName & " from " &
        '                                     RptCboDet(1).TableName & " Where " & RptCboDet(2).Prev_Id_Column & " = (Select RptCboDet(2).Prev_Id_Column " &
        '                                     " from " & RptCboDet(1).TableName & " where " & RptCboDet(1).Selection_FieldName & " = '" & cbo_Inputs1.Text & "'))"
        '        End If


        '    End If

        'End If

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(2).TableName, RptCboDet(2).Selection_FieldName, RptCboDet(2).Condition, RptCboDet(2).BlankFieldCondition)

    End Sub

    Private Sub cbo_Inputs3_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs3.Enter

        If Trim(LCase(RptIpDet_ReportName)).Contains("embroidery quotation") Then

            Dim ListVals() As String = {"RATE CONFIRMED", "RATE NOT CONFIRMED", "ALL"}
            Common_Procedures.ComboBox_ItemSelection_DirectValues(cbo_Inputs3, ListVals, True, False)
            'embroidery quotation register

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "order details" Or Trim(LCase(RptIpDet_ReportName)) = "order details - a" Or
             Trim(LCase(RptIpDet_ReportName)).Contains("embroidery inward register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery register") _
            Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery pending register") _
            Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery invoice register") Then

            If Len(Trim(cbo_Inputs2.Text)) > 0 Then
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderJobNo_Name", "OrderNo_Name In (Select Ordercode_forSelection from Order_Program_Head Where Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text) & ")", "")
            Else
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderJobNo_Name", "OrderNo_Name In (Select Ordercode_forSelection from Order_Program_Head) ", "")
            End If

        Else

            'Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(3).TableName, RptCboDet(3).Selection_FieldName, Selection_Condition, RptCboDet(3).BlankFieldCondition)
            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(3).TableName, RptCboDet(3).Selection_FieldName, RptCboDet(3).Condition, RptCboDet(3).BlankFieldCondition)

        End If
    End Sub

    Private Sub cbo_Inputs4_GotFocus(sender As Object, e As EventArgs) Handles cbo_Inputs4.GotFocus



    End Sub

    Private Sub cbo_Inputs5_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs5.Enter

        If Trim(LCase(RptIpDet_ReportName)) = "embroidery invoice register" Or Trim(LCase(RptIpDet_ReportName)) = "embroidery invoice register - 1" Then

            Dim ListVals() As String = {"DIRECT", "ORDER", "ALL"}
            Common_Procedures.ComboBox_ItemSelection_DirectValues(cbo_Inputs5, ListVals, True, False)

        ElseIf Trim(LCase(RptIpDet_ReportName)).Contains("embroidery inward register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery register") _
                                                Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery pending register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery invoice register") Then

            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Colour_Head", "Colour_Name",
                                                                   " Colour_IdNo In (Select Colour_IdNo from Simple_Receipt_Details Where " &
                                                                   " OrderCode_forSelection Like '%" & cbo_Inputs4.Text & "%' and Job_No like '%" & cbo_Inputs3.Text & "%' " &
                                                                   IIf(Len(Trim(cbo_Inputs2.Text)) > 0, " and Ledger_IdNo = " & Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs2.Text) & ")", ")"), "")

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "production register" Then

            If Len(Trim(cbo_Inputs5.Text)) > 0 Then
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderJobNo_Name", "OrderNo_Name In (Select Ordercode_forSelection from Order_Program_Head Where Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text) & ")", "")
            Else
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderJobNo_Name", "OrderNo_Name In (Select Ordercode_forSelection from Order_Program_Head) ", "")
            End If

        Else

            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(5).TableName, RptCboDet(5).Selection_FieldName, RptCboDet(5).Condition, RptCboDet(5).BlankFieldCondition)

        End If


    End Sub

    Private Sub cbo_Inputs6_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbo_Inputs6.SelectedIndexChanged

    End Sub



    Private Sub cbo_Inputs4_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs4.Enter

        If Trim(LCase(RptIpDet_ReportName)).Contains("embroidery quotation") Then

            Dim ListVals() As String = {"RATE CONFIRMED", "RATE Not CONFIRMED", "ALL"}
            Common_Procedures.ComboBox_ItemSelection_DirectValues(cbo_Inputs4, ListVals, True, False)

        ElseIf Trim(LCase(RptIpDet_ReportName)) = "order details" Or Trim(LCase(RptIpDet_ReportName)) = "order details - a" Or
            Trim(LCase(RptIpDet_ReportName)).Contains("embroidery inward register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery register") _
            Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery pending register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery invoice register") Then

            If Len(Trim(cbo_Inputs3.Text)) > 0 Then
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderNo_Name", "OrderJobNo_Name = '" & cbo_Inputs3.Text & "'", "")
            Else
                If Len(Trim(cbo_Inputs2.Text)) = 0 Then
                    Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Order_Program_Head", "Ordercode_forSelection", "", "")
                Else
                    Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Order_Program_Head", "Ordercode_forSelection", "Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text), "")
                End If
            End If

        Else

            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(4).TableName, RptCboDet(4).Selection_FieldName, RptCboDet(4).Condition, RptCboDet(4).BlankFieldCondition)

        End If
    End Sub

    Private Sub cbo_Inputs6_Enter(sender As Object, e As EventArgs) Handles cbo_Inputs6.Enter

        If Trim(LCase(RptIpDet_ReportName)).Contains("production register") Then

            If Len(Trim(cbo_Inputs5.Text)) > 0 Then
                Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "OrderJobNo_Head", "OrderNo_Name", "OrderJobNo_Name = '" & cbo_Inputs5.Text & "'", "")
            Else
                If Len(Trim(cbo_Inputs2.Text)) = 0 Then
                    Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Order_Program_Head", "Ordercode_forSelection", "", "")
                Else
                    Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Order_Program_Head", "Ordercode_forSelection", "Ledger_IdNo = " & Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Inputs2.Text), "")
                End If
            End If

        ElseIf Trim(LCase(RptIpDet_ReportName)).Contains("embroidery inward register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery register") _
                                            Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery delivery pending register") Or Trim(LCase(RptIpDet_ReportName)).Contains("embroidery invoice register") Then

            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Size_Head", "Size_Name",
                                                                   " Size_IdNo In (Select Size_IdNo from Simple_Receipt_Details Where " &
                                                                   " OrderCode_forSelection Like '%" & cbo_Inputs4.Text & "%' and Job_No like '%" & cbo_Inputs3.Text & "%' " &
                                                                   IIf(Len(Trim(cbo_Inputs2.Text)) > 0, " and Ledger_IdNo = " & Common_Procedures.Ledger_NameToIdNo(con, cbo_Inputs2.Text).ToString, "") &
                                                                   IIf(Len(Trim(cbo_Inputs3.Text)) > 0, " and Colour_IdNo = " & Common_Procedures.Colour_NameToIdNo(con, cbo_Inputs5.Text).ToString & ")", ")"), "")

        Else

            Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, RptCboDet(6).TableName, RptCboDet(6).Selection_FieldName, RptCboDet(6).Condition, RptCboDet(6).BlankFieldCondition)

        End If


    End Sub

    Private Sub cbo_Inputs5_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cbo_Inputs5.SelectedIndexChanged

    End Sub
End Class